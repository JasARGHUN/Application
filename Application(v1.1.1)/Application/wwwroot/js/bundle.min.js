/*!
// ███   █    ████▄    ▄▄▄▄▀ ▄▄▄▄▀ ▄███▄   █▄▄▄▄
// █  █  █    █   █ ▀▀▀ █ ▀▀▀ █    █▀   ▀  █  ▄▀
// █ ▀ ▄ █    █   █     █     █    ██▄▄    █▀▀▌
// █  ▄▀ ███▄ ▀████    █     █     █▄   ▄▀ █  █
// ███       ▀        ▀     ▀      ▀███▀     █
//                                          ▀
// The MIT License
//
// Copyright © 1986 - ∞, Blotter / Bradley Griffith / http://bradley.computer
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
*/
!function(){var o="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||this,bt=o._,l=Array.prototype,p=Object.prototype,tt="undefined"!=typeof Symbol?Symbol.prototype:null,kt=l.push,s=l.slice,h=p.toString,dt=p.hasOwnProperty,gt=Array.isArray,it=Object.keys,rt=Object.create,w=function(){},n=function(t){return t instanceof n?t:this instanceof n?void(this._wrapped=t):new n(t)},ut,e,t,b,c,ot,f,k,d,g,a,lt,v,at,vt,wt,y;"undefined"==typeof exports||exports.nodeType?o._=n:("undefined"!=typeof module&&!module.nodeType&&module.exports&&(exports=module.exports=n),exports._=n);n.VERSION="1.8.3";e=function(n,t,i){if(void 0===t)return n;switch(null==i?3:i){case 1:return function(i){return n.call(t,i)};case 3:return function(i,r,u){return n.call(t,i,r,u)};case 4:return function(i,r,u,f){return n.call(t,i,r,u,f)}}return function(){return n.apply(t,arguments)}};t=function(t,i,r){return n.iteratee!==ut?n.iteratee(t,i):null==t?n.identity:n.isFunction(t)?e(t,i,r):n.isObject(t)?n.matcher(t):n.property(t)};n.iteratee=ut=function(n,i){return t(n,i,1/0)};var r=function(n,t){return t=null==t?n.length-1:+t,function(){for(var u,f=Math.max(arguments.length-t,0),r=Array(f),i=0;i<f;i++)r[i]=arguments[i+t];switch(t){case 0:return n.call(this,r);case 1:return n.call(this,arguments[0],r);case 2:return n.call(this,arguments[0],arguments[1],r)}for(u=Array(t+1),i=0;i<t;i++)u[i]=arguments[i];return u[t]=r,n.apply(this,u)}},ft=function(t){if(!n.isObject(t))return{};if(rt)return rt(t);w.prototype=t;var i=new w;return w.prototype=null,i},et=function(n){return function(t){if(null!=t)return t[n]}},ni=Math.pow(2,53)-1,u=et("length"),i=function(n){var t=u(n);return"number"==typeof t&&t>=0&&t<=ni};n.each=n.forEach=function(t,r,u){var f,o,s;if(r=e(r,u),i(t))for(f=0,o=t.length;f<o;f++)r(t[f],f,t);else for(s=n.keys(t),f=0,o=s.length;f<o;f++)r(t[s[f]],s[f],t);return t};n.map=n.collect=function(r,u,f){var s;u=t(u,f);for(var o=!i(r)&&n.keys(r),h=(o||r).length,c=Array(h),e=0;e<h;e++)s=o?o[e]:e,c[e]=u(r[s],s,r);return c};b=function(t){var r=function(r,u,f,e){var s=!i(r)&&n.keys(r),c=(s||r).length,o=t>0?0:c-1,h;for(e||(f=r[s?s[o]:o],o+=t);o>=0&&o<c;o+=t)h=s?s[o]:o,f=u(f,r[h],h,r);return f};return function(n,t,i,u){var f=arguments.length>=3;return r(n,e(t,u,4),i,f)}};n.reduce=n.foldl=n.inject=b(1);n.reduceRight=n.foldr=b(-1);n.find=n.detect=function(t,r,u){var e=i(t)?n.findIndex:n.findKey,f=e(t,r,u);if(void 0!==f&&-1!==f)return t[f]};n.filter=n.select=function(i,r,u){var f=[];return r=t(r,u),n.each(i,function(n,t,i){r(n,t,i)&&f.push(n)}),f};n.reject=function(i,r,u){return n.filter(i,n.negate(t(r)),u)};n.every=n.all=function(r,u,f){var s;u=t(u,f);for(var o=!i(r)&&n.keys(r),h=(o||r).length,e=0;e<h;e++)if(s=o?o[e]:e,!u(r[s],s,r))return!1;return!0};n.some=n.any=function(r,u,f){var s;u=t(u,f);for(var o=!i(r)&&n.keys(r),h=(o||r).length,e=0;e<h;e++)if(s=o?o[e]:e,u(r[s],s,r))return!0;return!1};n.contains=n.includes=n.include=function(t,r,u,f){return i(t)||(t=n.values(t)),("number"!=typeof u||f)&&(u=0),n.indexOf(t,r,u)>=0};n.invoke=r(function(t,i,r){var u=n.isFunction(i);return n.map(t,function(n){var t=u?i:n[i];return null==t?t:t.apply(n,r)})});n.pluck=function(t,i){return n.map(t,n.property(i))};n.where=function(t,i){return n.filter(t,n.matcher(i))};n.findWhere=function(t,i){return n.find(t,n.matcher(i))};n.max=function(r,u,f){var s,h,e=-1/0,c=-1/0,o,l;if(null==u||"number"==typeof u&&"object"!=typeof r[0]&&null!=r)for(r=i(r)?r:n.values(r),o=0,l=r.length;o<l;o++)null!=(s=r[o])&&s>e&&(e=s);else u=t(u,f),n.each(r,function(n,t,i){((h=u(n,t,i))>c||h===-1/0&&e===-1/0)&&(e=n,c=h)});return e};n.min=function(r,u,f){var s,h,e=1/0,c=1/0,o,l;if(null==u||"number"==typeof u&&"object"!=typeof r[0]&&null!=r)for(r=i(r)?r:n.values(r),o=0,l=r.length;o<l;o++)null!=(s=r[o])&&s<e&&(e=s);else u=t(u,f),n.each(r,function(n,t,i){((h=u(n,t,i))<c||h===1/0&&e===1/0)&&(e=n,c=h)});return e};n.shuffle=function(t){return n.sample(t,1/0)};n.sample=function(t,r,f){var e,s,c,o,h,l;if(null==r||f)return i(t)||(t=n.values(t)),t[n.random(t.length-1)];for(e=i(t)?n.clone(t):n.values(t),s=u(e),r=Math.max(Math.min(r,s),0),c=s-1,o=0;o<r;o++)h=n.random(o,c),l=e[o],e[o]=e[h],e[h]=l;return e.slice(0,r)};n.sortBy=function(i,r,u){var f=0;return r=t(r,u),n.pluck(n.map(i,function(n,t,i){return{value:n,index:f++,criteria:r(n,t,i)}}).sort(function(n,t){var i=n.criteria,r=t.criteria;if(i!==r){if(i>r||void 0===i)return 1;if(i<r||void 0===r)return-1}return n.index-t.index}),"value")};c=function(i,r){return function(u,f,e){var o=r?[[],[]]:{};return f=t(f,e),n.each(u,function(n,t){var r=f(n,t,u);i(o,n,r)}),o}};n.groupBy=c(function(t,i,r){n.has(t,r)?t[r].push(i):t[r]=[i]});n.indexBy=c(function(n,t,i){n[i]=t});n.countBy=c(function(t,i,r){n.has(t,r)?t[r]++:t[r]=1});ot=/[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;n.toArray=function(t){return t?n.isArray(t)?s.call(t):n.isString(t)?t.match(ot):i(t)?n.map(t,n.identity):n.values(t):[]};n.size=function(t){return null==t?0:i(t)?t.length:n.keys(t).length};n.partition=c(function(n,t,i){n[i?0:1].push(t)},!0);n.first=n.head=n.take=function(t,i,r){if(null!=t)return null==i||r?t[0]:n.initial(t,t.length-i)};n.initial=function(n,t,i){return s.call(n,0,Math.max(0,n.length-(null==t||i?1:t)))};n.last=function(t,i,r){if(null!=t)return null==i||r?t[t.length-1]:n.rest(t,Math.max(0,t.length-i))};n.rest=n.tail=n.drop=function(n,t,i){return s.call(n,null==t||i?1:t)};n.compact=function(t){return n.filter(t,Boolean)};f=function(t,r,e,o){var s,l,a;o=o||[];for(var h=o.length,c=0,v=u(t);c<v;c++)if(s=t[c],i(s)&&(n.isArray(s)||n.isArguments(s)))if(r)for(l=0,a=s.length;l<a;)o[h++]=s[l++];else f(s,r,e,o),h=o.length;else e||(o[h++]=s);return o};n.flatten=function(n,t){return f(n,t,!1)};n.without=r(function(t,i){return n.difference(t,i)});n.uniq=n.unique=function(i,r,f,e){var o,c;n.isBoolean(r)||(e=f,f=r,r=!1);null!=f&&(f=t(f,e));for(var s=[],l=[],h=0,a=u(i);h<a;h++)o=i[h],c=f?f(o,h,i):o,r?(h&&l===c||s.push(o),l=c):f?n.contains(l,c)||(l.push(c),s.push(o)):n.contains(s,o)||s.push(o);return s};n.union=r(function(t){return n.uniq(f(t,!0,!0))});n.intersection=function(t){for(var r,i,f=[],o=arguments.length,e=0,s=u(t);e<s;e++)if(r=t[e],!n.contains(f,r)){for(i=1;i<o&&n.contains(arguments[i],r);i++);i===o&&f.push(r)}return f};n.difference=r(function(t,i){return i=f(i,!0,!0),n.filter(t,function(t){return!n.contains(i,t)})});n.unzip=function(t){for(var r=t&&n.max(t,u).length||0,f=Array(r),i=0;i<r;i++)f[i]=n.pluck(t,i);return f};n.zip=r(n.unzip);n.object=function(n,t){for(var r={},i=0,f=u(n);i<f;i++)t?r[n[i]]=t[i]:r[n[i][0]]=n[i][1];return r};k=function(n){return function(i,r,f){r=t(r,f);for(var o=u(i),e=n>0?0:o-1;e>=0&&e<o;e+=n)if(r(i[e],e,i))return e;return-1}};n.findIndex=k(1);n.findLastIndex=k(-1);n.sortedIndex=function(n,i,r,f){var o;r=t(r,f,1);for(var h=r(i),e=0,s=u(n);e<s;)o=Math.floor((e+s)/2),r(n[o])<h?e=o+1:s=o;return e};d=function(t,i,r){return function(f,e,o){var c=0,h=u(f);if("number"==typeof o)t>0?c=o>=0?o:Math.max(o+h,c):h=o>=0?Math.min(o+1,h):o+h+1;else if(r&&o&&h)return o=r(f,e),f[o]===e?o:-1;if(e!==e)return o=i(s.call(f,c,h),n.isNaN),o>=0?o+c:-1;for(o=t>0?c:h-1;o>=0&&o<h;o+=t)if(f[o]===e)return o;return-1}};n.indexOf=d(1,n.findIndex,n.sortedIndex);n.lastIndexOf=d(-1,n.findLastIndex);n.range=function(n,t,i){null==t&&(t=n||0,n=0);i||(i=t<n?-1:1);for(var u=Math.max(Math.ceil((t-n)/i),0),f=Array(u),r=0;r<u;r++,n+=i)f[r]=n;return f};n.chunk=function(n,t){if(null==t||t<1)return[];for(var r=[],i=0,u=n.length;i<u;)r.push(s.call(n,i,i+=t));return r};g=function(t,i,r,u,f){if(!(u instanceof i))return t.apply(r,f);var e=ft(t.prototype),o=t.apply(e,f);return n.isObject(o)?o:e};n.bind=r(function(t,i,u){if(!n.isFunction(t))throw new TypeError("Bind must be called on a function");var f=r(function(n){return g(t,f,i,this,u.concat(n))});return f});n.partial=r(function(t,i){var u=n.partial.placeholder,r=function(){for(var f=0,o=i.length,e=Array(o),n=0;n<o;n++)e[n]=i[n]===u?arguments[f++]:i[n];for(;f<arguments.length;)e.push(arguments[f++]);return g(t,r,this,this,e)};return r});n.partial.placeholder=n;n.bindAll=r(function(t,i){var r,u;if(i=f(i,!1,!1),r=i.length,r<1)throw new Error("bindAll must be passed function names");for(;r--;)u=i[r],t[u]=n.bind(t[u],t)});n.memoize=function(t,i){var r=function(u){var f=r.cache,e=""+(i?i.apply(this,arguments):u);return n.has(f,e)||(f[e]=t.apply(this,arguments)),f[e]};return r.cache={},r};n.delay=r(function(n,t,i){return setTimeout(function(){return n.apply(null,i)},t)});n.defer=n.partial(n.delay,n,1);n.throttle=function(t,i,r){var u,f,e,s,o=0,c,h;return r||(r={}),c=function(){o=!1===r.leading?0:n.now();u=null;s=t.apply(f,e);u||(f=e=null)},h=function(){var l=n.now(),h;return o||!1!==r.leading||(o=l),h=i-(l-o),f=this,e=arguments,h<=0||h>i?(u&&(clearTimeout(u),u=null),o=l,s=t.apply(f,e),u||(f=e=null)):u||!1===r.trailing||(u=setTimeout(c,h)),s},h.cancel=function(){clearTimeout(u);o=0;u=f=e=null},h};n.debounce=function(t,i,u){var f,e,o=function(n,i){f=null;i&&(e=t.apply(n,i))},s=r(function(r){if(f&&clearTimeout(f),u){var s=!f;f=setTimeout(o,i);s&&(e=t.apply(this,r))}else f=n.delay(o,i,this,r);return e});return s.cancel=function(){clearTimeout(f);f=null},s};n.wrap=function(t,i){return n.partial(i,t)};n.negate=function(n){return function(){return!n.apply(this,arguments)}};n.compose=function(){var n=arguments,t=n.length-1;return function(){for(var r=t,i=n[t].apply(this,arguments);r--;)i=n[r].call(this,i);return i}};n.after=function(n,t){return function(){if(--n<1)return t.apply(this,arguments)}};n.before=function(n,t){var i;return function(){return--n>0&&(i=t.apply(this,arguments)),n<=1&&(t=null),i}};n.once=n.partial(n.before,2);n.restArgs=r;var st=!{toString:null}.propertyIsEnumerable("toString"),ht=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],ct=function(t,i){var u=ht.length,f=t.constructor,e=n.isFunction(f)&&f.prototype||p,r="constructor";for(n.has(t,r)&&!n.contains(i,r)&&i.push(r);u--;)(r=ht[u])in t&&t[r]!==e[r]&&!n.contains(i,r)&&i.push(r)};n.keys=function(t){var i,r;if(!n.isObject(t))return[];if(it)return it(t);i=[];for(r in t)n.has(t,r)&&i.push(r);return st&&ct(t,i),i};n.allKeys=function(t){var i,r;if(!n.isObject(t))return[];i=[];for(r in t)i.push(r);return st&&ct(t,i),i};n.values=function(t){for(var r=n.keys(t),u=r.length,f=Array(u),i=0;i<u;i++)f[i]=t[r[i]];return f};n.mapObject=function(i,r,u){var f;r=t(r,u);for(var o=n.keys(i),h=o.length,s={},e=0;e<h;e++)f=o[e],s[f]=r(i[f],f,i);return s};n.pairs=function(t){for(var r=n.keys(t),u=r.length,f=Array(u),i=0;i<u;i++)f[i]=[r[i],t[r[i]]];return f};n.invert=function(t){for(var u={},r=n.keys(t),i=0,f=r.length;i<f;i++)u[t[r[i]]]=r[i];return u};n.functions=n.methods=function(t){var i=[];for(var r in t)n.isFunction(t[r])&&i.push(r);return i.sort()};a=function(n,t){return function(i){var e=arguments.length,r,u;if(t&&(i=Object(i)),e<2||null==i)return i;for(r=1;r<e;r++)for(var o=arguments[r],s=n(o),h=s.length,f=0;f<h;f++)u=s[f],t&&void 0!==i[u]||(i[u]=o[u]);return i}};n.extend=a(n.allKeys);n.extendOwn=n.assign=a(n.keys);n.findKey=function(i,r,u){r=t(r,u);for(var f,o=n.keys(i),e=0,s=o.length;e<s;e++)if(f=o[e],r(i[f],f,i))return f};lt=function(n,t,i){return t in i};n.pick=r(function(t,i){var s={},r=i[0],u,c,o,h;if(null==t)return s;for(n.isFunction(r)?(i.length>1&&(r=e(r,i[1])),i=n.allKeys(t)):(r=lt,i=f(i,!1,!1),t=Object(t)),u=0,c=i.length;u<c;u++)o=i[u],h=t[o],r(h,o,t)&&(s[o]=h);return s});n.omit=r(function(t,i){var u,r=i[0];return n.isFunction(r)?(r=n.negate(r),i.length>1&&(u=i[1])):(i=n.map(f(i,!1,!1),String),r=function(t,r){return!n.contains(i,r)}),n.pick(t,r,u)});n.defaults=a(n.allKeys,!0);n.create=function(t,i){var r=ft(t);return i&&n.extendOwn(r,i),r};n.clone=function(t){return n.isObject(t)?n.isArray(t)?t.slice():n.extend({},t):t};n.tap=function(n,t){return t(n),n};n.isMatch=function(t,i){var e=n.keys(i),o=e.length,f,r,u;if(null==t)return!o;for(f=Object(t),r=0;r<o;r++)if(u=e[r],i[u]!==f[u]||!(u in f))return!1;return!0};v=function(n,t,i,r){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;if(n!==n)return t!==t;var u=typeof n;return("function"===u||"object"===u||"object"==typeof t)&&at(n,t,i,r)};at=function(t,i,r,u){var s,l,e,o,f,c,a;if(t instanceof n&&(t=t._wrapped),i instanceof n&&(i=i._wrapped),s=h.call(t),s!==h.call(i))return!1;switch(s){case"[object RegExp]":case"[object String]":return""+t==""+i;case"[object Number]":return+t!=+t?+i!=+i:0==+t?1/+t==1/i:+t==+i;case"[object Date]":case"[object Boolean]":return+t==+i;case"[object Symbol]":return tt.valueOf.call(t)===tt.valueOf.call(i)}if(l="[object Array]"===s,!l&&("object"!=typeof t||"object"!=typeof i||(e=t.constructor,o=i.constructor,e!==o&&!(n.isFunction(e)&&e instanceof e&&n.isFunction(o)&&o instanceof o)&&"constructor"in t&&"constructor"in i)))return!1;for(r=r||[],u=u||[],f=r.length;f--;)if(r[f]===t)return u[f]===i;if(r.push(t),u.push(i),l){if((f=t.length)!==i.length)return!1;for(;f--;)if(!v(t[f],i[f],r,u))return!1}else{if(a=n.keys(t),f=a.length,n.keys(i).length!==f)return!1;for(;f--;)if(c=a[f],!n.has(i,c)||!v(t[c],i[c],r,u))return!1}return r.pop(),u.pop(),!0};n.isEqual=function(n,t){return v(n,t)};n.isEmpty=function(t){return null==t||(i(t)&&(n.isArray(t)||n.isString(t)||n.isArguments(t))?0===t.length:0===n.keys(t).length)};n.isElement=function(n){return!(!n||1!==n.nodeType)};n.isArray=gt||function(n){return"[object Array]"===h.call(n)};n.isObject=function(n){var t=typeof n;return"function"===t||"object"===t&&!!n};n.each(["Arguments","Function","String","Number","Date","RegExp","Error","Symbol","Map","WeakMap","Set","WeakSet"],function(t){n["is"+t]=function(n){return h.call(n)==="[object "+t+"]"}});n.isArguments(arguments)||(n.isArguments=function(t){return n.has(t,"callee")});vt=o.document&&o.document.childNodes;"function"!=typeof/./&&"object"!=typeof Int8Array&&"function"!=typeof vt&&(n.isFunction=function(n){return"function"==typeof n||!1});n.isFinite=function(t){return!n.isSymbol(t)&&isFinite(t)&&!isNaN(parseFloat(t))};n.isNaN=function(t){return isNaN(t)&&n.isNumber(t)};n.isBoolean=function(n){return!0===n||!1===n||"[object Boolean]"===h.call(n)};n.isNull=function(n){return null===n};n.isUndefined=function(n){return void 0===n};n.has=function(n,t){return null!=n&&dt.call(n,t)};n.noConflict=function(){return o._=bt,this};n.identity=function(n){return n};n.constant=function(n){return function(){return n}};n.noop=function(){};n.property=et;n.propertyOf=function(n){return null==n?function(){}:function(t){return n[t]}};n.matcher=n.matches=function(t){return t=n.extendOwn({},t),function(i){return n.isMatch(i,t)}};n.times=function(n,t,i){var u=Array(Math.max(0,n)),r;for(t=e(t,i,1),r=0;r<n;r++)u[r]=t(r);return u};n.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};n.now=Date.now||function(){return(new Date).getTime()};var yt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},ti=n.invert(yt),pt=function(t){var r=function(n){return t[n]},i="(?:"+n.keys(t).join("|")+")",u=RegExp(i),f=RegExp(i,"g");return function(n){return n=null==n?"":""+n,u.test(n)?n.replace(f,r):n}};n.escape=pt(yt);n.unescape=pt(ti);n.result=function(t,i,r){var u=null==t?void 0:t[i];return void 0===u&&(u=r),n.isFunction(u)?u.call(t):u};wt=0;n.uniqueId=function(n){var t=++wt+"";return n?n+t:t};n.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var nt=/(.)^/,ii={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},ri=/\\|'|\r|\n|\u2028|\u2029/g,ui=function(n){return"\\"+ii[n]};n.template=function(t,i,r){var o,f,s;!i&&r&&(i=r);i=n.defaults({},i,n.templateSettings);var h=RegExp([(i.escape||nt).source,(i.interpolate||nt).source,(i.evaluate||nt).source].join("|")+"|$","g"),e=0,u="__p+='";t.replace(h,function(n,i,r,f,o){return u+=t.slice(e,o).replace(ri,ui),e=o+n.length,i?u+="'+\n((__t=("+i+"))==null?'':_.escape(__t))+\n'":r?u+="'+\n((__t=("+r+"))==null?'':__t)+\n'":f&&(u+="';\n"+f+"\n__p+='"),n});u+="';\n";i.variable||(u="with(obj||{}){\n"+u+"}\n");u="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+u+"return __p;\n";try{o=new Function(i.variable||"obj","_",u)}catch(t){throw t.source=u,t;}return f=function(t){return o.call(this,t,n)},s=i.variable||"obj",f.source="function("+s+"){\n"+u+"}",f};n.chain=function(t){var i=n(t);return i._chain=!0,i};y=function(t,i){return t._chain?n(i).chain():i};n.mixin=function(t){return n.each(n.functions(t),function(i){var r=n[i]=t[i];n.prototype[i]=function(){var t=[this._wrapped];return kt.apply(t,arguments),y(this,r.apply(n,t))}}),n};n.mixin(n);n.each(["pop","push","reverse","shift","sort","splice","unshift"],function(t){var i=l[t];n.prototype[t]=function(){var n=this._wrapped;return i.apply(n,arguments),"shift"!==t&&"splice"!==t||0!==n.length||delete n[0],y(this,n)}});n.each(["concat","join","slice"],function(t){var i=l[t];n.prototype[t]=function(){return y(this,i.apply(this._wrapped,arguments))}});n.prototype.value=function(){return this._wrapped};n.prototype.valueOf=n.prototype.toJSON=n.prototype.value;n.prototype.toString=function(){return""+this._wrapped};"function"==typeof define&&define.amd&&define("underscore",[],function(){return n})}(),function(n,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(n.THREE={})}(this,function(n){"use strict";function et(){}function r(n,t){this.x=n||0;this.y=t||0}function u(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function y(n,t,i,r){this._x=n||0;this._y=t||0;this._z=i||0;this._w=void 0!==r?r:1}function t(n,t,i){this.x=n||0;this.y=t||0;this.z=i||0}function w(){this.elements=[1,0,0,0,1,0,0,0,1];arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function l(n,t,i,u,f,e,s,h,c,a){Object.defineProperty(this,"id",{value:se++});this.uuid=o.generateUUID();this.name="";this.image=void 0!==n?n:l.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==t?t:l.DEFAULT_MAPPING;this.wrapS=void 0!==i?i:d;this.wrapT=void 0!==u?u:d;this.magFilter=void 0!==f?f:ct;this.minFilter=void 0!==e?e:bf;this.anisotropy=void 0!==c?c:1;this.format=void 0!==s?s:nt;this.type=void 0!==h?h:pi;this.offset=new r(0,0);this.repeat=new r(1,1);this.center=new r(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new w;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=void 0!==a?a:bi;this.version=0;this.onUpdate=null}function s(n,t,i,r){this.x=n||0;this.y=t||0;this.z=i||0;this.w=void 0!==r?r:1}function oi(n,t,i){this.uuid=o.generateUUID();this.width=n;this.height=t;this.scissor=new s(0,0,n,t);this.scissorTest=!1;this.viewport=new s(0,0,n,t);i=i||{};void 0===i.minFilter&&(i.minFilter=ct);this.texture=new l(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding);this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer;this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer;this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function lt(n,t,i,r,u,f,e,o,s,h,c,a){l.call(this,null,f,e,o,s,h,r,u,c,a);this.image={data:n,width:t,height:i};this.magFilter=void 0!==s?s:g;this.minFilter=void 0!==h?h:g;this.generateMipmaps=!1;this.flipY=!1;this.unpackAlignment=1}function at(n,t,i,r,u,f,e,o,s,h){n=void 0!==n?n:[];t=void 0!==t?t:lf;l.call(this,n,t,i,r,u,f,e,o,s,h);this.flipY=!1}function ru(){this.seq=[];this.map={}}function vt(n,t,i){var e=n[0],u,r,f,o;if(e<=0||e>0)return n;if(u=t*i,r=le[u],void 0===r&&(r=new Float32Array(u),le[u]=r),0!==t)for(e.toArray(r,0),f=1,o=0;f!==t;++f)o+=i,n[f].toArray(r,o);return r}function uu(n,t){var i=ae[t],r;for(void 0===i&&(i=new Int32Array(t),ae[t]=i),r=0;r!==t;++r)i[r]=n.allocTextureUnit();return i}function no(n,t){n.uniform1f(this.addr,t)}function to(n,t){n.uniform1i(this.addr,t)}function io(n,t){void 0===t.x?n.uniform2fv(this.addr,t):n.uniform2f(this.addr,t.x,t.y)}function ro(n,t){void 0!==t.x?n.uniform3f(this.addr,t.x,t.y,t.z):void 0!==t.r?n.uniform3f(this.addr,t.r,t.g,t.b):n.uniform3fv(this.addr,t)}function uo(n,t){void 0===t.x?n.uniform4fv(this.addr,t):n.uniform4f(this.addr,t.x,t.y,t.z,t.w)}function fo(n,t){n.uniformMatrix2fv(this.addr,!1,t.elements||t)}function eo(n,t){void 0===t.elements?n.uniformMatrix3fv(this.addr,!1,t):(ye.set(t.elements),n.uniformMatrix3fv(this.addr,!1,ye))}function oo(n,t){void 0===t.elements?n.uniformMatrix4fv(this.addr,!1,t):(ve.set(t.elements),n.uniformMatrix4fv(this.addr,!1,ve))}function so(n,t,i){var r=i.allocTextureUnit();n.uniform1i(this.addr,r);i.setTexture2D(t||he,r)}function ho(n,t,i){var r=i.allocTextureUnit();n.uniform1i(this.addr,r);i.setTextureCube(t||ce,r)}function fu(n,t){n.uniform2iv(this.addr,t)}function eu(n,t){n.uniform3iv(this.addr,t)}function ou(n,t){n.uniform4iv(this.addr,t)}function co(n){switch(n){case 5126:return no;case 35664:return io;case 35665:return ro;case 35666:return uo;case 35674:return fo;case 35675:return eo;case 35676:return oo;case 35678:case 36198:return so;case 35680:return ho;case 5124:case 35670:return to;case 35667:case 35671:return fu;case 35668:case 35672:return eu;case 35669:case 35673:return ou}}function lo(n,t){n.uniform1fv(this.addr,t)}function ao(n,t){n.uniform1iv(this.addr,t)}function vo(n,t){n.uniform2fv(this.addr,vt(t,this.size,2))}function yo(n,t){n.uniform3fv(this.addr,vt(t,this.size,3))}function po(n,t){n.uniform4fv(this.addr,vt(t,this.size,4))}function wo(n,t){n.uniformMatrix2fv(this.addr,!1,vt(t,this.size,4))}function bo(n,t){n.uniformMatrix3fv(this.addr,!1,vt(t,this.size,9))}function ko(n,t){n.uniformMatrix4fv(this.addr,!1,vt(t,this.size,16))}function go(n,t,i){var u=t.length,f=uu(i,u),r;for(n.uniform1iv(this.addr,f),r=0;r!==u;++r)i.setTexture2D(t[r]||he,f[r])}function ns(n,t,i){var u=t.length,f=uu(i,u),r;for(n.uniform1iv(this.addr,f),r=0;r!==u;++r)i.setTextureCube(t[r]||ce,f[r])}function ts(n){switch(n){case 5126:return lo;case 35664:return vo;case 35665:return yo;case 35666:return po;case 35674:return wo;case 35675:return bo;case 35676:return ko;case 35678:return go;case 35680:return ns;case 5124:case 35670:return ao;case 35667:case 35671:return fu;case 35668:case 35672:return eu;case 35669:case 35673:return ou}}function is(n,t,i){this.id=n;this.addr=i;this.setValue=co(t.type)}function rs(n,t,i){this.id=n;this.addr=i;this.size=t.size;this.setValue=ts(t.type)}function su(n){this.id=n;ru.call(this)}function hu(n,t){n.seq.push(t);n.map[t.id]=t}function us(n,t,i){var o=n.name,h=o.length,s,u;for(ki.lastIndex=0;;){var f=ki.exec(o),c=ki.lastIndex,r=f[1],l="]"===f[2],e=f[3];if(l&&(r|=0),void 0===e||"["===e&&c+2===h){hu(i,void 0===e?new is(r,n,t):new rs(r,n,t));break}s=i.map;u=s[r];void 0===u&&(u=new su(r),hu(i,u));i=u}}function ot(n,t,i){var f,r,u,e;for(ru.call(this),this.renderer=i,f=n.getProgramParameter(t,n.ACTIVE_UNIFORMS),r=0;r<f;++r)u=n.getActiveUniform(t,r),e=u.name,us(u,n.getUniformLocation(t,e),this)}function c(n,t,i){return void 0===t&&void 0===i?this.set(n):this.setRGB(n,t,i)}function cu(n,t){this.min=void 0!==n?n:new r(1/0,1/0);this.max=void 0!==t?t:new r(-1/0,-1/0)}function fs(n,i,u,f,e){function p(){var n=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),t=new Uint16Array([0,1,2,0,2,3]);l=i.createBuffer();a=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,l);i.bufferData(i.ARRAY_BUFFER,n,i.STATIC_DRAW);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,a);i.bufferData(i.ELEMENT_ARRAY_BUFFER,t,i.STATIC_DRAW);c=i.createTexture();v=i.createTexture();u.bindTexture(i.TEXTURE_2D,c);i.texImage2D(i.TEXTURE_2D,0,i.RGB,16,16,0,i.RGB,i.UNSIGNED_BYTE,null);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST);u.bindTexture(i.TEXTURE_2D,v);i.texImage2D(i.TEXTURE_2D,0,i.RGBA,16,16,0,i.RGBA,i.UNSIGNED_BYTE,null);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST);i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST);y={vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\n\tvUV = uv;\n\tvec2 pos = position;\n\tif ( renderType == 2 ) {\n\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\n\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\n\t\tvVisibility =        visibility.r / 9.0;\n\t\tvVisibility *= 1.0 - visibility.g / 9.0;\n\t\tvVisibility *=       visibility.b / 9.0;\n\t\tvVisibility *= 1.0 - visibility.a / 9.0;\n\t\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\n\t\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n\t}\n\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\n\tif ( renderType == 0 ) {\n\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n\t} else if ( renderType == 1 ) {\n\t\tgl_FragColor = texture2D( map, vUV );\n\t} else {\n\t\tvec4 texture = texture2D( map, vUV );\n\t\ttexture.a *= opacity * vVisibility;\n\t\tgl_FragColor = texture;\n\t\tgl_FragColor.rgb *= color;\n\t}\n}"};o=w(y);h={vertex:i.getAttribLocation(o,"position"),uv:i.getAttribLocation(o,"uv")};s={renderType:i.getUniformLocation(o,"renderType"),map:i.getUniformLocation(o,"map"),occlusionMap:i.getUniformLocation(o,"occlusionMap"),opacity:i.getUniformLocation(o,"opacity"),color:i.getUniformLocation(o,"color"),scale:i.getUniformLocation(o,"scale"),rotation:i.getUniformLocation(o,"rotation"),screenPosition:i.getUniformLocation(o,"screenPosition")}}function w(n){var t=i.createProgram(),r=i.createShader(i.FRAGMENT_SHADER),u=i.createShader(i.VERTEX_SHADER),f="precision "+e.precision+" float;\n";return i.shaderSource(r,f+n.fragmentShader),i.shaderSource(u,f+n.vertexShader),i.compileShader(r),i.compileShader(u),i.attachShader(t,r),i.attachShader(t,u),i.linkProgram(t),t}var l,a,y,o,h,s,c,v;this.render=function(n,e,y,w){var rt,ht,d,ut,ct,b;if(0!==n.length){var it=new t,ft=w.w/w.z,ot=.5*w.z,st=.5*w.w,g=16/w.w,nt=new r(g*ft,g),k=new t(1,1,0),tt=new r(1,1),et=new cu;for(et.min.set(w.x,w.y),et.max.set(w.x+(w.z-16),w.y+(w.w-16)),void 0===o&&p(),u.useProgram(o),u.initAttributes(),u.enableAttribute(h.vertex),u.enableAttribute(h.uv),u.disableUnusedAttributes(),i.uniform1i(s.occlusionMap,0),i.uniform1i(s.map,1),i.bindBuffer(i.ARRAY_BUFFER,l),i.vertexAttribPointer(h.vertex,2,i.FLOAT,!1,16,0),i.vertexAttribPointer(h.uv,2,i.FLOAT,!1,16,8),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,a),u.disable(i.CULL_FACE),u.buffers.depth.setMask(!1),rt=0,ht=n.length;rt<ht;rt++)if(g=16/w.w,nt.set(g*ft,g),d=n[rt],it.set(d.matrixWorld.elements[12],d.matrixWorld.elements[13],d.matrixWorld.elements[14]),it.applyMatrix4(y.matrixWorldInverse),it.applyMatrix4(y.projectionMatrix),k.copy(it),tt.x=w.x+k.x*ot+ot-8,tt.y=w.y+k.y*st+st-8,!0===et.containsPoint(tt))for(u.activeTexture(i.TEXTURE0),u.bindTexture(i.TEXTURE_2D,null),u.activeTexture(i.TEXTURE1),u.bindTexture(i.TEXTURE_2D,c),i.copyTexImage2D(i.TEXTURE_2D,0,i.RGB,tt.x,tt.y,16,16,0),i.uniform1i(s.renderType,0),i.uniform2f(s.scale,nt.x,nt.y),i.uniform3f(s.screenPosition,k.x,k.y,k.z),u.disable(i.BLEND),u.enable(i.DEPTH_TEST),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0),u.activeTexture(i.TEXTURE0),u.bindTexture(i.TEXTURE_2D,v),i.copyTexImage2D(i.TEXTURE_2D,0,i.RGBA,tt.x,tt.y,16,16,0),i.uniform1i(s.renderType,1),u.disable(i.DEPTH_TEST),u.activeTexture(i.TEXTURE1),u.bindTexture(i.TEXTURE_2D,c),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0),d.positionScreen.copy(k),d.customUpdateCallback?d.customUpdateCallback(d):d.updateLensFlares(),i.uniform1i(s.renderType,2),u.enable(i.BLEND),ut=0,ct=d.lensFlares.length;ut<ct;ut++)b=d.lensFlares[ut],b.opacity>.001&&b.scale>.001&&(k.x=b.x,k.y=b.y,k.z=b.z,g=b.size*b.scale/w.w,nt.x=g*ft,nt.y=g,i.uniform3f(s.screenPosition,k.x,k.y,k.z),i.uniform2f(s.scale,nt.x,nt.y),i.uniform1f(s.rotation,b.rotation),i.uniform1f(s.opacity,b.opacity),i.uniform3f(s.color,b.color.r,b.color.g,b.color.b),u.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst),f.setTexture2D(b.texture,1),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0));u.enable(i.CULL_FACE);u.enable(i.DEPTH_TEST);u.buffers.depth.setMask(!0);u.reset()}}}function si(n,t,i,r,u,f,e,o,s){l.call(this,n,t,i,r,u,f,e,o,s);this.needsUpdate=!0}function es(n,i,r,u,f){function v(){var r=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),u=new Uint16Array([0,1,2,0,2,3]),n,t;h=i.createBuffer();c=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,h);i.bufferData(i.ARRAY_BUFFER,r,i.STATIC_DRAW);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,c);i.bufferData(i.ELEMENT_ARRAY_BUFFER,u,i.STATIC_DRAW);e=p();s={position:i.getAttribLocation(e,"position"),uv:i.getAttribLocation(e,"uv")};o={uvOffset:i.getUniformLocation(e,"uvOffset"),uvScale:i.getUniformLocation(e,"uvScale"),rotation:i.getUniformLocation(e,"rotation"),scale:i.getUniformLocation(e,"scale"),color:i.getUniformLocation(e,"color"),map:i.getUniformLocation(e,"map"),opacity:i.getUniformLocation(e,"opacity"),modelViewMatrix:i.getUniformLocation(e,"modelViewMatrix"),projectionMatrix:i.getUniformLocation(e,"projectionMatrix"),fogType:i.getUniformLocation(e,"fogType"),fogDensity:i.getUniformLocation(e,"fogDensity"),fogNear:i.getUniformLocation(e,"fogNear"),fogFar:i.getUniformLocation(e,"fogFar"),fogColor:i.getUniformLocation(e,"fogColor"),fogDepth:i.getUniformLocation(e,"fogDepth"),alphaTest:i.getUniformLocation(e,"alphaTest")};n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=8;n.height=8;t=n.getContext("2d");t.fillStyle="white";t.fillRect(0,0,8,8);a=new si(n)}function p(){var n=i.createProgram(),t=i.createShader(i.VERTEX_SHADER),r=i.createShader(i.FRAGMENT_SHADER);return i.shaderSource(t,["precision "+f.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvUV = uvOffset + uv * uvScale;","\tvec2 alignedPosition = position * scale;","\tvec2 rotatedPosition;","\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","\tvec4 mvPosition;","\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","\tmvPosition.xy += rotatedPosition;","\tgl_Position = projectionMatrix * mvPosition;","\tfogDepth = - mvPosition.z;","}"].join("\n")),i.shaderSource(r,["precision "+f.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvec4 texture = texture2D( map, vUV );","\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","\tif ( gl_FragColor.a < alphaTest ) discard;","\tif ( fogType > 0 ) {","\t\tfloat fogFactor = 0.0;","\t\tif ( fogType == 1 ) {","\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );","\t\t} else {","\t\t\tconst float LOG2 = 1.442695;","\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );","\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","\t\t}","\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );","\t}","}"].join("\n")),i.compileShader(t),i.compileShader(r),i.attachShader(n,t),i.attachShader(n,r),i.linkProgram(n),n}function w(n,t){return n.renderOrder!==t.renderOrder?n.renderOrder-t.renderOrder:n.z!==t.z?t.z-n.z:t.id-n.id}var h,c,e,s,o,a,b=new t,k=new y,l=new t;this.render=function(t,f,y){var nt,ut,d,p,it;if(0!==t.length){void 0===e&&v();r.useProgram(e);r.initAttributes();r.enableAttribute(s.position);r.enableAttribute(s.uv);r.disableUnusedAttributes();r.disable(i.CULL_FACE);r.enable(i.BLEND);i.bindBuffer(i.ARRAY_BUFFER,h);i.vertexAttribPointer(s.position,2,i.FLOAT,!1,16,0);i.vertexAttribPointer(s.uv,2,i.FLOAT,!1,16,8);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,c);i.uniformMatrix4fv(o.projectionMatrix,!1,y.projectionMatrix.elements);r.activeTexture(i.TEXTURE0);i.uniform1i(o.map,0);var tt=0,rt=0,g=f.fog;for(g?(i.uniform3f(o.fogColor,g.color.r,g.color.g,g.color.b),g.isFog?(i.uniform1f(o.fogNear,g.near),i.uniform1f(o.fogFar,g.far),i.uniform1i(o.fogType,1),tt=1,rt=1):g.isFogExp2&&(i.uniform1f(o.fogDensity,g.density),i.uniform1i(o.fogType,2),tt=2,rt=2)):(i.uniform1i(o.fogType,0),tt=0,rt=0),nt=0,ut=t.length;nt<ut;nt++)d=t[nt],d.modelViewMatrix.multiplyMatrices(y.matrixWorldInverse,d.matrixWorld),d.z=-d.modelViewMatrix.elements[14];t.sort(w);for(var ft=[],nt=0,ut=t.length;nt<ut;nt++)d=t[nt],p=d.material,!1!==p.visible&&(d.onBeforeRender(n,f,y,void 0,p,void 0),i.uniform1f(o.alphaTest,p.alphaTest),i.uniformMatrix4fv(o.modelViewMatrix,!1,d.modelViewMatrix.elements),d.matrixWorld.decompose(b,k,l),ft[0]=l.x,ft[1]=l.y,it=0,f.fog&&p.fog&&(it=rt),tt!==it&&(i.uniform1i(o.fogType,it),tt=it),null!==p.map?(i.uniform2f(o.uvOffset,p.map.offset.x,p.map.offset.y),i.uniform2f(o.uvScale,p.map.repeat.x,p.map.repeat.y)):(i.uniform2f(o.uvOffset,0,0),i.uniform2f(o.uvScale,1,1)),i.uniform1f(o.opacity,p.opacity),i.uniform3f(o.color,p.color.r,p.color.g,p.color.b),i.uniform1f(o.rotation,p.rotation),i.uniform2fv(o.scale,ft),r.setBlending(p.blending,p.blendEquation,p.blendSrc,p.blendDst,p.blendEquationAlpha,p.blendSrcAlpha,p.blendDstAlpha,p.premultipliedAlpha),r.buffers.depth.setTest(p.depthTest),r.buffers.depth.setMask(p.depthWrite),r.buffers.color.setMask(p.colorWrite),u.setTexture2D(p.map||a,0),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0),d.onAfterRender(n,f,y,void 0,p,void 0));r.enable(i.CULL_FACE);r.reset()}}}function a(){Object.defineProperty(this,"id",{value:we++});this.uuid=o.generateUUID();this.name="";this.type="Material";this.fog=!0;this.lights=!0;this.blending=ar;this.side=ei;this.flatShading=!1;this.vertexColors=lr;this.opacity=1;this.transparent=!1;this.blendSrc=ef;this.blendDst=of;this.blendEquation=rf;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=vr;this.depthTest=!0;this.depthWrite=!0;this.clippingPlanes=null;this.clipIntersection=!1;this.clipShadows=!1;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=!1;this.alphaTest=0;this.premultipliedAlpha=!1;this.overdraw=0;this.visible=!0;this.userData={};this.needsUpdate=!0}function yt(n){a.call(this);this.type="MeshDepthMaterial";this.depthPacking=ha;this.skinning=!1;this.morphTargets=!1;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.fog=!1;this.lights=!1;this.setValues(n)}function pt(n){a.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new t;this.nearDistance=1;this.farDistance=1e3;this.skinning=!1;this.morphTargets=!1;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=!1;this.lights=!1;this.setValues(n)}function wt(n,i){this.min=void 0!==n?n:new t(1/0,1/0,1/0);this.max=void 0!==i?i:new t(-1/0,-1/0,-1/0)}function st(n,i){this.center=void 0!==n?n:new t;this.radius=void 0!==i?i:0}function b(n,i){this.normal=void 0!==n?n:new t(1,0,0);this.constant=void 0!==i?i:0}function di(n,t,i,r,u,f){this.planes=[void 0!==n?n:new b,void 0!==t?t:new b,void 0!==i?i:new b,void 0!==r?r:new b,void 0!==u?u:new b,void 0!==f?f:new b]}function os(n,i,f){function w(t,i,r,u,f,e){var s=t.geometry,o=null,k=tt,b=t.customDepthMaterial,p,d,w,a,h;if((r&&(k=it,b=t.customDistanceMaterial),b)?o=b:(p=!1,i.morphTargets&&(s&&s.isBufferGeometry?p=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(p=s.morphTargets&&s.morphTargets.length>0)),t.isSkinnedMesh&&!1===i.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t),d=t.isSkinnedMesh&&i.skinning,w=0,p&&(w|=v),d&&(w|=y),o=k[w]),n.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){var g=o.uuid,nt=i.uuid,l=rt[g];void 0===l&&(l={},rt[g]=l);a=l[nt];void 0===a&&(a=o.clone(),l[nt]=a);o=a}return o.visible=i.visible,o.wireframe=i.wireframe,h=i.side,c.renderSingleSided&&h==vi&&(h=ei),c.renderReverseSided&&(h===ei?h=kt:h===kt&&(h=ei)),o.side=h,o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.clipIntersection=i.clipIntersection,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,r&&o.isMeshDistanceMaterial&&(o.referencePosition.copy(u),o.nearDistance=f,o.farDistance=e),o}function b(t,r,u,f){var s,e,a,h,c;if(!1!==t.visible){if(t.layers.test(r.layers)&&(t.isMesh||t.isLine||t.isPoints)&&t.castShadow&&(!t.frustumCulled||k.intersectsObject(t)))if(t.modelViewMatrix.multiplyMatrices(u.matrixWorldInverse,t.matrixWorld),s=i.update(t),e=t.material,Array.isArray(e))for(var y=s.groups,l=0,d=y.length;l<d;l++)a=y[l],h=e[a.materialIndex],h&&h.visible&&(c=w(t,h,f,o,u.near,u.far),n.renderBufferDirect(u,null,s,c,t,a));else e.visible&&(c=w(t,e,f,o,u.near,u.far),n.renderBufferDirect(u,null,s,c,t,null));for(var p=t.children,v=0,g=p.length;v<g;v++)b(p[v],r,u,f)}}for(var et,c,k=new di,d=new u,e=new r,ot=new r(f,f),a=new t,o=new t,v=1,y=2,p=1+(v|y),tt=new Array(p),it=new Array(p),rt={},st=[new t(1,0,0),new t(-1,0,0),new t(0,0,1),new t(0,0,-1),new t(0,1,0),new t(0,-1,0)],ht=[new t(0,1,0),new t(0,1,0),new t(0,1,0),new t(0,1,0),new t(0,0,1),new t(0,0,-1)],h=[new s,new s,new s,new s,new s,new s],l=0;l!==p;++l){var ut=0!=(l&v),ft=0!=(l&y),ct=new yt({depthPacking:ca,morphTargets:ut,skinning:ft});tt[l]=ct;et=new pt({morphTargets:ut,skinning:ft});it[l]=et}c=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=nf;this.renderReverseSided=!0;this.renderSingleSided=!0;this.render=function(t,i,r){var ut,y,rt,tt,ft,u,f,s,et,ct,w,p,lt;if(!1!==c.enabled&&(!1!==c.autoUpdate||!1!==c.needsUpdate)&&0!==t.length){for(ut=n.context,y=n.state,y.disable(ut.BLEND),y.buffers.color.setClear(1,1,1,1),y.buffers.depth.setTest(!0),y.setScissorTest(!1),tt=0,ft=t.length;tt<ft;tt++){var v=t[tt],l=v.shadow,it=v&&v.isPointLight;if(void 0!==l)for(u=l.camera,(e.copy(l.mapSize),e.min(ot),it)&&(f=e.x,s=e.y,h[0].set(2*f,s,f,s),h[1].set(0,s,f,s),h[2].set(3*f,s,f,s),h[3].set(f,s,f,s),h[4].set(3*f,0,f,s),h[5].set(f,0,f,s),e.x*=4,e.y*=2),null===l.map&&(et={minFilter:g,magFilter:g,format:nt},l.map=new oi(e.x,e.y,et),l.map.texture.name=v.name+".shadowMap",u.updateProjectionMatrix()),l.isSpotLightShadow&&l.update(v),ct=l.map,w=l.matrix,o.setFromMatrixPosition(v.matrixWorld),u.position.copy(o),it?(rt=6,w.makeTranslation(-o.x,-o.y,-o.z)):(rt=1,a.setFromMatrixPosition(v.target.matrixWorld),u.lookAt(a),u.updateMatrixWorld(),w.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),w.multiply(u.projectionMatrix),w.multiply(u.matrixWorldInverse)),n.setRenderTarget(ct),n.clear(),p=0;p<rt;p++)it&&(a.copy(u.position),a.add(st[p]),u.up.copy(ht[p]),u.lookAt(a),u.updateMatrixWorld(),lt=h[p],y.viewport(lt)),d.multiplyMatrices(u.projectionMatrix,u.matrixWorldInverse),k.setFromMatrix(d),b(i,r,u,it);else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}c.needsUpdate=!1}}}function ss(n){function i(t,i){var r=t.array,e=t.dynamic?n.DYNAMIC_DRAW:n.STATIC_DRAW,f=n.createBuffer(),u;return n.bindBuffer(i,f),n.bufferData(i,r,e),t.onUploadCallback(),u=n.FLOAT,r instanceof Float32Array?u=n.FLOAT:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?u=n.UNSIGNED_SHORT:r instanceof Int16Array?u=n.SHORT:r instanceof Uint32Array?u=n.UNSIGNED_INT:r instanceof Int32Array?u=n.INT:r instanceof Int8Array?u=n.BYTE:r instanceof Uint8Array&&(u=n.UNSIGNED_BYTE),{buffer:f,type:u,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}function r(t,i,r){var f=i.array,u=i.updateRange;n.bindBuffer(r,t);!1===i.dynamic?n.bufferData(r,f,n.STATIC_DRAW):-1===u.count?n.bufferSubData(r,0,f):0===u.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(n.bufferSubData(r,u.offset*f.BYTES_PER_ELEMENT,f.subarray(u.offset,u.offset+u.count)),u.count=-1)}function u(n){return n.isInterleavedBufferAttribute&&(n=n.data),t[n.uuid]}function f(i){i.isInterleavedBufferAttribute&&(i=i.data);var r=t[i.uuid];r&&(n.deleteBuffer(r.buffer),delete t[i.uuid])}function e(n,u){n.isInterleavedBufferAttribute&&(n=n.data);var f=t[n.uuid];void 0===f?t[n.uuid]=i(n,u):f.version<n.version&&(r(f.buffer,n,u),f.version=n.version)}var t={};return{get:u,remove:f,update:e}}function ht(n,t,i,r){this._x=n||0;this._y=t||0;this._z=i||0;this._order=r||ht.DefaultOrder}function lu(){this.mask=1}function h(){function r(){i.setFromEuler(n,!1)}function f(){n.setFromQuaternion(i,void 0,!1)}Object.defineProperty(this,"id",{value:be++});this.uuid=o.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=h.DefaultUp.clone();var e=new t,n=new ht,i=new y,s=new t(1,1,1);n.onChange(r);i.onChange(f);Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:n},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:s},modelViewMatrix:{value:new u},normalMatrix:{value:new w}});this.matrix=new u;this.matrixWorld=new u;this.matrixAutoUpdate=h.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.layers=new lu;this.visible=!0;this.castShadow=!1;this.receiveShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}}function tt(){h.call(this);this.type="Camera";this.matrixWorldInverse=new u;this.projectionMatrix=new u}function hi(n,t,i,r,u,f){tt.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=n;this.right=t;this.top=i;this.bottom=r;this.near=void 0!==u?u:.1;this.far=void 0!==f?f:2e3;this.updateProjectionMatrix()}function ci(n,i,r,u,f,e){this.a=n;this.b=i;this.c=r;this.normal=u&&u.isVector3?u:new t;this.vertexNormals=Array.isArray(u)?u:[];this.color=f&&f.isColor?f:new c;this.vertexColors=Array.isArray(f)?f:[];this.materialIndex=void 0!==e?e:0}function it(){Object.defineProperty(this,"id",{value:ke+=2});this.uuid=o.generateUUID();this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.elementsNeedUpdate=!1;this.verticesNeedUpdate=!1;this.uvsNeedUpdate=!1;this.normalsNeedUpdate=!1;this.colorsNeedUpdate=!1;this.lineDistancesNeedUpdate=!1;this.groupsNeedUpdate=!1}function f(n,t,i){if(Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=o.generateUUID();this.name="";this.array=n;this.itemSize=t;this.count=void 0!==n?n.length/t:0;this.normalized=!0===i;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.onUploadCallback=function(){};this.version=0}function gi(n,t,i){f.call(this,new Int8Array(n),t,i)}function nr(n,t,i){f.call(this,new Uint8Array(n),t,i)}function tr(n,t,i){f.call(this,new Uint8ClampedArray(n),t,i)}function ir(n,t,i){f.call(this,new Int16Array(n),t,i)}function ni(n,t,i){f.call(this,new Uint16Array(n),t,i)}function rr(n,t,i){f.call(this,new Int32Array(n),t,i)}function ti(n,t,i){f.call(this,new Uint32Array(n),t,i)}function v(n,t,i){f.call(this,new Float32Array(n),t,i)}function ur(n,t,i){f.call(this,new Float64Array(n),t,i)}function au(){this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=!1;this.normalsNeedUpdate=!1;this.colorsNeedUpdate=!1;this.uvsNeedUpdate=!1;this.groupsNeedUpdate=!1}function fr(n){if(0===n.length)return-1/0;for(var i=n[0],t=1,r=n.length;t<r;++t)n[t]>i&&(i=n[t]);return i}function k(){Object.defineProperty(this,"id",{value:de+=2});this.uuid=o.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:1/0}}function er(n,t,i,r,u,f){it.call(this);this.type="BoxGeometry";this.parameters={width:n,height:t,depth:i,widthSegments:r,heightSegments:u,depthSegments:f};this.fromBufferGeometry(new ii(n,t,i,r,u,f));this.mergeVertices()}function ii(n,i,r,u,f,e){function o(n,i,r,u,f,e,o,v,w,b,k){for(var d,st=e/w,ht=o/b,ct=e/2,lt=o/2,at=v/2,tt=w+1,vt=b+1,rt=0,it=0,nt=new t,ut,ft,g=0;g<vt;g++)for(ut=g*ht-lt,d=0;d<tt;d++)ft=d*st-ct,nt[n]=ft*u,nt[i]=ut*f,nt[r]=at,a.push(nt.x,nt.y,nt.z),nt[n]=0,nt[i]=0,nt[r]=v>0?1:-1,y.push(nt.x,nt.y,nt.z),c.push(d/w),c.push(1-g/b),rt+=1;for(g=0;g<b;g++)for(d=0;d<w;d++){var yt=s+d+tt*g,et=s+d+tt*(g+1),pt=s+(d+1)+tt*(g+1),ot=s+(d+1)+tt*g;h.push(yt,et,ot);h.push(et,pt,ot);it+=6}l.addGroup(p,it,k);p+=it;s+=rt}var l;k.call(this);this.type="BoxBufferGeometry";this.parameters={width:n,height:i,depth:r,widthSegments:u,heightSegments:f,depthSegments:e};l=this;n=n||1;i=i||1;r=r||1;u=Math.floor(u)||1;f=Math.floor(f)||1;e=Math.floor(e)||1;var h=[],a=[],y=[],c=[],s=0,p=0;o("z","y","x",-1,-1,r,i,n,e,f,0);o("z","y","x",1,-1,r,i,-n,e,f,1);o("x","z","y",1,1,n,r,i,u,e,2);o("x","z","y",1,-1,n,r,-i,u,e,3);o("x","y","z",1,-1,n,i,r,u,f,4);o("x","y","z",-1,-1,n,i,-r,u,f,5);this.setIndex(h);this.addAttribute("position",new v(a,3));this.addAttribute("normal",new v(y,3));this.addAttribute("uv",new v(c,2))}function li(n,t,i,r){it.call(this);this.type="PlaneGeometry";this.parameters={width:n,height:t,widthSegments:i,heightSegments:r};this.fromBufferGeometry(new ri(n,t,i,r));this.mergeVertices()}function ri(n,t,i,r){var y,p;k.call(this);this.type="PlaneBufferGeometry";this.parameters={width:n,height:t,widthSegments:i,heightSegments:r};n=n||1;t=t||1;for(var u,d=n/2,g=t/2,o=Math.floor(i)||1,s=Math.floor(r)||1,e=o+1,nt=s+1,tt=n/o,it=t/s,h=[],l=[],a=[],c=[],f=0;f<nt;f++)for(y=f*it-g,u=0;u<e;u++)p=u*tt-d,l.push(p,-y,0),a.push(0,0,1),c.push(u/o),c.push(1-f/s);for(f=0;f<s;f++)for(u=0;u<o;u++){var rt=u+e*f,w=u+e*(f+1),ut=u+1+e*(f+1),b=u+1+e*f;h.push(rt,w,b);h.push(w,ut,b)}this.setIndex(h);this.addAttribute("position",new v(l,3));this.addAttribute("normal",new v(a,3));this.addAttribute("uv",new v(c,2))}function rt(n){a.call(this);this.type="MeshBasicMaterial";this.color=new c(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=sf;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=!1;this.morphTargets=!1;this.lights=!1;this.setValues(n)}function ut(n){a.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.fog=!1;this.lights=!1;this.clipping=!1;this.skinning=!1;this.morphTargets=!1;this.morphNormals=!1;this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==n&&(void 0!==n.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(n))}function vu(n,i){this.origin=void 0!==n?n:new t;this.direction=void 0!==i?i:new t}function ai(n,i){this.start=void 0!==n?n:new t;this.end=void 0!==i?i:new t}function ft(n,i,r){this.a=void 0!==n?n:new t;this.b=void 0!==i?i:new t;this.c=void 0!==r?r:new t}function ui(n,t){h.call(this);this.type="Mesh";this.geometry=void 0!==n?n:new k;this.material=void 0!==t?t:new rt({color:16777215*Math.random()});this.drawMode=ee;this.updateMorphTargets()}function hs(n,t,i,r){function l(t,r,c,l){var a=r.background;null===a?s(o,e):a&&a.isColor&&(s(a,1),l=!0);(n.autoClear||l)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil);a&&a.isCubeTexture?(void 0===u&&(u=new ui(new ii(1,1,1),new ut({uniforms:gt.cube.uniforms,vertexShader:gt.cube.vertexShader,fragmentShader:gt.cube.fragmentShader,side:kt,depthTest:!0,depthWrite:!1,fog:!1})),u.geometry.removeAttribute("normal"),u.geometry.removeAttribute("uv"),u.onBeforeRender=function(n,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},i.update(u.geometry)),u.material.uniforms.tCube.value=a,t.push(u,u.geometry,u.material,0,null)):a&&a.isTexture&&(void 0===h&&(h=new hi(-1,1,1,-1,0,1),f=new ui(new ri(2,2),new rt({depthTest:!1,depthWrite:!1,fog:!1})),i.update(f.geometry)),f.material.map=a,n.renderBufferDirect(h,null,f.geometry,f.material,f,null))}function s(n,i){t.buffers.color.setClear(n.r,n.g,n.b,i,r)}var h,f,u,o=new c(0),e=0;return{getClearColor:function(){return o},setClearColor:function(n,t){o.set(n);e=void 0!==t?t:1;s(o,e)},getClearAlpha:function(){return e},setClearAlpha:function(n){e=n;s(o,e)},render:l}}function cs(n,t){return n.renderOrder!==t.renderOrder?n.renderOrder-t.renderOrder:n.program&&t.program&&n.program!==t.program?n.program.id-t.program.id:n.material.id!==t.material.id?n.material.id-t.material.id:n.z!==t.z?n.z-t.z:n.id-t.id}function ls(n,t){return n.renderOrder!==t.renderOrder?n.renderOrder-t.renderOrder:n.z!==t.z?t.z-n.z:n.id-t.id}function as(){function u(){i=0;n.length=0;t.length=0}function f(u,f,e,o,s){var h=r[i];void 0===h?(h={id:u.id,object:u,geometry:f,material:e,program:e.program,renderOrder:u.renderOrder,z:o,group:s},r[i]=h):(h.id=u.id,h.object=u,h.geometry=f,h.material=e,h.program=e.program,h.renderOrder=u.renderOrder,h.z=o,h.group=s);(!0===e.transparent?t:n).push(h);i++}function e(){n.length>1&&n.sort(cs);t.length>1&&t.sort(ls)}var r=[],i=0,n=[],t=[];return{opaque:n,transparent:t,init:u,push:f,sort:e}}function vs(){function t(t,i){var u=t.id+","+i.id,r=n[u];return void 0===r&&(r=new as,n[u]=r),r}function i(){n={}}var n={};return{get:t,dispose:i}}function ys(n,t){return Math.abs(t[1])-Math.abs(n[1])}function ps(n){function r(r,u,f,e){var p=r.morphTargetInfluences,c=p.length,h=i[u.id],o,s,v,y;if(void 0===h){for(h=[],o=0;o<c;o++)h[o]=[o,0];i[u.id]=h}for(var l=f.morphTargets&&u.morphAttributes.position,a=f.morphNormals&&u.morphAttributes.normal,o=0;o<c;o++)s=h[o],0!==s[1]&&(l&&u.removeAttribute("morphTarget"+o),a&&u.removeAttribute("morphNormal"+o));for(o=0;o<c;o++)s=h[o],s[0]=o,s[1]=p[o];for(h.sort(ys),o=0;o<8;o++){if(s=h[o],s&&(v=s[0],y=s[1],y)){l&&u.addAttribute("morphTarget"+o,l[v]);a&&u.addAttribute("morphNormal"+o,a[v]);t[o]=y;continue}t[o]=0}e.getUniforms().setValue(n,"morphTargetInfluences",t)}var i={},t=new Float32Array(8);return{update:r}}function ws(n,t,i){function e(n){r=n}function o(n){u=n.type;f=n.bytesPerElement}function s(t,e){n.drawElements(r,e,u,t*f);i.calls++;i.vertices+=e;r===n.TRIANGLES?i.faces+=e/3:r===n.POINTS&&(i.points+=e)}function h(e,o,s){var h=t.get("ANGLE_instanced_arrays");if(null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h.drawElementsInstancedANGLE(r,s,u,o*f,e.maxInstancedCount);i.calls++;i.vertices+=s*e.maxInstancedCount;r===n.TRIANGLES?i.faces+=e.maxInstancedCount*s/3:r===n.POINTS&&(i.points+=e.maxInstancedCount*s)}var r,u,f;this.setMode=e;this.setIndex=o;this.render=s;this.renderInstances=h}function bs(n,t,i){function u(n){r=n}function f(t,u){n.drawArrays(r,t,u);i.calls++;i.vertices+=u;r===n.TRIANGLES?i.faces+=u/3:r===n.POINTS&&(i.points+=u)}function e(u,f,e){var o=t.get("ANGLE_instanced_arrays"),s;if(null===o)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");s=u.attributes.position;s.isInterleavedBufferAttribute?(e=s.data.count,o.drawArraysInstancedANGLE(r,0,e,u.maxInstancedCount)):o.drawArraysInstancedANGLE(r,f,e,u.maxInstancedCount);i.calls++;i.vertices+=e*u.maxInstancedCount;r===n.TRIANGLES?i.faces+=u.maxInstancedCount*e/3:r===n.POINTS&&(i.points+=u.maxInstancedCount*e)}var r;this.setMode=u;this.render=f;this.renderInstances=e}function ks(n,t,i){function f(n){var s=n.target,e=u[s.id],h,o;null!==e.index&&t.remove(e.index);for(h in e.attributes)t.remove(e.attributes[h]);s.removeEventListener("dispose",f);delete u[s.id];o=r[s.id];o&&(t.remove(o),delete r[s.id]);o=r[e.id];o&&(t.remove(o),delete r[e.id]);i.geometries--}function e(n,t){var r=u[t.id];return r||(t.addEventListener("dispose",f),t.isBufferGeometry?r=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new k).setFromObject(n)),r=t._bufferGeometry),u[t.id]=r,i.geometries++,r)}function o(i){var e=i.index,o=i.attributes,u,r;null!==e&&t.update(e,n.ELEMENT_ARRAY_BUFFER);for(r in o)t.update(o[r],n.ARRAY_BUFFER);u=i.morphAttributes;for(r in u)for(var s=u[r],f=0,h=s.length;f<h;f++)t.update(s[f],n.ARRAY_BUFFER)}function s(i){var f=r[i.id];if(f)return f;var o=[],l=i.index,v=i.attributes;if(null!==l)for(var e=l.array,u=0,a=e.length;u<a;u+=3){var s=e[u+0],h=e[u+1],c=e[u+2];o.push(s,h,h,c,c,s)}else for(var e=v.position.array,u=0,a=e.length/3-1;u<a;u+=3){var s=u+0,h=u+1,c=u+2;o.push(s,h,h,c,c,s)}return f=new(fr(o)>65535?ti:ni)(o,1),t.update(f,n.ELEMENT_ARRAY_BUFFER),r[i.id]=f,f}var u={},r={};return{get:e,update:o,getWireframeAttribute:s}}function ds(){var n={};return{get:function(i){if(void 0!==n[i.id])return n[i.id];var u;switch(i.type){case"DirectionalLight":u={direction:new t,color:new c,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new r};break;case"SpotLight":u={position:new t,direction:new t,color:new c,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new r};break;case"PointLight":u={position:new t,color:new c,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new r,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":u={direction:new t,skyColor:new c,groundColor:new c};break;case"RectAreaLight":u={color:new c,position:new t,halfWidth:new t,halfHeight:new t}}return n[i.id]=u,u}}}function gs(){function o(t,u,o){for(var c,h,nt=0,tt=0,it=0,v=0,y=0,p=0,b=0,k=0,l=o.matrixWorldInverse,d=0,rt=t.length;d<rt;d++){var s=t[d],w=s.color,a=s.intensity,ut=s.distance,g=s.shadow&&s.shadow.map?s.shadow.map.texture:null;s.isAmbientLight?(nt+=w.r*a,tt+=w.g*a,it+=w.b*a):s.isDirectionalLight?(h=i.get(s),(h.color.copy(s.color).multiplyScalar(s.intensity),h.direction.setFromMatrixPosition(s.matrixWorld),r.setFromMatrixPosition(s.target.matrixWorld),h.direction.sub(r),h.direction.transformDirection(l),h.shadow=s.castShadow,s.castShadow)&&(c=s.shadow,h.shadowBias=c.bias,h.shadowRadius=c.radius,h.shadowMapSize=c.mapSize),n.directionalShadowMap[v]=g,n.directionalShadowMatrix[v]=s.shadow.matrix,n.directional[v]=h,v++):s.isSpotLight?(h=i.get(s),(h.position.setFromMatrixPosition(s.matrixWorld),h.position.applyMatrix4(l),h.color.copy(w).multiplyScalar(a),h.distance=ut,h.direction.setFromMatrixPosition(s.matrixWorld),r.setFromMatrixPosition(s.target.matrixWorld),h.direction.sub(r),h.direction.transformDirection(l),h.coneCos=Math.cos(s.angle),h.penumbraCos=Math.cos(s.angle*(1-s.penumbra)),h.decay=0===s.distance?0:s.decay,h.shadow=s.castShadow,s.castShadow)&&(c=s.shadow,h.shadowBias=c.bias,h.shadowRadius=c.radius,h.shadowMapSize=c.mapSize),n.spotShadowMap[p]=g,n.spotShadowMatrix[p]=s.shadow.matrix,n.spot[p]=h,p++):s.isRectAreaLight?(h=i.get(s),h.color.copy(w).multiplyScalar(a/(s.width*s.height)),h.position.setFromMatrixPosition(s.matrixWorld),h.position.applyMatrix4(l),f.identity(),e.copy(s.matrixWorld),e.premultiply(l),f.extractRotation(e),h.halfWidth.set(.5*s.width,0,0),h.halfHeight.set(0,.5*s.height,0),h.halfWidth.applyMatrix4(f),h.halfHeight.applyMatrix4(f),n.rectArea[b]=h,b++):s.isPointLight?(h=i.get(s),(h.position.setFromMatrixPosition(s.matrixWorld),h.position.applyMatrix4(l),h.color.copy(s.color).multiplyScalar(s.intensity),h.distance=s.distance,h.decay=0===s.distance?0:s.decay,h.shadow=s.castShadow,s.castShadow)&&(c=s.shadow,h.shadowBias=c.bias,h.shadowRadius=c.radius,h.shadowMapSize=c.mapSize,h.shadowCameraNear=c.camera.near,h.shadowCameraFar=c.camera.far),n.pointShadowMap[y]=g,n.pointShadowMatrix[y]=s.shadow.matrix,n.point[y]=h,y++):s.isHemisphereLight&&(h=i.get(s),h.direction.setFromMatrixPosition(s.matrixWorld),h.direction.transformDirection(l),h.direction.normalize(),h.skyColor.copy(s.color).multiplyScalar(a),h.groundColor.copy(s.groundColor).multiplyScalar(a),n.hemi[k]=h,k++)}n.ambient[0]=nt;n.ambient[1]=tt;n.ambient[2]=it;n.directional.length=v;n.spot.length=p;n.rectArea.length=b;n.point.length=y;n.hemi.length=k;n.hash=v+","+y+","+p+","+b+","+k+","+u.length}var i=new ds,n={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},r=new t,e=new u,f=new u;return{setup:o,state:n}}function nh(n,t){function r(r){var f=t.frame,e=r.geometry,u=n.get(r,e);return i[u.id]!==f&&(e.isGeometry&&u.updateFromObject(r),n.update(u),i[u.id]=f),u}function u(){i={}}var i={};return{update:r,clear:u}}function th(n){for(var i=n.split("\n"),t=0;t<i.length;t++)i[t]=t+1+": "+i[t];return i.join("\n")}function yu(n,t,i){var r=n.createShader(t);return n.shaderSource(r,i),n.compileShader(r),!1===n.getShaderParameter(r,n.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==n.getShaderInfoLog(r)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t===n.VERTEX_SHADER?"vertex":"fragment",n.getShaderInfoLog(r),th(i)),r}function pu(n){switch(n){case bi:return["Linear","( value )"];case ua:return["sRGB","( value )"];case fa:return["RGBE","( value )"];case ea:return["RGBM","( value, 7.0 )"];case oa:return["RGBM","( value, 16.0 )"];case sa:return["RGBD","( value, 256.0 )"];case oe:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+n);}}function or(n,t){var i=pu(t);return"vec4 "+n+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function ih(n,t){var i=pu(t);return"vec4 "+n+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function rh(n,t){var i;switch(t){case hf:i="Linear";break;case ol:i="Reinhard";break;case sl:i="Uncharted2";break;case hl:i="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+t);}return"vec3 "+n+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function uh(n,t,i){return n=n||{},[n.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(n.fragDepth||t.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",n.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(n.shaderTextureLOD||t.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(fi).join("\n")}function fh(n){var r=[],t,i;for(t in n)i=n[t],!1!==i&&r.push("#define "+t+" "+i);return r.join("\n")}function eh(n,t){for(var f,r,u={},e=n.getProgramParameter(t,n.ACTIVE_ATTRIBUTES),i=0;i<e;i++)f=n.getActiveAttrib(t,i),r=f.name,u[r]=n.getAttribLocation(t,r);return u}function fi(n){return""!==n}function wu(n,t){return n.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function sr(n){function t(n,t){var i=e[t];if(void 0===i)throw new Error("Can not resolve #include <"+t+">");return sr(i)}return n.replace(/^[ \t]*#include +<([\w\d.]+)>/gm,t)}function bu(n){function t(n,t,i,r){for(var f="",u=parseInt(t);u<parseInt(i);u++)f+=r.replace(/\[ i \]/g,"[ "+u+" ]");return f}return n.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,t)}function oh(n,t,i,r,u,f){var o=n.context,ht=r.defines,h=u.vertexShader,c=u.fragmentShader,y="SHADOWMAP_TYPE_BASIC",it,rt;f.shadowMapType===nf?y="SHADOWMAP_TYPE_PCF":f.shadowMapType===ic&&(y="SHADOWMAP_TYPE_PCF_SOFT");var v="ENVMAP_TYPE_CUBE",g="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(f.envMap){switch(r.envMap.mapping){case lf:case af:v="ENVMAP_TYPE_CUBE";break;case yf:case pf:v="ENVMAP_TYPE_CUBE_UV";break;case cl:case vf:v="ENVMAP_TYPE_EQUIREC";break;case ll:v="ENVMAP_TYPE_SPHERE"}switch(r.envMap.mapping){case af:case vf:g="ENVMAP_MODE_REFRACTION"}switch(r.combine){case sf:p="ENVMAP_BLENDING_MULTIPLY";break;case fl:p="ENVMAP_BLENDING_MIX";break;case el:p="ENVMAP_BLENDING_ADD"}}var l,a,ut=n.gammaFactor>0?n.gammaFactor:1,ft=uh(r.extensions,f,t),w=fh(ht),s=o.createProgram();r.isRawShaderMaterial?(l=[w].filter(fi).join("\n"),l.length>0&&(l+="\n"),a=[ft,w].filter(fi).join("\n"),a.length>0&&(a+="\n")):(l=["precision "+f.precision+" float;","precision "+f.precision+" int;","#define SHADER_NAME "+u.name,w,f.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+ut,"#define MAX_BONES "+f.maxBones,f.useFog&&f.fog?"#define USE_FOG":"",f.useFog&&f.fogExp?"#define FOG_EXP2":"",f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.envMap?"#define "+g:"",f.lightMap?"#define USE_LIGHTMAP":"",f.aoMap?"#define USE_AOMAP":"",f.emissiveMap?"#define USE_EMISSIVEMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":"",f.displacementMap&&f.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",f.specularMap?"#define USE_SPECULARMAP":"",f.roughnessMap?"#define USE_ROUGHNESSMAP":"",f.metalnessMap?"#define USE_METALNESSMAP":"",f.alphaMap?"#define USE_ALPHAMAP":"",f.vertexColors?"#define USE_COLOR":"",f.flatShading?"#define FLAT_SHADED":"",f.skinning?"#define USE_SKINNING":"",f.useVertexTexture?"#define BONE_TEXTURE":"",f.morphTargets?"#define USE_MORPHTARGETS":"",f.morphNormals&&!1===f.flatShading?"#define USE_MORPHNORMALS":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+f.numClippingPlanes,f.shadowMapEnabled?"#define USE_SHADOWMAP":"",f.shadowMapEnabled?"#define "+y:"",f.sizeAttenuation?"#define USE_SIZEATTENUATION":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",f.logarithmicDepthBuffer&&t.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(fi).join("\n"),a=[ft,"precision "+f.precision+" float;","precision "+f.precision+" int;","#define SHADER_NAME "+u.name,w,f.alphaTest?"#define ALPHATEST "+f.alphaTest:"","#define GAMMA_FACTOR "+ut,f.useFog&&f.fog?"#define USE_FOG":"",f.useFog&&f.fogExp?"#define FOG_EXP2":"",f.map?"#define USE_MAP":"",f.envMap?"#define USE_ENVMAP":"",f.envMap?"#define "+v:"",f.envMap?"#define "+g:"",f.envMap?"#define "+p:"",f.lightMap?"#define USE_LIGHTMAP":"",f.aoMap?"#define USE_AOMAP":"",f.emissiveMap?"#define USE_EMISSIVEMAP":"",f.bumpMap?"#define USE_BUMPMAP":"",f.normalMap?"#define USE_NORMALMAP":"",f.specularMap?"#define USE_SPECULARMAP":"",f.roughnessMap?"#define USE_ROUGHNESSMAP":"",f.metalnessMap?"#define USE_METALNESSMAP":"",f.alphaMap?"#define USE_ALPHAMAP":"",f.vertexColors?"#define USE_COLOR":"",f.gradientMap?"#define USE_GRADIENTMAP":"",f.flatShading?"#define FLAT_SHADED":"",f.doubleSided?"#define DOUBLE_SIDED":"",f.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+f.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(f.numClippingPlanes-f.numClipIntersection),f.shadowMapEnabled?"#define USE_SHADOWMAP":"",f.shadowMapEnabled?"#define "+y:"",f.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",f.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",f.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",f.logarithmicDepthBuffer&&t.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",f.envMap&&t.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",f.toneMapping!==yr?"#define TONE_MAPPING":"",f.toneMapping!==yr?e.tonemapping_pars_fragment:"",f.toneMapping!==yr?rh("toneMapping",f.toneMapping):"",f.dithering?"#define DITHERING":"",f.outputEncoding||f.mapEncoding||f.envMapEncoding||f.emissiveMapEncoding?e.encodings_pars_fragment:"",f.mapEncoding?or("mapTexelToLinear",f.mapEncoding):"",f.envMapEncoding?or("envMapTexelToLinear",f.envMapEncoding):"",f.emissiveMapEncoding?or("emissiveMapTexelToLinear",f.emissiveMapEncoding):"",f.outputEncoding?ih("linearToOutputTexel",f.outputEncoding):"",f.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(fi).join("\n"));h=sr(h);h=wu(h,f);c=sr(c);c=wu(c,f);r.isShaderMaterial||(h=bu(h),c=bu(c));var ct=l+h,lt=a+c,b=yu(o,o.VERTEX_SHADER,ct),k=yu(o,o.FRAGMENT_SHADER,lt);o.attachShader(s,b);o.attachShader(s,k);void 0!==r.index0AttributeName?o.bindAttribLocation(s,0,r.index0AttributeName):!0===f.morphTargets&&o.bindAttribLocation(s,0,"position");o.linkProgram(s);var d=o.getProgramInfoLog(s),nt=o.getShaderInfoLog(b),tt=o.getShaderInfoLog(k),et=!0,st=!0;return!1===o.getProgramParameter(s,o.LINK_STATUS)?(et=!1,console.error("THREE.WebGLProgram: shader error: ",o.getError(),"gl.VALIDATE_STATUS",o.getProgramParameter(s,o.VALIDATE_STATUS),"gl.getProgramInfoLog",d,nt,tt)):""!==d?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",d):""!==nt&&""!==tt||(st=!1),st&&(this.diagnostics={runnable:et,material:r,programLog:d,vertexShader:{log:nt,prefix:l},fragmentShader:{log:tt,prefix:a}}),o.deleteShader(b),o.deleteShader(k),this.getUniforms=function(){return void 0===it&&(it=new ot(o,s,n)),it},this.getAttributes=function(){return void 0===rt&&(rt=eh(o,s)),rt},this.destroy=function(){o.deleteProgram(s);this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=ge++,this.code=i,this.usedTimes=1,this.program=s,this.vertexShader=b,this.fragmentShader=k,this}function sh(n,t,i){function e(n){var u=n.skeleton,t=u.bones;if(i.floatVertexTextures)return 1024;var f=i.maxVertexUniforms,e=Math.floor((f-20)/4),r=Math.min(e,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}function u(n,t){var i;return n?n.isTexture?i=n.encoding:n.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=n.texture.encoding):i=bi,i===bi&&t&&(i=oe),i}var r=[],o={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},f=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(t,r,f,s,h,c,l){var p=o[t.type],y=l.isSkinnedMesh?e(l):0,a=i.precision,v;return null!==t.precision&&(a=i.getMaxPrecision(t.precision))!==t.precision&&console.warn("THREE.WebGLProgram.getParameters:",t.precision,"not supported, using",a,"instead."),v=n.getRenderTarget(),{shaderID:p,precision:a,supportsVertexTextures:i.vertexTextures,outputEncoding:u(v?v.texture:null,n.gammaOutput),map:!!t.map,mapEncoding:u(t.map,n.gammaInput),envMap:!!t.envMap,envMapMode:t.envMap&&t.envMap.mapping,envMapEncoding:u(t.envMap,n.gammaInput),envMapCubeUV:!!t.envMap&&(t.envMap.mapping===yf||t.envMap.mapping===pf),lightMap:!!t.lightMap,aoMap:!!t.aoMap,emissiveMap:!!t.emissiveMap,emissiveMapEncoding:u(t.emissiveMap,n.gammaInput),bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,displacementMap:!!t.displacementMap,roughnessMap:!!t.roughnessMap,metalnessMap:!!t.metalnessMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,gradientMap:!!t.gradientMap,combine:t.combine,vertexColors:t.vertexColors,fog:!!s,useFog:t.fog,fogExp:s&&s.isFogExp2,flatShading:t.flatShading,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:i.logarithmicDepthBuffer,skinning:t.skinning&&y>0,maxBones:y,useVertexTexture:i.floatVertexTextures,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:n.maxMorphTargets,maxMorphNormals:n.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:h,numClipIntersection:c,dithering:t.dithering,shadowMapEnabled:n.shadowMap.enabled&&l.receiveShadow&&f.length>0,shadowMapType:n.shadowMap.type,toneMapping:n.toneMapping,physicallyCorrectLights:n.physicallyCorrectLights,premultipliedAlpha:t.premultipliedAlpha,alphaTest:t.alphaTest,doubleSided:t.side===vi,flipSided:t.side===kt,depthPacking:void 0!==t.depthPacking&&t.depthPacking}};this.getProgramCode=function(t,i){var r=[],e,u;if(i.shaderID?r.push(i.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(e in t.defines)r.push(e),r.push(t.defines[e]);for(u=0;u<f.length;u++)r.push(i[f[u]]);return r.push(t.onBeforeCompile.toString()),r.push(n.gammaOutput),r.join()};this.acquireProgram=function(i,u,f,e){for(var o,h,s=0,c=r.length;s<c;s++)if(h=r[s],h.code===e){o=h;++o.usedTimes;break}return void 0===o&&(o=new oh(n,t,e,i,u,f),r.push(o)),o};this.releaseProgram=function(n){if(0==--n.usedTimes){var t=r.indexOf(n);r[t]=r[r.length-1];r.pop();n.destroy()}};this.programs=r}function hh(n,t,i,r,u,f,e){function v(n,t){if(n.width>t||n.height>t){var r=t/Math.max(n.width,n.height),i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.width=Math.floor(n.width*r),i.height=Math.floor(n.height*r),i.getContext("2d").drawImage(n,0,0,n.width,n.height,0,0,i.width,i.height),console.warn("THREE.WebGLRenderer: image is too big ("+n.width+"x"+n.height+"). Resized to "+i.width+"x"+i.height,n),i}return n}function s(n){return o.isPowerOfTwo(n.width)&&o.isPowerOfTwo(n.height)}function it(n){if(n instanceof HTMLImageElement||n instanceof HTMLCanvasElement||n instanceof ImageBitmap){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.width=o.floorPowerOfTwo(n.width),t.height=o.floorPowerOfTwo(n.height),t.getContext("2d").drawImage(n,0,0,t.width,t.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+n.width+"x"+n.height+"). Resized to "+t.width+"x"+t.height,n),t}return n}function rt(n){return n.wrapS!==d||n.wrapT!==d||n.minFilter!==g&&n.minFilter!==ct}function h(n,t){return n.generateMipmaps&&t&&n.minFilter!==g&&n.minFilter!==ct}function y(t){return t===g||t===wr||t===wf?n.NEAREST:n.LINEAR}function a(n){var t=n.target;t.removeEventListener("dispose",a);ut(t);t.isVideoTexture&&delete l[t.id];e.textures--}function p(n){var t=n.target;t.removeEventListener("dispose",p);ft(t);e.textures--}function ut(t){var i=r.get(t);if(t.image&&i.__image__webglTextureCube)n.deleteTexture(i.__image__webglTextureCube);else{if(void 0===i.__webglInit)return;n.deleteTexture(i.__webglTexture)}r.remove(t)}function ft(t){var i=r.get(t),f=r.get(t.texture),u;if(t){if(void 0!==f.__webglTexture&&n.deleteTexture(f.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLRenderTargetCube)for(u=0;u<6;u++)n.deleteFramebuffer(i.__webglFramebuffer[u]),i.__webglDepthbuffer&&n.deleteRenderbuffer(i.__webglDepthbuffer[u]);else n.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&n.deleteRenderbuffer(i.__webglDepthbuffer);r.remove(t.texture);r.remove(t)}}function w(t,u){var f=r.get(t),e;if(t.version>0&&f.__version!==t.version)if(e=t.image,void 0===e)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",t);else{if(!1!==e.complete)return void st(f,t,u);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",t)}i.activeTexture(n.TEXTURE0+u);i.bindTexture(n.TEXTURE_2D,f.__webglTexture)}function et(t,o){var b=r.get(t),l;if(6===t.image.length)if(t.version>0&&b.__version!==t.version){b.__image__webglTextureCube||(t.addEventListener("dispose",a),b.__image__webglTextureCube=n.createTexture(),e.textures++);i.activeTexture(n.TEXTURE0+o);i.bindTexture(n.TEXTURE_CUBE_MAP,b.__image__webglTextureCube);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var tt=t&&t.isCompressedTexture,d=t.image[0]&&t.image[0].isDataTexture,p=[],l=0;l<6;l++)p[l]=tt||d?d?t.image[l].image:t.image[l]:v(t.image[l],u.maxCubemapSize);var ut=p[0],it=s(ut),y=f.convert(t.format),g=f.convert(t.type);for(c(n.TEXTURE_CUBE_MAP,t,it),l=0;l<6;l++)if(tt)for(var w,rt=p[l].mipmaps,k=0,ft=rt.length;k<ft;k++)w=rt[k],t.format!==nt&&t.format!==wi?i.getCompressedTextureFormats().indexOf(y)>-1?i.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+l,k,y,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+l,k,y,w.width,w.height,0,y,g,w.data);else d?i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,y,p[l].width,p[l].height,0,y,g,p[l].data):i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,y,y,g,p[l]);h(t,it)&&n.generateMipmap(n.TEXTURE_CUBE_MAP);b.__version=t.version;t.onUpdate&&t.onUpdate(t)}else i.activeTexture(n.TEXTURE0+o),i.bindTexture(n.TEXTURE_CUBE_MAP,b.__image__webglTextureCube)}function ot(t,u){i.activeTexture(n.TEXTURE0+u);i.bindTexture(n.TEXTURE_CUBE_MAP,r.get(t).__webglTexture)}function c(i,e,o){var s;if(o?(n.texParameteri(i,n.TEXTURE_WRAP_S,f.convert(e.wrapS)),n.texParameteri(i,n.TEXTURE_WRAP_T,f.convert(e.wrapT)),n.texParameteri(i,n.TEXTURE_MAG_FILTER,f.convert(e.magFilter)),n.texParameteri(i,n.TEXTURE_MIN_FILTER,f.convert(e.minFilter))):(n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),e.wrapS===d&&e.wrapT===d||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",e),n.texParameteri(i,n.TEXTURE_MAG_FILTER,y(e.magFilter)),n.texParameteri(i,n.TEXTURE_MIN_FILTER,y(e.minFilter)),e.minFilter!==g&&e.minFilter!==ct&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",e)),s=t.get("EXT_texture_filter_anisotropic")){if(e.type===dt&&null===t.get("OES_texture_float_linear"))return;if(e.type===kr&&null===t.get("OES_texture_half_float_linear"))return;(e.anisotropy>1||r.get(e).__currentAnisotropy)&&(n.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,u.getMaxAnisotropy())),r.get(e).__currentAnisotropy=e.anisotropy)}}function st(t,r,o){var b,w,k,g,y,ut;void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",a),t.__webglTexture=n.createTexture(),r.isVideoTexture&&(l[r.id]=r),e.textures++);i.activeTexture(n.TEXTURE0+o);i.bindTexture(n.TEXTURE_2D,t.__webglTexture);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,r.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha);n.pixelStorei(n.UNPACK_ALIGNMENT,r.unpackAlignment);b=v(r.image,u.maxTextureSize);rt(r)&&!1===s(b)&&(b=it(b));var ft=s(b),p=f.convert(r.format),d=f.convert(r.type);if(c(n.TEXTURE_2D,r,ft),k=r.mipmaps,r.isDepthTexture){if(g=n.DEPTH_COMPONENT,r.type===dt){if(!tt)throw new Error("Float Depth Texture only supported in WebGL2.0");g=n.DEPTH_COMPONENT32F}else tt&&(g=n.DEPTH_COMPONENT16);r.format===gr&&g===n.DEPTH_COMPONENT&&r.type!==br&&r.type!==kf&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=br,d=f.convert(r.type));r.format===nu&&(g=n.DEPTH_STENCIL,r.type!==dr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=dr,d=f.convert(r.type)));i.texImage2D(n.TEXTURE_2D,0,g,b.width,b.height,0,p,d,null)}else if(r.isDataTexture)if(k.length>0&&ft){for(y=0,ut=k.length;y<ut;y++)w=k[y],i.texImage2D(n.TEXTURE_2D,y,p,w.width,w.height,0,p,d,w.data);r.generateMipmaps=!1}else i.texImage2D(n.TEXTURE_2D,0,p,b.width,b.height,0,p,d,b.data);else if(r.isCompressedTexture)for(y=0,ut=k.length;y<ut;y++)w=k[y],r.format!==nt&&r.format!==wi?i.getCompressedTextureFormats().indexOf(p)>-1?i.compressedTexImage2D(n.TEXTURE_2D,y,p,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(n.TEXTURE_2D,y,p,w.width,w.height,0,p,d,w.data);else if(k.length>0&&ft){for(y=0,ut=k.length;y<ut;y++)w=k[y],i.texImage2D(n.TEXTURE_2D,y,p,p,d,w);r.generateMipmaps=!1}else i.texImage2D(n.TEXTURE_2D,0,p,p,d,b);h(r,ft)&&n.generateMipmap(n.TEXTURE_2D);t.__version=r.version;r.onUpdate&&r.onUpdate(r)}function b(t,u,e,o){var s=f.convert(u.texture.format),h=f.convert(u.texture.type);i.texImage2D(o,0,s,u.width,u.height,0,s,h,null);n.bindFramebuffer(n.FRAMEBUFFER,t);n.framebufferTexture2D(n.FRAMEBUFFER,e,o,r.get(u.texture).__webglTexture,0);n.bindFramebuffer(n.FRAMEBUFFER,null)}function k(t,i){n.bindRenderbuffer(n.RENDERBUFFER,t);i.depthBuffer&&!i.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,i.width,i.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,t)):i.depthBuffer&&i.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,i.width,i.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,t)):n.renderbufferStorage(n.RENDERBUFFER,n.RGBA4,i.width,i.height);n.bindRenderbuffer(n.RENDERBUFFER,null)}function ht(t,i){if(i&&i.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(n.FRAMEBUFFER,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0);w(i.depthTexture,0);var u=r.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===gr)n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,u,0);else{if(i.depthTexture.format!==nu)throw new Error("Unknown depthTexture format");n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,u,0)}}function lt(t){var i=r.get(t),f=!0===t.isWebGLRenderTargetCube,u;if(t.depthTexture){if(f)throw new Error("target.depthTexture not supported in Cube render targets");ht(i.__webglFramebuffer,t)}else if(f)for(i.__webglDepthbuffer=[],u=0;u<6;u++)n.bindFramebuffer(n.FRAMEBUFFER,i.__webglFramebuffer[u]),i.__webglDepthbuffer[u]=n.createRenderbuffer(),k(i.__webglDepthbuffer[u],t);else n.bindFramebuffer(n.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=n.createRenderbuffer(),k(i.__webglDepthbuffer,t);n.bindFramebuffer(n.FRAMEBUFFER,null)}function at(t){var f=r.get(t),l=r.get(t.texture),a,o,u;if(t.addEventListener("dispose",p),l.__webglTexture=n.createTexture(),e.textures++,a=!0===t.isWebGLRenderTargetCube,o=s(t),a)for(f.__webglFramebuffer=[],u=0;u<6;u++)f.__webglFramebuffer[u]=n.createFramebuffer();else f.__webglFramebuffer=n.createFramebuffer();if(a){for(i.bindTexture(n.TEXTURE_CUBE_MAP,l.__webglTexture),c(n.TEXTURE_CUBE_MAP,t.texture,o),u=0;u<6;u++)b(f.__webglFramebuffer[u],t,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+u);h(t.texture,o)&&n.generateMipmap(n.TEXTURE_CUBE_MAP);i.bindTexture(n.TEXTURE_CUBE_MAP,null)}else i.bindTexture(n.TEXTURE_2D,l.__webglTexture),c(n.TEXTURE_2D,t.texture,o),b(f.__webglFramebuffer,t,n.COLOR_ATTACHMENT0,n.TEXTURE_2D),h(t.texture,o)&&n.generateMipmap(n.TEXTURE_2D),i.bindTexture(n.TEXTURE_2D,null);t.depthBuffer&&lt(t)}function vt(t){var f=t.texture,u,e;h(f,s(t))&&(u=t.isWebGLRenderTargetCube?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,e=r.get(f).__webglTexture,i.bindTexture(u,e),n.generateMipmap(u),i.bindTexture(u,null))}function yt(){for(var n in l)l[n].update()}var tt="undefined"!=typeof WebGL2RenderingContext&&n instanceof window.WebGL2RenderingContext,l={};this.setTexture2D=w;this.setTextureCube=et;this.setTextureCubeDynamic=ot;this.setupRenderTarget=at;this.updateRenderTargetMipmap=vt;this.updateVideoTextures=yt}function ch(){function t(t){var r=t.uuid,i=n[r];return void 0===i&&(i={},n[r]=i),i}function i(t){delete n[t.uuid]}function r(){n={}}var n={};return{get:t,remove:i,clear:r}}function lh(n,t,i){function gt(){var t=!1,i=new s,r=null,u=new s(0,0,0,0);return{setMask:function(i){r===i||t||(n.colorMask(i,i,i,i),r=i)},setLocked:function(n){t=n},setClear:function(t,r,f,e,o){!0===o&&(t*=e,r*=e,f*=e);i.set(t,r,f,e);!1===u.equals(i)&&(n.clearColor(t,r,f,e),u.copy(i))},reset:function(){t=!1;r=null;u.set(-1,0,0,0)}}}function ni(){var t=!1,i=null,u=null,e=null;return{setTest:function(t){t?r(n.DEPTH_TEST):f(n.DEPTH_TEST)},setMask:function(r){i===r||t||(n.depthMask(r),i=r)},setFunc:function(t){if(u!==t){if(t)switch(t){case dc:n.depthFunc(n.NEVER);break;case gc:n.depthFunc(n.ALWAYS);break;case nl:n.depthFunc(n.LESS);break;case vr:n.depthFunc(n.LEQUAL);break;case tl:n.depthFunc(n.EQUAL);break;case il:n.depthFunc(n.GEQUAL);break;case rl:n.depthFunc(n.GREATER);break;case ul:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}else n.depthFunc(n.LEQUAL);u=t}},setLocked:function(n){t=n},setClear:function(t){e!==t&&(n.clearDepth(t),e=t)},reset:function(){t=!1;i=null;u=null;e=null}}}function ti(){var t=!1,i=null,u=null,e=null,o=null,s=null,h=null,c=null,l=null;return{setTest:function(t){t?r(n.STENCIL_TEST):f(n.STENCIL_TEST)},setMask:function(r){i===r||t||(n.stencilMask(r),i=r)},setFunc:function(t,i,r){u===t&&e===i&&o===r||(n.stencilFunc(t,i,r),u=t,e=i,o=r)},setOp:function(t,i,r){s===t&&h===i&&c===r||(n.stencilOp(t,i,r),s=t,h=i,c=r)},setLocked:function(n){t=n},setClear:function(t){l!==t&&(n.clearStencil(t),l=t)},reset:function(){t=!1;i=null;u=null;e=null;o=null;s=null;h=null;c=null;l=null}}}function ht(t,i,r){var e=new Uint8Array(4),f=n.createTexture(),u;for(n.bindTexture(t,f),n.texParameteri(t,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(t,n.TEXTURE_MAG_FILTER,n.NEAREST),u=0;u<r;u++)n.texImage2D(i+u,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,e);return f}function ii(){for(var n=0,t=h.length;n<t;n++)h[n]=0}function ri(i){(h[i]=1,0===u[i]&&(n.enableVertexAttribArray(i),u[i]=1),0!==y[i])&&(t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,0),y[i]=0)}function ui(i,r){(h[i]=1,0===u[i]&&(n.enableVertexAttribArray(i),u[i]=1),y[i]!==r)&&(t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,r),y[i]=r)}function fi(){for(var t=0,i=u.length;t!==i;++t)u[t]!==h[t]&&(n.disableVertexAttribArray(t),u[t]=0)}function r(t){!0!==c[t]&&(n.enable(t),c[t]=!0)}function f(t){!1!==c[t]&&(n.disable(t),c[t]=!1)}function ei(){if(null===l&&(l=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")))for(var r=n.getParameter(n.COMPRESSED_TEXTURE_FORMATS),i=0;i<r.length;i++)l.push(r[i]);return l}function oi(t){return k!==t&&(n.useProgram(t),k=t,!0)}function a(t,u,e,o,s,h,c,l){if(t!==tf?r(n.BLEND):f(n.BLEND),t!==oc){if(t!==d||l!==vt)switch(t){case uc:l?(n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.ONE,n.ONE,n.ONE,n.ONE)):(n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,n.ONE));break;case fc:l?(n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.ZERO,n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ONE_MINUS_SRC_ALPHA)):(n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR));break;case ec:l?(n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA)):(n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.SRC_COLOR));break;default:l?(n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA)):(n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA))}g=null;nt=null;tt=null;it=null;rt=null;ut=null}else s=s||u,h=h||e,c=c||o,u===g&&s===it||(n.blendEquationSeparate(i.convert(u),i.convert(s)),g=u,it=s),e===nt&&o===tt&&h===rt&&c===ut||(n.blendFuncSeparate(i.convert(e),i.convert(o),i.convert(h),i.convert(c)),nt=e,tt=o,rt=h,ut=c);d=t;vt=l}function si(t,i){t.side===vi?f(n.CULL_FACE):r(n.CULL_FACE);var u=t.side===kt;i&&(u=!u);p(u);!0===t.transparent?a(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):a(tf);e.setFunc(t.depthFunc);e.setTest(t.depthTest);e.setMask(t.depthWrite);v.setMask(t.colorWrite);lt(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function p(t){ft!==t&&(t?n.frontFace(n.CW):n.frontFace(n.CCW),ft=t)}function ct(t){t!==gh?(r(n.CULL_FACE),t!==et&&(t===gu?n.cullFace(n.BACK):t===nc?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):f(n.CULL_FACE);et=t}function hi(t){t!==yt&&(gi&&n.lineWidth(t),yt=t)}function lt(t,i,u){t?(r(n.POLYGON_OFFSET_FILL),pt===i&&wt===u||(n.polygonOffset(i,u),pt=i,wt=u)):f(n.POLYGON_OFFSET_FILL)}function ci(t){t?r(n.SCISSOR_TEST):f(n.SCISSOR_TEST)}function at(t){void 0===t&&(t=n.TEXTURE0+ki-1);o!==t&&(n.activeTexture(t),o=t)}function li(t,i){null===o&&at();var r=ot[o];void 0===r&&(r={type:void 0,texture:void 0},ot[o]=r);r.type===t&&r.texture===i||(n.bindTexture(t,i||st[t]),r.type=t,r.texture=i)}function ai(){try{n.compressedTexImage2D.apply(n,arguments)}catch(n){console.error("THREE.WebGLState:",n)}}function yi(){try{n.texImage2D.apply(n,arguments)}catch(n){console.error("THREE.WebGLState:",n)}}function pi(t){!1===bt.equals(t)&&(n.scissor(t.x,t.y,t.z,t.w),bt.copy(t))}function wi(t){!1===dt.equals(t)&&(n.viewport(t.x,t.y,t.z,t.w),dt.copy(t))}function bi(){for(var t=0;t<u.length;t++)1===u[t]&&(n.disableVertexAttribArray(t),u[t]=0);c={};l=null;o=null;ot={};k=null;d=null;ft=null;et=null;v.reset();e.reset();w.reset()}var v=new gt,e=new ni,w=new ti,b=n.getParameter(n.MAX_VERTEX_ATTRIBS),h=new Uint8Array(b),u=new Uint8Array(b),y=new Uint8Array(b),c={},l=null,k=null,d=null,g=null,nt=null,tt=null,it=null,rt=null,ut=null,vt=!1,ft=null,et=null,yt=null,pt=null,wt=null,ki=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS),di=parseFloat(/^WebGL\ ([0-9])/.exec(n.getParameter(n.VERSION))[1]),gi=parseFloat(di)>=1,o=null,ot={},bt=new s,dt=new s,st={};return st[n.TEXTURE_2D]=ht(n.TEXTURE_2D,n.TEXTURE_2D,1),st[n.TEXTURE_CUBE_MAP]=ht(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),v.setClear(0,0,0,1),e.setClear(1),w.setClear(0),r(n.DEPTH_TEST),e.setFunc(vr),p(!1),ct(gu),r(n.CULL_FACE),r(n.BLEND),a(ar),{buffers:{color:v,depth:e,stencil:w},initAttributes:ii,enableAttribute:ri,enableAttributeAndDivisor:ui,disableUnusedAttributes:fi,enable:r,disable:f,getCompressedTextureFormats:ei,useProgram:oi,setBlending:a,setMaterial:si,setFlipSided:p,setCullFace:ct,setLineWidth:hi,setPolygonOffset:lt,setScissorTest:ci,activeTexture:at,bindTexture:li,compressedTexImage2D:ai,texImage2D:yi,scissor:pi,viewport:wi,reset:bi}}function ah(n,t,i){function c(){if(void 0!==u)return u;var i=t.get("EXT_texture_filter_anisotropic");return u=null!==i?n.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}function e(t){if("highp"===t){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var u,r=void 0!==i.precision?i.precision:"highp",f=e(r);f!==r&&(console.warn("THREE.WebGLRenderer:",r,"not supported, using",f,"instead."),r=f);var l=!0===i.logarithmicDepthBuffer,a=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),o=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=n.getParameter(n.MAX_TEXTURE_SIZE),y=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),p=n.getParameter(n.MAX_VERTEX_ATTRIBS),w=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),b=n.getParameter(n.MAX_VARYING_VECTORS),k=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),s=o>0,h=!!t.get("OES_texture_float");return{getMaxAnisotropy:c,getMaxPrecision:e,precision:r,logarithmicDepthBuffer:l,maxTextures:a,maxVertexTextures:o,maxTextureSize:v,maxCubemapSize:y,maxAttributes:p,maxVertexUniforms:w,maxVaryings:b,maxFragmentUniforms:k,vertexTextures:s,floatFragmentTextures:h,floatVertexTextures:s&&h}}function bt(n,t,i,r){tt.call(this);this.type="PerspectiveCamera";this.fov=void 0!==n?n:50;this.zoom=1;this.near=void 0!==i?i:.1;this.far=void 0!==r?r:2e3;this.focus=10;this.aspect=void 0!==t?t:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function hr(n){bt.call(this);this.cameras=n||[]}function vh(n){function l(){if(null!==t&&t.isPresenting){var i=t.getEyeParameters("left"),r=i.renderWidth,u=i.renderHeight;a=n.getPixelRatio();c=n.getSize();n.setDrawingBufferSize(2*r,u,1)}else v.enabled&&n.setDrawingBufferSize(c.width,c.height,a)}var v=this,t=null,f=null,h=null,o,i,r,e,c,a;"undefined"!=typeof window&&"VRFrameData"in window&&(f=new window.VRFrameData);o=new u;i=new bt;i.bounds=new s(0,0,.5,1);i.layers.enable(1);r=new bt;r.bounds=new s(.5,0,.5,1);r.layers.enable(2);e=new hr([i,r]);e.layers.enable(1);e.layers.enable(2);"undefined"!=typeof window&&window.addEventListener("vrdisplaypresentchange",l,!1);this.enabled=!1;this.getDevice=function(){return t};this.setDevice=function(n){void 0!==n&&(t=n)};this.setPoseTarget=function(n){void 0!==n&&(h=n)};this.getCamera=function(n){var c,s,l,a,u;return null===t?n:(t.depthNear=n.near,t.depthFar=n.far,t.getFrameData(f),c=f.pose,s=null!==h?h:n,null!==c.position?s.position.fromArray(c.position):s.position.set(0,0,0),null!==c.orientation&&s.quaternion.fromArray(c.orientation),s.updateMatrixWorld(),!1===t.isPresenting)?n:(i.near=n.near,r.near=n.near,i.far=n.far,r.far=n.far,e.matrixWorld.copy(n.matrixWorld),e.matrixWorldInverse.copy(n.matrixWorldInverse),i.matrixWorldInverse.fromArray(f.leftViewMatrix),r.matrixWorldInverse.fromArray(f.rightViewMatrix),l=s.parent,null!==l&&(o.getInverse(l.matrixWorld),i.matrixWorldInverse.multiply(o),r.matrixWorldInverse.multiply(o)),i.matrixWorld.getInverse(i.matrixWorldInverse),r.matrixWorld.getInverse(r.matrixWorldInverse),i.projectionMatrix.fromArray(f.leftProjectionMatrix),r.projectionMatrix.fromArray(f.rightProjectionMatrix),e.projectionMatrix.copy(i.projectionMatrix),a=t.getLayers(),a.length&&(u=a[0],null!==u.leftBounds&&4===u.leftBounds.length&&i.bounds.fromArray(u.leftBounds),null!==u.rightBounds&&4===u.rightBounds.length&&r.bounds.fromArray(u.rightBounds)),e)};this.submitFrame=function(){t&&t.isPresenting&&t.submitFrame()};this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",l)}}function yh(n){var t={};return{get:function(i){if(void 0!==t[i])return t[i];var r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":r=n.getExtension("WEBGL_compressed_texture_etc1");break;default:r=n.getExtension(i)}return null===r&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),t[i]=r,r}}}function ph(){function s(){n.value!==u&&(n.value=u,n.needsUpdate=t>0);f.numPlanes=t;f.numIntersection=0}function r(t,i,r,u){var s=null!==t?t.length:0,e=null,a,v,c,l;if(0!==s){if(e=n.value,!0!==u||null===e)for(a=r+4*s,v=i.matrixWorldInverse,h.getNormalMatrix(v),(null===e||e.length<a)&&(e=new Float32Array(a)),c=0,l=r;c!==s;++c,l+=4)o.copy(t[c]).applyMatrix4(v,h),o.normal.toArray(e,l),e[l+3]=o.constant;n.value=e;n.needsUpdate=!0}return f.numPlanes=s,e}var f=this,u=null,t=0,e=!1,i=!1,o=new b,h=new w,n={value:null,needsUpdate:!1};this.uniform=n;this.numPlanes=0;this.numIntersection=0;this.init=function(n,i,f){var o=0!==n.length||i||0!==t||e;return e=i,u=r(n,f,0),t=n.length,o};this.beginShadows=function(){i=!0;r(null)};this.endShadows=function(){i=!1;s()};this.setState=function(f,o,h,c,l,a){var v;if(e&&null!==f&&0!==f.length&&(!i||h)){var p=i?0:t,w=4*p,y=l.clippingState||null;for(n.value=y,y=r(f,c,w,a),v=0;v!==w;++v)y[v]=u[v];l.clippingState=y;this.numIntersection=o?this.numPlanes:0;this.numPlanes+=p}else i?r(null):s()}}function wh(n,t){function i(i){var r;if(i===yi)return n.REPEAT;if(i===d)return n.CLAMP_TO_EDGE;if(i===pr)return n.MIRRORED_REPEAT;if(i===g)return n.NEAREST;if(i===wr)return n.NEAREST_MIPMAP_NEAREST;if(i===wf)return n.NEAREST_MIPMAP_LINEAR;if(i===ct)return n.LINEAR;if(i===al)return n.LINEAR_MIPMAP_NEAREST;if(i===bf)return n.LINEAR_MIPMAP_LINEAR;if(i===pi)return n.UNSIGNED_BYTE;if(i===wl)return n.UNSIGNED_SHORT_4_4_4_4;if(i===bl)return n.UNSIGNED_SHORT_5_5_5_1;if(i===kl)return n.UNSIGNED_SHORT_5_6_5;if(i===vl)return n.BYTE;if(i===yl)return n.SHORT;if(i===br)return n.UNSIGNED_SHORT;if(i===pl)return n.INT;if(i===kf)return n.UNSIGNED_INT;if(i===dt)return n.FLOAT;if(i===kr&&null!==(r=t.get("OES_texture_half_float")))return r.HALF_FLOAT_OES;if(i===dl)return n.ALPHA;if(i===wi)return n.RGB;if(i===nt)return n.RGBA;if(i===gl)return n.LUMINANCE;if(i===na)return n.LUMINANCE_ALPHA;if(i===gr)return n.DEPTH_COMPONENT;if(i===nu)return n.DEPTH_STENCIL;if(i===rf)return n.FUNC_ADD;if(i===sc)return n.FUNC_SUBTRACT;if(i===hc)return n.FUNC_REVERSE_SUBTRACT;if(i===cc)return n.ZERO;if(i===lc)return n.ONE;if(i===ac)return n.SRC_COLOR;if(i===vc)return n.ONE_MINUS_SRC_COLOR;if(i===ef)return n.SRC_ALPHA;if(i===of)return n.ONE_MINUS_SRC_ALPHA;if(i===yc)return n.DST_ALPHA;if(i===pc)return n.ONE_MINUS_DST_ALPHA;if(i===wc)return n.DST_COLOR;if(i===bc)return n.ONE_MINUS_DST_COLOR;if(i===kc)return n.SRC_ALPHA_SATURATE;if((i===df||i===gf||i===ne||i===te)&&null!==(r=t.get("WEBGL_compressed_texture_s3tc"))){if(i===df)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===gf)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===ne)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===te)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((i===ie||i===re||i===ue||i===fe)&&null!==(r=t.get("WEBGL_compressed_texture_pvrtc"))){if(i===ie)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===re)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===ue)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===fe)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===ta&&null!==(r=t.get("WEBGL_compressed_texture_etc1")))return r.COMPRESSED_RGB_ETC1_WEBGL;if((i===uf||i===ff)&&null!==(r=t.get("EXT_blend_minmax"))){if(i===uf)return r.MIN_EXT;if(i===ff)return r.MAX_EXT}return i===dr&&null!==(r=t.get("WEBGL_depth_texture"))?r.UNSIGNED_INT_24_8_WEBGL:0}return{convert:i}}function bh(n){function fr(){return null===yi?a:1}function er(){h=new yh(r);h.get("WEBGL_depth_texture");h.get("OES_texture_float");h.get("OES_texture_float_linear");h.get("OES_texture_half_float");h.get("OES_texture_half_float_linear");h.get("OES_standard_derivatives");h.get("OES_element_index_uint");h.get("ANGLE_instanced_arrays");st=new wh(r,h);b=new ah(r,h,n);f=new lh(r,h,st);f.scissor(yt.copy(ri).multiplyScalar(a));f.viewport(et.copy(ii).multiplyScalar(a));y=new ch;k=new hh(r,h,f,y,b,st,nr);ei=new ss(r);oi=new ks(r,ei,nr);ir=new nh(oi,it);gr=new ps(r);vt=new sh(e,h,b);c=new gs;si=new vs;ut=new hs(e,f,oi,br);nu=new bs(r,h,it);tu=new ws(r,h,it);iu=new fs(e,r,f,k,b);ru=new es(e,r,f,k,b);e.info.programs=vt.programs;e.context=r;e.capabilities=b;e.extensions=h;e.properties=y;e.renderLists=si;e.state=f}function or(n){n.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");vi=!0}function sr(){console.log("THREE.WebGLRenderer: Context Restored.");vi=!1;er()}function hr(n){var t=n.target;t.removeEventListener("dispose",hr);uu(t)}function uu(n){cr(n);y.remove(n)}function cr(n){var t=y.get(n).program;n.program=void 0;void 0!==t&&vt.releaseProgram(t)}function fu(n,t,i){n.render(function(n){e.renderBufferImmediate(n,t,i)})}function eu(n,t,i,u){var l,e,o,s;if(i&&i.isInstancedBufferGeometry&&null===h.get("ANGLE_instanced_arrays"))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===u&&(u=0);f.initAttributes();var nt=i.attributes,p=t.getAttributes(),w=n.defaultAttributeValues;for(l in p)if(e=p[l],e>=0)if(o=nt[l],void 0!==o){var b=o.normalized,v=o.itemSize,a=ei.get(o);if(void 0===a)continue;var k=a.buffer,d=a.type,y=a.bytesPerElement;if(o.isInterleavedBufferAttribute){var c=o.data,g=c.stride,tt=o.offset;c&&c.isInstancedInterleavedBuffer?(f.enableAttributeAndDivisor(e,c.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=c.meshPerAttribute*c.count)):f.enableAttribute(e);r.bindBuffer(r.ARRAY_BUFFER,k);r.vertexAttribPointer(e,v,d,b,g*y,(u*g+tt)*y)}else o.isInstancedBufferAttribute?(f.enableAttributeAndDivisor(e,o.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=o.meshPerAttribute*o.count)):f.enableAttribute(e),r.bindBuffer(r.ARRAY_BUFFER,k),r.vertexAttribPointer(e,v,d,b,0,u*v*y)}else if(void 0!==w&&(s=w[l],void 0!==s))switch(s.length){case 2:r.vertexAttrib2fv(e,s);break;case 3:r.vertexAttrib3fv(e,s);break;case 4:r.vertexAttrib4fv(e,s);break;default:r.vertexAttrib1fv(e,s)}f.disableUnusedAttributes()}function ou(){if(!ur){var n=d.getDevice();n&&n.isPresenting?n.requestAnimationFrame(pt):window.requestAnimationFrame(pt);ur=!0}}function pt(n){null!==hi&&hi(n);var t=d.getDevice();t&&t.isPresenting?t.requestAnimationFrame(pt):window.requestAnimationFrame(pt)}function ar(n,t,i){var f,u,o,e;if(!1!==n.visible){if(n.layers.test(t.layers))if(n.isLight)ht.push(n),n.castShadow&&rt.push(n);else if(n.isSprite)n.frustumCulled&&!ki.intersectsSprite(n)||li.push(n);else if(n.isLensFlare)ai.push(n);else if(n.isImmediateRenderObject)i&&at.setFromMatrixPosition(n.matrixWorld).applyMatrix4(fi),g.push(n,null,n.material,at.z,null);else if((n.isMesh||n.isLine||n.isPoints)&&(n.isSkinnedMesh&&n.skeleton.update(),!n.frustumCulled||ki.intersectsObject(n)))if(i&&at.setFromMatrixPosition(n.matrixWorld).applyMatrix4(fi),f=ir.update(n),u=n.material,Array.isArray(u))for(var s=f.groups,r=0,h=s.length;r<h;r++)o=s[r],e=u[o.materialIndex],e&&e.visible&&g.push(n,f,e,at.z,o);else u.visible&&g.push(n,f,u,at.z,null);for(var c=n.children,r=0,h=c.length;r<h;r++)ar(c[r],t,i)}}function wt(n,t,i,r){for(var o,u=0,l=n.length;u<l;u++){var e=n[u],h=e.object,y=e.geometry,p=void 0===r?e.material:r,w=e.group;if(i.isArrayCamera){ti=i;for(var b=i.cameras,c=0,k=b.length;c<k;c++)if(o=b[c],h.layers.test(o.layers)){var s=o.bounds,d=s.x*tt,g=s.y*v,nt=s.z*tt,it=s.w*v;f.viewport(et.set(d,g,nt,it).multiplyScalar(a));vr(h,t,o,y,p,w)}}else ti=null,vr(h,t,i,y,p,w)}}function vr(n,t,i,r,u,o){var s,h;(n.onBeforeRender(e,t,i,r,u,o),n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,n.matrixWorld),n.normalMatrix.getNormalMatrix(n.modelViewMatrix),n.isImmediateRenderObject)?(s=n.isMesh&&n.matrixWorld.determinant()<0,f.setMaterial(u,s),h=yr(i,t.fog,u,n),ni="",fu(n,h,u)):e.renderBufferDirect(i,t.fog,r,u,n,o);n.onAfterRender(e,t,i,r,u,o)}function ci(n,t,i){var u=y.get(n),s=vt.getParameters(n,c.state,rt,t,w.numPlanes,w.numIntersection,i),a=vt.getProgramCode(n,s),o=u.program,v=!0,h,l,f,r,b,k;if(void 0===o)n.addEventListener("dispose",hr);else if(o.code!==a)cr(n);else{if(void 0!==s.shaderID)return;v=!1}if(v&&(s.shaderID?(h=gt[s.shaderID],u.shader={name:n.type,uniforms:p.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}):u.shader={name:n.type,uniforms:n.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader},n.onBeforeCompile(u.shader),o=vt.acquireProgram(n,u.shader,s,a),u.program=o,n.program=o),l=o.getAttributes(),n.morphTargets)for(n.numSupportedMorphTargets=0,f=0;f<e.maxMorphTargets;f++)l["morphTarget"+f]>=0&&n.numSupportedMorphTargets++;if(n.morphNormals)for(n.numSupportedMorphNormals=0,f=0;f<e.maxMorphNormals;f++)l["morphNormal"+f]>=0&&n.numSupportedMorphNormals++;r=u.shader.uniforms;(n.isShaderMaterial||n.isRawShaderMaterial)&&!0!==n.clipping||(u.numClippingPlanes=w.numPlanes,u.numIntersection=w.numIntersection,r.clippingPlanes=w.uniform);u.fog=t;u.lightsHash=c.state.hash;n.lights&&(r.ambientLightColor.value=c.state.ambient,r.directionalLights.value=c.state.directional,r.spotLights.value=c.state.spot,r.rectAreaLights.value=c.state.rectArea,r.pointLights.value=c.state.point,r.hemisphereLights.value=c.state.hemi,r.directionalShadowMap.value=c.state.directionalShadowMap,r.directionalShadowMatrix.value=c.state.directionalShadowMatrix,r.spotShadowMap.value=c.state.spotShadowMap,r.spotShadowMatrix.value=c.state.spotShadowMatrix,r.pointShadowMap.value=c.state.pointShadowMap,r.pointShadowMatrix.value=c.state.pointShadowMatrix);b=u.program.getUniforms();k=ot.seqWithValue(b.seq,r);u.uniformsList=k}function yr(n,t,u,s){var a,rt,it,v,et,p,d,st;bi=0;a=y.get(u);ui&&(gi||n!==ct)&&(rt=n===ct&&u.id===kt,w.setState(u.clippingPlanes,u.clipIntersection,u.clipShadows,n,a,rt));!1===u.needsUpdate&&(void 0===a.program?u.needsUpdate=!0:u.fog&&a.fog!==t?u.needsUpdate=!0:u.lights&&a.lightsHash!==c.state.hash?u.needsUpdate=!0:void 0===a.numClippingPlanes||a.numClippingPlanes===w.numPlanes&&a.numIntersection===w.numIntersection||(u.needsUpdate=!0));u.needsUpdate&&(ci(u,t,s),u.needsUpdate=!1);var ut=!1,k=!1,g=!1,tt=a.program,l=tt.getUniforms(),h=a.shader.uniforms;return(f.useProgram(tt.program)&&(ut=!0,k=!0,g=!0),u.id!==kt&&(kt=u.id,k=!0),ut||n!==ct)&&((l.setValue(r,"projectionMatrix",n.projectionMatrix),b.logarithmicDepthBuffer&&l.setValue(r,"logDepthBufFC",2/(Math.log(n.far+1)/Math.LN2)),ct!==(ti||n)&&(ct=ti||n,k=!0,g=!0),u.isShaderMaterial||u.isMeshPhongMaterial||u.isMeshStandardMaterial||u.envMap)&&(it=l.map.cameraPosition,void 0!==it&&it.setValue(r,at.setFromMatrixPosition(n.matrixWorld))),(u.isMeshPhongMaterial||u.isMeshLambertMaterial||u.isMeshBasicMaterial||u.isMeshStandardMaterial||u.isShaderMaterial||u.skinning)&&l.setValue(r,"viewMatrix",n.matrixWorldInverse)),u.skinning&&(l.setOptional(r,s,"bindMatrix"),l.setOptional(r,s,"bindMatrixInverse"),v=s.skeleton,v&&(et=v.bones,b.floatVertexTextures?(void 0===v.boneTexture&&(p=Math.sqrt(4*et.length),p=o.ceilPowerOfTwo(p),p=Math.max(p,4),d=new Float32Array(p*p*4),d.set(v.boneMatrices),st=new lt(d,p,p,nt,dt),v.boneMatrices=d,v.boneTexture=st,v.boneTextureSize=p),l.setValue(r,"boneTexture",v.boneTexture),l.setValue(r,"boneTextureSize",v.boneTextureSize)):l.setOptional(r,v,"boneMatrices"))),k&&(l.setValue(r,"toneMappingExposure",e.toneMappingExposure),l.setValue(r,"toneMappingWhitePoint",e.toneMappingWhitePoint),u.lights&&ku(h,g),t&&u.fog&&lu(h,t),u.isMeshBasicMaterial?ft(h,u):u.isMeshLambertMaterial?(ft(h,u),au(h,u)):u.isMeshPhongMaterial?(ft(h,u),u.isMeshToonMaterial?vu(h,u):pr(h,u)):u.isMeshStandardMaterial?(ft(h,u),u.isMeshPhysicalMaterial?yu(h,u):wr(h,u)):u.isMeshDepthMaterial?(ft(h,u),pu(h,u)):u.isMeshDistanceMaterial?(ft(h,u),wu(h,u)):u.isMeshNormalMaterial?(ft(h,u),bu(h,u)):u.isLineBasicMaterial?(su(h,u),u.isLineDashedMaterial&&hu(h,u)):u.isPointsMaterial?cu(h,u):u.isShadowMaterial&&(h.color.value=u.color,h.opacity.value=u.opacity),void 0!==h.ltcMat&&(h.ltcMat.value=i.LTC_MAT_TEXTURE),void 0!==h.ltcMag&&(h.ltcMag.value=i.LTC_MAG_TEXTURE),ot.upload(r,a.uniformsList,h,e)),l.setValue(r,"modelViewMatrix",s.modelViewMatrix),l.setValue(r,"normalMatrix",s.normalMatrix),l.setValue(r,"modelMatrix",s.matrixWorld),tt}function ft(n,t){var i;if(n.opacity.value=t.opacity,t.color&&(n.diffuse.value=t.color),t.emissive&&n.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(n.map.value=t.map),t.alphaMap&&(n.alphaMap.value=t.alphaMap),t.specularMap&&(n.specularMap.value=t.specularMap),t.envMap&&(n.envMap.value=t.envMap,n.flipEnvMap.value=t.envMap&&t.envMap.isCubeTexture?-1:1,n.reflectivity.value=t.reflectivity,n.refractionRatio.value=t.refractionRatio),t.lightMap&&(n.lightMap.value=t.lightMap,n.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(n.aoMap.value=t.aoMap,n.aoMapIntensity.value=t.aoMapIntensity),t.map?i=t.map:t.specularMap?i=t.specularMap:t.displacementMap?i=t.displacementMap:t.normalMap?i=t.normalMap:t.bumpMap?i=t.bumpMap:t.roughnessMap?i=t.roughnessMap:t.metalnessMap?i=t.metalnessMap:t.alphaMap?i=t.alphaMap:t.emissiveMap&&(i=t.emissiveMap),void 0!==i){if(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate){var r=i.offset,u=i.repeat,e=i.rotation,f=i.center;i.matrix.setUvTransform(r.x,r.y,u.x,u.y,e,f.x,f.y)}n.uvTransform.value.copy(i.matrix)}}function su(n,t){n.diffuse.value=t.color;n.opacity.value=t.opacity}function hu(n,t){n.dashSize.value=t.dashSize;n.totalSize.value=t.dashSize+t.gapSize;n.scale.value=t.scale}function cu(n,t){if(n.diffuse.value=t.color,n.opacity.value=t.opacity,n.size.value=t.size*a,n.scale.value=.5*v,n.map.value=t.map,null!==t.map){if(!0===t.map.matrixAutoUpdate){var i=t.map.offset,r=t.map.repeat,f=t.map.rotation,u=t.map.center;t.map.matrix.setUvTransform(i.x,i.y,r.x,r.y,f,u.x,u.y)}n.uvTransform.value.copy(t.map.matrix)}}function lu(n,t){n.fogColor.value=t.color;t.isFog?(n.fogNear.value=t.near,n.fogFar.value=t.far):t.isFogExp2&&(n.fogDensity.value=t.density)}function au(n,t){t.emissiveMap&&(n.emissiveMap.value=t.emissiveMap)}function pr(n,t){n.specular.value=t.specular;n.shininess.value=Math.max(t.shininess,.0001);t.emissiveMap&&(n.emissiveMap.value=t.emissiveMap);t.bumpMap&&(n.bumpMap.value=t.bumpMap,n.bumpScale.value=t.bumpScale);t.normalMap&&(n.normalMap.value=t.normalMap,n.normalScale.value.copy(t.normalScale));t.displacementMap&&(n.displacementMap.value=t.displacementMap,n.displacementScale.value=t.displacementScale,n.displacementBias.value=t.displacementBias)}function vu(n,t){pr(n,t);t.gradientMap&&(n.gradientMap.value=t.gradientMap)}function wr(n,t){n.roughness.value=t.roughness;n.metalness.value=t.metalness;t.roughnessMap&&(n.roughnessMap.value=t.roughnessMap);t.metalnessMap&&(n.metalnessMap.value=t.metalnessMap);t.emissiveMap&&(n.emissiveMap.value=t.emissiveMap);t.bumpMap&&(n.bumpMap.value=t.bumpMap,n.bumpScale.value=t.bumpScale);t.normalMap&&(n.normalMap.value=t.normalMap,n.normalScale.value.copy(t.normalScale));t.displacementMap&&(n.displacementMap.value=t.displacementMap,n.displacementScale.value=t.displacementScale,n.displacementBias.value=t.displacementBias);t.envMap&&(n.envMapIntensity.value=t.envMapIntensity)}function yu(n,t){n.clearCoat.value=t.clearCoat;n.clearCoatRoughness.value=t.clearCoatRoughness;wr(n,t)}function pu(n,t){t.displacementMap&&(n.displacementMap.value=t.displacementMap,n.displacementScale.value=t.displacementScale,n.displacementBias.value=t.displacementBias)}function wu(n,t){t.displacementMap&&(n.displacementMap.value=t.displacementMap,n.displacementScale.value=t.displacementScale,n.displacementBias.value=t.displacementBias);n.referencePosition.value.copy(t.referencePosition);n.nearDistance.value=t.nearDistance;n.farDistance.value=t.farDistance}function bu(n,t){t.bumpMap&&(n.bumpMap.value=t.bumpMap,n.bumpScale.value=t.bumpScale);t.normalMap&&(n.normalMap.value=t.normalMap,n.normalScale.value.copy(t.normalScale));t.displacementMap&&(n.displacementMap.value=t.displacementMap,n.displacementScale.value=t.displacementScale,n.displacementBias.value=t.displacementBias)}function ku(n,t){n.ambientLightColor.needsUpdate=t;n.directionalLights.needsUpdate=t;n.pointLights.needsUpdate=t;n.spotLights.needsUpdate=t;n.rectAreaLights.needsUpdate=t;n.hemisphereLights.needsUpdate=t}function du(){var n=bi;return n>=b.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+n+" texture units while this GPU supports only "+b.maxTextures),bi+=1,n}var r,tr,h,b,f,y,k,ei,oi,ir,c,vt,si,ut,gr,nu,tu,iu,ru,st,d,rr,ur,hi;console.log("THREE.WebGLRenderer",dh);n=n||{};var l=void 0!==n.canvas?n.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),gu=void 0!==n.context?n.context:null,nf=void 0!==n.alpha&&n.alpha,tf=void 0===n.depth||n.depth,rf=void 0===n.stencil||n.stencil,uf=void 0!==n.antialias&&n.antialias,br=void 0===n.premultipliedAlpha||n.premultipliedAlpha,ff=void 0!==n.preserveDrawingBuffer&&n.preserveDrawingBuffer,ef=void 0!==n.powerPreference?n.powerPreference:"default",ht=[],rt=[],g=null,li=[],ai=[];this.domElement=l;this.context=null;this.autoClear=!0;this.autoClearColor=!0;this.autoClearDepth=!0;this.autoClearStencil=!0;this.sortObjects=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.gammaFactor=2;this.gammaInput=!1;this.gammaOutput=!1;this.physicallyCorrectLights=!1;this.toneMapping=hf;this.toneMappingExposure=1;this.toneMappingWhitePoint=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var e=this,vi=!1,yi=null,bt=null,kt=-1,ni="",ct=null,ti=null,et=new s,yt=new s,wi=null,bi=0,tt=l.width,v=l.height,a=1,ii=new s(0,0,tt,v),ri=new s(0,0,tt,v),dr=!1,ki=new di,w=new ph,ui=!1,gi=!1,fi=new u,at=new t,nr={geometries:0,textures:0},it={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:it,memory:nr,programs:null};try{if(tr={alpha:nf,depth:tf,stencil:rf,antialias:uf,premultipliedAlpha:br,preserveDrawingBuffer:ff,powerPreference:ef},l.addEventListener("webglcontextlost",or,!1),l.addEventListener("webglcontextrestored",sr,!1),null===(r=gu||l.getContext("webgl",tr)||l.getContext("experimental-webgl",tr)))throw null!==l.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===r.getShaderPrecisionFormat&&(r.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(n){console.error("THREE.WebGLRenderer: "+n.message)}er();d=new vh(e);this.vr=d;rr=new os(e,ir,b.maxTextureSize);this.shadowMap=rr;this.getContext=function(){return r};this.getContextAttributes=function(){return r.getContextAttributes()};this.forceContextLoss=function(){var n=h.get("WEBGL_lose_context");n&&n.loseContext()};this.forceContextRestore=function(){var n=h.get("WEBGL_lose_context");n&&n.restoreContext()};this.getPixelRatio=function(){return a};this.setPixelRatio=function(n){void 0!==n&&(a=n,this.setSize(tt,v,!1))};this.getSize=function(){return{width:tt,height:v}};this.setSize=function(n,t,i){var r=d.getDevice();if(r&&r.isPresenting)return void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");tt=n;v=t;l.width=n*a;l.height=t*a;!1!==i&&(l.style.width=n+"px",l.style.height=t+"px");this.setViewport(0,0,n,t)};this.getDrawingBufferSize=function(){return{width:tt*a,height:v*a}};this.setDrawingBufferSize=function(n,t,i){tt=n;v=t;a=i;l.width=n*i;l.height=t*i;this.setViewport(0,0,n,t)};this.setViewport=function(n,t,i,r){ii.set(n,v-t-r,i,r);f.viewport(et.copy(ii).multiplyScalar(a))};this.setScissor=function(n,t,i,r){ri.set(n,v-t-r,i,r);f.scissor(yt.copy(ri).multiplyScalar(a))};this.setScissorTest=function(n){f.setScissorTest(dr=n)};this.getClearColor=function(){return ut.getClearColor()};this.setClearColor=function(){ut.setClearColor.apply(ut,arguments)};this.getClearAlpha=function(){return ut.getClearAlpha()};this.setClearAlpha=function(){ut.setClearAlpha.apply(ut,arguments)};this.clear=function(n,t,i){var u=0;(void 0===n||n)&&(u|=r.COLOR_BUFFER_BIT);(void 0===t||t)&&(u|=r.DEPTH_BUFFER_BIT);(void 0===i||i)&&(u|=r.STENCIL_BUFFER_BIT);r.clear(u)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.clearTarget=function(n,t,i,r){this.setRenderTarget(n);this.clear(t,i,r)};this.dispose=function(){l.removeEventListener("webglcontextlost",or,!1);l.removeEventListener("webglcontextrestored",sr,!1);si.dispose();d.dispose()};this.renderBufferImmediate=function(n,t,i){var o,s,u,a;if(f.initAttributes(),o=y.get(n),n.hasPositions&&!o.position&&(o.position=r.createBuffer()),n.hasNormals&&!o.normal&&(o.normal=r.createBuffer()),n.hasUvs&&!o.uv&&(o.uv=r.createBuffer()),n.hasColors&&!o.color&&(o.color=r.createBuffer()),s=t.getAttributes(),n.hasPositions&&(r.bindBuffer(r.ARRAY_BUFFER,o.position),r.bufferData(r.ARRAY_BUFFER,n.positionArray,r.DYNAMIC_DRAW),f.enableAttribute(s.position),r.vertexAttribPointer(s.position,3,r.FLOAT,!1,0,0)),n.hasNormals){if(r.bindBuffer(r.ARRAY_BUFFER,o.normal),!i.isMeshPhongMaterial&&!i.isMeshStandardMaterial&&!i.isMeshNormalMaterial&&!0===i.flatShading)for(u=0,a=3*n.count;u<a;u+=9){var e=n.normalArray,h=(e[u+0]+e[u+3]+e[u+6])/3,c=(e[u+1]+e[u+4]+e[u+7])/3,l=(e[u+2]+e[u+5]+e[u+8])/3;e[u+0]=h;e[u+1]=c;e[u+2]=l;e[u+3]=h;e[u+4]=c;e[u+5]=l;e[u+6]=h;e[u+7]=c;e[u+8]=l}r.bufferData(r.ARRAY_BUFFER,n.normalArray,r.DYNAMIC_DRAW);f.enableAttribute(s.normal);r.vertexAttribPointer(s.normal,3,r.FLOAT,!1,0,0)}n.hasUvs&&i.map&&(r.bindBuffer(r.ARRAY_BUFFER,o.uv),r.bufferData(r.ARRAY_BUFFER,n.uvArray,r.DYNAMIC_DRAW),f.enableAttribute(s.uv),r.vertexAttribPointer(s.uv,2,r.FLOAT,!1,0,0));n.hasColors&&i.vertexColors!==lr&&(r.bindBuffer(r.ARRAY_BUFFER,o.color),r.bufferData(r.ARRAY_BUFFER,n.colorArray,r.DYNAMIC_DRAW),f.enableAttribute(s.color),r.vertexAttribPointer(s.color,3,r.FLOAT,!1,0,0));f.disableUnusedAttributes();r.drawArrays(r.TRIANGLES,0,n.count);n.count=0};this.renderBufferDirect=function(n,t,i,u,e,o){var tt=e.isMesh&&e.matrixWorld.determinant()<0,p,s,l,a;f.setMaterial(u,tt);var v=yr(n,t,u,e),k=i.id+"_"+v.id+"_"+(!0===u.wireframe),y=!1;k!==ni&&(ni=k,y=!0);e.morphTargetInfluences&&(gr.update(e,i,u,v),y=!0);var h=i.index,d=i.attributes.position,c=1;!0===u.wireframe&&(h=oi.getWireframeAttribute(i),c=2);s=nu;null!==h&&(p=ei.get(h),s=tu,s.setIndex(p));y&&(eu(u,v,i),null!==h&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,p.buffer));l=0;null!==h?l=h.count:void 0!==d&&(l=d.count);var g=i.drawRange.start*c,it=i.drawRange.count*c,nt=null!==o?o.start*c:0,rt=null!==o?o.count*c:1/0,w=Math.max(g,nt),ut=Math.min(l,g+it,nt+rt)-1,b=Math.max(0,ut-w+1);if(0!==b){if(e.isMesh)if(!0===u.wireframe)f.setLineWidth(u.wireframeLinewidth*fr()),s.setMode(r.LINES);else switch(e.drawMode){case ee:s.setMode(r.TRIANGLES);break;case ia:s.setMode(r.TRIANGLE_STRIP);break;case ra:s.setMode(r.TRIANGLE_FAN)}else e.isLine?(a=u.linewidth,void 0===a&&(a=1),f.setLineWidth(a*fr()),e.isLineSegments?s.setMode(r.LINES):e.isLineLoop?s.setMode(r.LINE_LOOP):s.setMode(r.LINE_STRIP)):e.isPoints&&s.setMode(r.POINTS);i&&i.isInstancedBufferGeometry?i.maxInstancedCount>0&&s.renderInstances(i,w,b):s.render(w,b)}};this.compile=function(n,t){ht.length=0;rt.length=0;n.traverse(function(n){n.isLight&&(ht.push(n),n.castShadow&&rt.push(n))});c.setup(ht,rt,t);n.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var i=0;i<t.material.length;i++)ci(t.material[i],n.fog,t);else ci(t.material,n.fog,t)})};ur=!1;hi=null;this.animate=function(n){hi=n;ou()};this.render=function(n,t,i,r){var u,o,s;if(!t||!t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");vi||(ni="",kt=-1,ct=null,!0===n.autoUpdate&&n.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),d.enabled&&(t=d.getCamera(t)),fi.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ki.setFromMatrix(fi),ht.length=0,rt.length=0,li.length=0,ai.length=0,gi=this.localClippingEnabled,ui=w.init(this.clippingPlanes,gi,t),g=si.get(n,t),g.init(),ar(n,t,e.sortObjects),!0===e.sortObjects&&g.sort(),k.updateVideoTextures(),ui&&w.beginShadows(),rr.render(rt,n,t),c.setup(ht,rt,t),ui&&w.endShadows(),it.frame++,it.calls=0,it.vertices=0,it.faces=0,it.points=0,void 0===i&&(i=null),this.setRenderTarget(i),ut.render(g,n,t,r),u=g.opaque,o=g.transparent,n.overrideMaterial?(s=n.overrideMaterial,u.length&&wt(u,n,t,s),o.length&&wt(o,n,t,s)):(u.length&&wt(u,n,t),o.length&&wt(o,n,t)),ru.render(li,n,t),iu.render(ai,n,t,et),i&&k.updateRenderTargetMipmap(i),f.buffers.depth.setTest(!0),f.buffers.depth.setMask(!0),f.buffers.color.setMask(!0),f.setPolygonOffset(!1),d.enabled&&d.submitFrame())};this.setFaceCulling=function(n,t){f.setCullFace(n);f.setFlipSided(t===tc)};this.allocTextureUnit=du;this.setTexture2D=function(){var n=!1;return function(t,i){t&&t.isWebGLRenderTarget&&(n||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),n=!0),t=t.texture);k.setTexture2D(t,i)}}();this.setTexture=function(){var n=!1;return function(t,i){n||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),n=!0);k.setTexture2D(t,i)}}();this.setTextureCube=function(){var n=!1;return function(t,i){t&&t.isWebGLRenderTargetCube&&(n||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),n=!0),t=t.texture);t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?k.setTextureCube(t,i):k.setTextureCubeDynamic(t,i)}}();this.getRenderTarget=function(){return yi};this.setRenderTarget=function(n){var t,i,u,e;yi=n;n&&void 0===y.get(n).__webglFramebuffer&&k.setupRenderTarget(n);t=null;i=!1;n?(u=y.get(n).__webglFramebuffer,n.isWebGLRenderTargetCube?(t=u[n.activeCubeFace],i=!0):t=u,et.copy(n.viewport),yt.copy(n.scissor),wi=n.scissorTest):(et.copy(ii).multiplyScalar(a),yt.copy(ri).multiplyScalar(a),wi=dr);(bt!==t&&(r.bindFramebuffer(r.FRAMEBUFFER,t),bt=t),f.viewport(et),f.scissor(yt),f.setScissorTest(wi),i)&&(e=y.get(n.texture),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+n.activeCubeFace,e.__webglTexture,n.activeMipMapLevel))};this.readRenderTargetPixels=function(n,t,i,u,f,e){var s,c;if(!n||!n.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");if(s=y.get(n).__webglFramebuffer,s){c=!1;s!==bt&&(r.bindFramebuffer(r.FRAMEBUFFER,s),c=!0);try{var a=n.texture,l=a.format,o=a.type;if(l!==nt&&st.convert(l)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(o===pi||st.convert(o)===r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)||o===dt&&(h.get("OES_texture_float")||h.get("WEBGL_color_buffer_float"))||o===kr&&h.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE?t>=0&&t<=n.width-u&&i>=0&&i<=n.height-f&&r.readPixels(t,i,u,f,st.convert(l),st.convert(o),e):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{c&&r.bindFramebuffer(r.FRAMEBUFFER,bt)}}}}function cr(){h.call(this);this.type="Scene";this.background=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=!0}function kh(n,t,i){var r=this,e=!1,u=0,f=0,o=void 0;this.onStart=void 0;this.onLoad=n;this.onProgress=t;this.onError=i;this.itemStart=function(n){f++;!1===e&&void 0!==r.onStart&&r.onStart(n,u,f);e=!0};this.itemEnd=function(n){u++;void 0!==r.onProgress&&r.onProgress(n,u,f);u===f&&(e=!1,void 0!==r.onLoad&&r.onLoad())};this.itemError=function(n){void 0!==r.onError&&r.onError(n)};this.resolveURL=function(n){return o?o(n):n};this.setURLModifier=function(n){return o=n,this}}function ku(n){this.manager=void 0!==n?n:iu}function du(n){this.manager=void 0!==n?n:iu}var se,ki,pe,we,be,ke,de,ge,tu,iu;void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52));void 0===Number.isInteger&&(Number.isInteger=function(n){return"number"==typeof n&&isFinite(n)&&Math.floor(n)===n});void 0===Math.sign&&(Math.sign=function(n){return n<0?-1:n>0?1:+n});"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});void 0===Object.assign&&function(){Object.assign=function(n){var u,i,t,r;if(void 0===n||null===n)throw new TypeError("Cannot convert undefined or null to object");for(u=Object(n),i=1;i<arguments.length;i++)if(t=arguments[i],void 0!==t&&null!==t)for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&(u[r]=t[r]);return u}}();Object.assign(et.prototype,{addEventListener:function(n,t){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[n]&&(i[n]=[]);-1===i[n].indexOf(t)&&i[n].push(t)},hasEventListener:function(n,t){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[n]&&-1!==i[n].indexOf(t)},removeEventListener:function(n,t){var u,i,r;void 0!==this._listeners&&(u=this._listeners,i=u[n],void 0!==i&&(r=i.indexOf(t),-1!==r&&i.splice(r,1)))},dispatchEvent:function(n){var r,t;if(void 0!==this._listeners&&(r=this._listeners,t=r[n.type],void 0!==t)){n.target=this;for(var u=t.slice(0),i=0,f=u.length;i<f;i++)u[i].call(this,n)}}});var dh="89",gh=0,gu=1,nc=2,tc=0,nf=1,ic=2,ei=0,kt=1,vi=2,rc=1,lr=0,tf=0,ar=1,uc=2,fc=3,ec=4,oc=5,rf=100,sc=101,hc=102,uf=103,ff=104,cc=200,lc=201,ac=202,vc=203,ef=204,of=205,yc=206,pc=207,wc=208,bc=209,kc=210,dc=0,gc=1,nl=2,vr=3,tl=4,il=5,rl=6,ul=7,sf=0,fl=1,el=2,yr=0,hf=1,ol=2,sl=3,hl=4,cf=300,lf=301,af=302,cl=303,vf=304,ll=305,yf=306,pf=307,yi=1e3,d=1001,pr=1002,g=1003,wr=1004,wf=1005,ct=1006,al=1007,bf=1008,pi=1009,vl=1010,yl=1011,br=1012,pl=1013,kf=1014,dt=1015,kr=1016,wl=1017,bl=1018,kl=1019,dr=1020,dl=1021,wi=1022,nt=1023,gl=1024,na=1025,gr=1026,nu=1027,df=2001,gf=2002,ne=2003,te=2004,ie=2100,re=2101,ue=2102,fe=2103,ta=2151,ee=0,ia=1,ra=2,bi=3e3,ua=3001,oe=3007,fa=3002,ea=3004,oa=3005,sa=3006,ha=3200,ca=3201,o={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var n=[],t=0;t<256;t++)n[t]=(t<16?"0":"")+t.toString(16).toUpperCase();return function(){var t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0,u=4294967295*Math.random()|0;return n[255&t]+n[t>>8&255]+n[t>>16&255]+n[t>>24&255]+"-"+n[255&i]+n[i>>8&255]+"-"+n[i>>16&15|64]+n[i>>24&255]+"-"+n[63&r|128]+n[r>>8&255]+"-"+n[r>>16&255]+n[r>>24&255]+n[255&u]+n[u>>8&255]+n[u>>16&255]+n[u>>24&255]}}(),clamp:function(n,t,i){return Math.max(t,Math.min(i,n))},euclideanModulo:function(n,t){return(n%t+t)%t},mapLinear:function(n,t,i,r,u){return r+(n-t)*(u-r)/(i-t)},lerp:function(n,t,i){return(1-i)*n+i*t},smoothstep:function(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t))*n*(3-2*n)},smootherstep:function(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t))*n*n*(n*(6*n-15)+10)},randInt:function(n,t){return n+Math.floor(Math.random()*(t-n+1))},randFloat:function(n,t){return n+Math.random()*(t-n)},randFloatSpread:function(n){return n*(.5-Math.random())},degToRad:function(n){return n*o.DEG2RAD},radToDeg:function(n){return n*o.RAD2DEG},isPowerOfTwo:function(n){return 0==(n&n-1)&&0!==n},ceilPowerOfTwo:function(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))},floorPowerOfTwo:function(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}};Object.defineProperties(r.prototype,{width:{get:function(){return this.x},set:function(n){this.x=n}},height:{get:function(){return this.y},set:function(n){this.y=n}}});Object.assign(r.prototype,{isVector2:!0,set:function(n,t){return this.x=n,this.y=t,this},setScalar:function(n){return this.x=n,this.y=n,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+n);}return this},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+n);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(n){return this.x=n.x,this.y=n.y,this},add:function(n,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this)},addScalar:function(n){return this.x+=n,this.y+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this},addScaledVector:function(n,t){return this.x+=n.x*t,this.y+=n.y*t,this},sub:function(n,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this)},subScalar:function(n){return this.x-=n,this.y-=n,this},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this},multiply:function(n){return this.x*=n.x,this.y*=n.y,this},multiplyScalar:function(n){return this.x*=n,this.y*=n,this},divide:function(n){return this.x/=n.x,this.y/=n.y,this},divideScalar:function(n){return this.multiplyScalar(1/n)},applyMatrix3:function(n){var i=this.x,r=this.y,t=n.elements;return this.x=t[0]*i+t[3]*r+t[6],this.y=t[1]*i+t[4]*r+t[7],this},min:function(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this},max:function(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this},clamp:function(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this},clampScalar:function(){var n=new r,t=new r;return function(i,r){return n.set(i,i),t.set(r,r),this.clamp(n,t)}}(),clampLength:function(n,t){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(n,Math.min(t,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(n){return this.x*n.x+this.y*n.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var n=Math.atan2(this.y,this.x);return n<0&&(n+=2*Math.PI),n},distanceTo:function(n){return Math.sqrt(this.distanceToSquared(n))},distanceToSquared:function(n){var t=this.x-n.x,i=this.y-n.y;return t*t+i*i},manhattanDistanceTo:function(n){return Math.abs(this.x-n.x)+Math.abs(this.y-n.y)},setLength:function(n){return this.normalize().multiplyScalar(n)},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this},lerpVectors:function(n,t,i){return this.subVectors(t,n).multiplyScalar(i).add(n)},equals:function(n){return n.x===this.x&&n.y===this.y},fromArray:function(n,t){return void 0===t&&(t=0),this.x=n[t],this.y=n[t+1],this},toArray:function(n,t){return void 0===n&&(n=[]),void 0===t&&(t=0),n[t]=this.x,n[t+1]=this.y,n},fromBufferAttribute:function(n,t,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=n.getX(t),this.y=n.getY(t),this},rotateAround:function(n,t){var i=Math.cos(t),r=Math.sin(t),u=this.x-n.x,f=this.y-n.y;return this.x=u*i-f*r+n.x,this.y=u*r+f*i+n.y,this}});Object.assign(u.prototype,{isMatrix4:!0,set:function(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p){var w=this.elements;return w[0]=n,w[4]=t,w[8]=i,w[12]=r,w[1]=u,w[5]=f,w[9]=e,w[13]=o,w[2]=s,w[6]=h,w[10]=c,w[14]=l,w[3]=a,w[7]=v,w[11]=y,w[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new u).fromArray(this.elements)},copy:function(n){var t=this.elements,i=n.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this},copyPosition:function(n){var t=this.elements,i=n.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this},extractBasis:function(n,t,i){return n.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(n,t,i){return this.set(n.x,t.x,i.x,0,n.y,t.y,i.y,0,n.z,t.z,i.z,0,0,0,0,1),this},extractRotation:function(){var n=new t;return function(t){var i=this.elements,r=t.elements,u=1/n.setFromMatrixColumn(t,0).length(),f=1/n.setFromMatrixColumn(t,1).length(),e=1/n.setFromMatrixColumn(t,2).length();return i[0]=r[0]*u,i[1]=r[1]*u,i[2]=r[2]*u,i[4]=r[4]*f,i[5]=r[5]*f,i[6]=r[6]*f,i[8]=r[8]*e,i[9]=r[9]*e,i[10]=r[10]*e,this}}(),makeRotationFromEuler:function(n){n&&n.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,g=n.x,nt=n.y,tt=n.z,f=Math.cos(g),i=Math.sin(g),e=Math.cos(nt),r=Math.sin(nt),o=Math.cos(tt),u=Math.sin(tt);if("XYZ"===n.order){var s=f*o,h=f*u,c=i*o,l=i*u;t[0]=e*o;t[4]=-e*u;t[8]=r;t[1]=h+c*r;t[5]=s-l*r;t[9]=-i*e;t[2]=l-s*r;t[6]=c+h*r;t[10]=f*e}else if("YXZ"===n.order){var a=e*o,v=e*u,y=r*o,p=r*u;t[0]=a+p*i;t[4]=y*i-v;t[8]=f*r;t[1]=f*u;t[5]=f*o;t[9]=-i;t[2]=v*i-y;t[6]=p+a*i;t[10]=f*e}else if("ZXY"===n.order){var a=e*o,v=e*u,y=r*o,p=r*u;t[0]=a-p*i;t[4]=-f*u;t[8]=y+v*i;t[1]=v+y*i;t[5]=f*o;t[9]=p-a*i;t[2]=-f*r;t[6]=i;t[10]=f*e}else if("ZYX"===n.order){var s=f*o,h=f*u,c=i*o,l=i*u;t[0]=e*o;t[4]=c*r-h;t[8]=s*r+l;t[1]=e*u;t[5]=l*r+s;t[9]=h*r-c;t[2]=-r;t[6]=i*e;t[10]=f*e}else if("YZX"===n.order){var w=f*e,b=f*r,k=i*e,d=i*r;t[0]=e*o;t[4]=d-w*u;t[8]=k*u+b;t[1]=u;t[5]=f*o;t[9]=-i*o;t[2]=-r*o;t[6]=b*u+k;t[10]=w-d*u}else if("XZY"===n.order){var w=f*e,b=f*r,k=i*e,d=i*r;t[0]=e*o;t[4]=-u;t[8]=r*o;t[1]=w*u+d;t[5]=f*o;t[9]=b*u-k;t[2]=k*u-b;t[6]=i*o;t[10]=d*u+w}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(n){var t=this.elements,i=n._x,r=n._y,f=n._z,e=n._w,s=i+i,o=r+r,u=f+f,h=i*s,c=i*o,l=i*u,a=r*o,v=r*u,y=f*u,p=e*s,w=e*o,b=e*u;return t[0]=1-(a+y),t[4]=c-b,t[8]=l+w,t[1]=c+b,t[5]=1-(h+y),t[9]=v-p,t[2]=l-w,t[6]=v+p,t[10]=1-(h+a),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var i=new t,r=new t,n=new t;return function(t,u,f){var e=this.elements;return n.subVectors(t,u),0===n.lengthSq()&&(n.z=1),n.normalize(),i.crossVectors(f,n),0===i.lengthSq()&&(1===Math.abs(f.z)?n.x+=.0001:n.z+=.0001,n.normalize(),i.crossVectors(f,n)),i.normalize(),r.crossVectors(n,i),e[0]=i.x,e[4]=r.x,e[8]=n.x,e[1]=i.y,e[5]=r.y,e[9]=n.y,e[2]=i.z,e[6]=r.z,e[10]=n.z,this}}(),multiply:function(n,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(n,t)):this.multiplyMatrices(this,n)},premultiply:function(n){return this.multiplyMatrices(n,this)},multiplyMatrices:function(n,t){var i=n.elements,r=t.elements,u=this.elements,f=i[0],e=i[4],o=i[8],s=i[12],h=i[1],c=i[5],l=i[9],a=i[13],v=i[2],y=i[6],p=i[10],w=i[14],b=i[3],k=i[7],d=i[11],g=i[15],nt=r[0],tt=r[4],it=r[8],rt=r[12],ut=r[1],ft=r[5],et=r[9],ot=r[13],st=r[2],ht=r[6],ct=r[10],lt=r[14],at=r[3],vt=r[7],yt=r[11],pt=r[15];return u[0]=f*nt+e*ut+o*st+s*at,u[4]=f*tt+e*ft+o*ht+s*vt,u[8]=f*it+e*et+o*ct+s*yt,u[12]=f*rt+e*ot+o*lt+s*pt,u[1]=h*nt+c*ut+l*st+a*at,u[5]=h*tt+c*ft+l*ht+a*vt,u[9]=h*it+c*et+l*ct+a*yt,u[13]=h*rt+c*ot+l*lt+a*pt,u[2]=v*nt+y*ut+p*st+w*at,u[6]=v*tt+y*ft+p*ht+w*vt,u[10]=v*it+y*et+p*ct+w*yt,u[14]=v*rt+y*ot+p*lt+w*pt,u[3]=b*nt+k*ut+d*st+g*at,u[7]=b*tt+k*ft+d*ht+g*vt,u[11]=b*it+k*et+d*ct+g*yt,u[15]=b*rt+k*ot+d*lt+g*pt,this},multiplyScalar:function(n){var t=this.elements;return t[0]*=n,t[4]*=n,t[8]*=n,t[12]*=n,t[1]*=n,t[5]*=n,t[9]*=n,t[13]*=n,t[2]*=n,t[6]*=n,t[10]*=n,t[14]*=n,t[3]*=n,t[7]*=n,t[11]*=n,t[15]*=n,this},applyToBufferAttribute:function(){var n=new t;return function(t){for(var i=0,r=t.count;i<r;i++)n.x=t.getX(i),n.y=t.getY(i),n.z=t.getZ(i),n.applyMatrix4(this),t.setXYZ(i,n.x,n.y,n.z);return t}}(),determinant:function(){var n=this.elements,t=n[0],i=n[4],r=n[8],u=n[12],f=n[1],e=n[5],o=n[9],s=n[13],h=n[2],c=n[6],l=n[10],a=n[14];return n[3]*(+u*o*c-r*s*c-u*e*l+i*s*l+r*e*a-i*o*a)+n[7]*(+t*o*a-t*s*l+u*f*l-r*f*a+r*s*h-u*o*h)+n[11]*(+t*s*c-t*e*a-u*f*c+i*f*a+u*e*h-i*s*h)+n[15]*(-r*e*h-t*o*c+t*e*l+r*f*c-i*f*l+i*o*h)},transpose:function(){var t,n=this.elements;return t=n[1],n[1]=n[4],n[4]=t,t=n[2],n[2]=n[8],n[8]=t,t=n[6],n[6]=n[9],n[9]=t,t=n[3],n[3]=n[12],n[12]=t,t=n[7],n[7]=n[13],n[13]=t,t=n[11],n[11]=n[14],n[14]=t,this},setPosition:function(n){var t=this.elements;return t[12]=n.x,t[13]=n.y,t[14]=n.z,this},getInverse:function(n,t){var d=this.elements,g=n.elements,i=g[0],r=g[1],u=g[2],f=g[3],e=g[4],o=g[5],s=g[6],h=g[7],c=g[8],l=g[9],a=g[10],v=g[11],y=g[12],p=g[13],w=g[14],b=g[15],tt=l*w*h-p*a*h+p*s*v-o*w*v-l*s*b+o*a*b,it=y*a*h-c*w*h-y*s*v+e*w*v+c*s*b-e*a*b,rt=c*p*h-y*l*h+y*o*v-e*p*v-c*o*b+e*l*b,ut=y*l*s-c*p*s-y*o*a+e*p*a+c*o*w-e*l*w,ft=i*tt+r*it+u*rt+f*ut,nt,k;if(0===ft){if(nt="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0",!0===t)throw new Error(nt);return console.warn(nt),this.identity()}return k=1/ft,d[0]=tt*k,d[1]=(p*a*f-l*w*f-p*u*v+r*w*v+l*u*b-r*a*b)*k,d[2]=(o*w*f-p*s*f+p*u*h-r*w*h-o*u*b+r*s*b)*k,d[3]=(l*s*f-o*a*f-l*u*h+r*a*h+o*u*v-r*s*v)*k,d[4]=it*k,d[5]=(c*w*f-y*a*f+y*u*v-i*w*v-c*u*b+i*a*b)*k,d[6]=(y*s*f-e*w*f-y*u*h+i*w*h+e*u*b-i*s*b)*k,d[7]=(e*a*f-c*s*f+c*u*h-i*a*h-e*u*v+i*s*v)*k,d[8]=rt*k,d[9]=(y*l*f-c*p*f-y*r*v+i*p*v+c*r*b-i*l*b)*k,d[10]=(e*p*f-y*o*f+y*r*h-i*p*h-e*r*b+i*o*b)*k,d[11]=(c*o*f-e*l*f-c*r*h+i*l*h+e*r*v-i*o*v)*k,d[12]=ut*k,d[13]=(c*p*u-y*l*u+y*r*a-i*p*a-c*r*w+i*l*w)*k,d[14]=(y*o*u-e*p*u-y*r*s+i*p*s+e*r*w-i*o*w)*k,d[15]=(e*l*u-c*o*u+c*r*s-i*l*s-e*r*a+i*o*a)*k,this},scale:function(n){var t=this.elements,i=n.x,r=n.y,u=n.z;return t[0]*=i,t[4]*=r,t[8]*=u,t[1]*=i,t[5]*=r,t[9]*=u,t[2]*=i,t[6]*=r,t[10]*=u,t[3]*=i,t[7]*=r,t[11]*=u,this},getMaxScaleOnAxis:function(){var n=this.elements,t=n[0]*n[0]+n[1]*n[1]+n[2]*n[2],i=n[4]*n[4]+n[5]*n[5]+n[6]*n[6],r=n[8]*n[8]+n[9]*n[9]+n[10]*n[10];return Math.sqrt(Math.max(t,i,r))},makeTranslation:function(n,t,i){return this.set(1,0,0,n,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this},makeRotationY:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this},makeRotationZ:function(n){var t=Math.cos(n),i=Math.sin(n);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(n,t){var e=Math.cos(t),r=Math.sin(t),s=1-e,o=n.x,u=n.y,i=n.z,f=s*o,h=s*u;return this.set(f*o+e,f*u-r*i,f*i+r*u,0,f*u+r*i,h*u+e,h*i-r*o,0,f*i-r*u,h*i+r*o,s*i*i+e,0,0,0,0,1),this},makeScale:function(n,t,i){return this.set(n,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(n,t,i){return this.set(1,t,i,0,n,1,i,0,n,t,1,0,0,0,0,1),this},compose:function(n,t,i){return this.makeRotationFromQuaternion(t),this.scale(i),this.setPosition(n),this},decompose:function(){var i=new t,n=new u;return function(t,r,u){var f=this.elements,e=i.set(f[0],f[1],f[2]).length(),c=i.set(f[4],f[5],f[6]).length(),l=i.set(f[8],f[9],f[10]).length();this.determinant()<0&&(e=-e);t.x=f[12];t.y=f[13];t.z=f[14];n.copy(this);var o=1/e,s=1/c,h=1/l;return n.elements[0]*=o,n.elements[1]*=o,n.elements[2]*=o,n.elements[4]*=s,n.elements[5]*=s,n.elements[6]*=s,n.elements[8]*=h,n.elements[9]*=h,n.elements[10]*=h,r.setFromRotationMatrix(n),u.x=e,u.y=c,u.z=l,this}}(),makePerspective:function(n,t,i,r,u,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var e=this.elements,o=2*u/(t-n),s=2*u/(i-r),h=(t+n)/(t-n),c=(i+r)/(i-r),l=-(f+u)/(f-u),a=-2*f*u/(f-u);return e[0]=o,e[4]=0,e[8]=h,e[12]=0,e[1]=0,e[5]=s,e[9]=c,e[13]=0,e[2]=0,e[6]=0,e[10]=l,e[14]=a,e[3]=0,e[7]=0,e[11]=-1,e[15]=0,this},makeOrthographic:function(n,t,i,r,u,f){var e=this.elements,o=1/(t-n),s=1/(i-r),h=1/(f-u),c=(t+n)*o,l=(i+r)*s,a=(f+u)*h;return e[0]=2*o,e[4]=0,e[8]=0,e[12]=-c,e[1]=0,e[5]=2*s,e[9]=0,e[13]=-l,e[2]=0,e[6]=0,e[10]=-2*h,e[14]=-a,e[3]=0,e[7]=0,e[11]=0,e[15]=1,this},equals:function(n){for(var i=this.elements,r=n.elements,t=0;t<16;t++)if(i[t]!==r[t])return!1;return!0},fromArray:function(n,t){void 0===t&&(t=0);for(var i=0;i<16;i++)this.elements[i]=n[i+t];return this},toArray:function(n,t){void 0===n&&(n=[]);void 0===t&&(t=0);var i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n[t+9]=i[9],n[t+10]=i[10],n[t+11]=i[11],n[t+12]=i[12],n[t+13]=i[13],n[t+14]=i[14],n[t+15]=i[15],n}});Object.assign(y,{slerp:function(n,t,i,r){return i.copy(n).slerp(t,r)},slerpFlat:function(n,t,i,r,u,f,e){var o=i[r+0],s=i[r+1],h=i[r+2],c=i[r+3],w=u[f+0],b=u[f+1],k=u[f+2],d=u[f+3],p,g,a,v;if(c!==d||o!==w||s!==b||h!==k){var l=1-e,y=o*w+s*b+h*k+c*d,nt=y>=0?1:-1,tt=1-y*y;tt>Number.EPSILON&&(p=Math.sqrt(tt),g=Math.atan2(p,y*nt),l=Math.sin(l*g)/p,e=Math.sin(e*g)/p);a=e*nt;(o=o*l+w*a,s=s*l+b*a,h=h*l+k*a,c=c*l+d*a,l===1-e)&&(v=1/Math.sqrt(o*o+s*s+h*h+c*c),o*=v,s*=v,h*=v,c*=v)}n[t]=o;n[t+1]=s;n[t+2]=h;n[t+3]=c}});Object.defineProperties(y.prototype,{x:{get:function(){return this._x},set:function(n){this._x=n;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(n){this._y=n;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(n){this._z=n;this.onChangeCallback()}},w:{get:function(){return this._w},set:function(n){this._w=n;this.onChangeCallback()}}});Object.assign(y.prototype,{set:function(n,t,i,r){return this._x=n,this._y=t,this._z=i,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(n){return this._x=n.x,this._y=n.y,this._z=n.z,this._w=n.w,this.onChangeCallback(),this},setFromEuler:function(n,t){if(!n||!n.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var l=n._x,a=n._y,v=n._z,s=n.order,h=Math.cos,c=Math.sin,i=h(l/2),r=h(a/2),u=h(v/2),f=c(l/2),e=c(a/2),o=c(v/2);return"XYZ"===s?(this._x=f*r*u+i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u-f*e*o):"YXZ"===s?(this._x=f*r*u+i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u+f*e*o):"ZXY"===s?(this._x=f*r*u-i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u-f*e*o):"ZYX"===s?(this._x=f*r*u-i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u+f*e*o):"YZX"===s?(this._x=f*r*u+i*e*o,this._y=i*e*u+f*r*o,this._z=i*r*o-f*e*u,this._w=i*r*u-f*e*o):"XZY"===s&&(this._x=f*r*u-i*e*o,this._y=i*e*u-f*r*o,this._z=i*r*o+f*e*u,this._w=i*r*u+f*e*o),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(n,t){var r=t/2,i=Math.sin(r);return this._x=n.x*i,this._y=n.y*i,this._z=n.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(n){var t,i=n.elements,r=i[0],e=i[4],o=i[8],s=i[1],u=i[5],h=i[9],c=i[2],l=i[6],f=i[10],a=r+u+f;return a>0?(t=.5/Math.sqrt(a+1),this._w=.25/t,this._x=(l-h)*t,this._y=(o-c)*t,this._z=(s-e)*t):r>u&&r>f?(t=2*Math.sqrt(1+r-u-f),this._w=(l-h)/t,this._x=.25*t,this._y=(e+s)/t,this._z=(o+c)/t):u>f?(t=2*Math.sqrt(1+u-r-f),this._w=(o-c)/t,this._x=(e+s)/t,this._y=.25*t,this._z=(h+l)/t):(t=2*Math.sqrt(1+f-r-u),this._w=(s-e)/t,this._x=(o+c)/t,this._y=(h+l)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var i,n=new t;return function(r,u){return void 0===n&&(n=new t),i=r.dot(u)+1,i<1e-6?(i=0,Math.abs(r.x)>Math.abs(r.z)?n.set(-r.y,r.x,0):n.set(0,-r.z,r.y)):n.crossVectors(r,u),this._x=n.x,this._y=n.y,this._z=n.z,this._w=i,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(n){return this._x*n._x+this._y*n._y+this._z*n._z+this._w*n._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var n=this.length();return 0===n?(this._x=0,this._y=0,this._z=0,this._w=1):(n=1/n,this._x=this._x*n,this._y=this._y*n,this._z=this._z*n,this._w=this._w*n),this.onChangeCallback(),this},multiply:function(n,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(n,t)):this.multiplyQuaternions(this,n)},premultiply:function(n){return this.multiplyQuaternions(n,this)},multiplyQuaternions:function(n,t){var i=n._x,r=n._y,u=n._z,f=n._w,e=t._x,o=t._y,s=t._z,h=t._w;return this._x=i*h+f*e+r*s-u*o,this._y=r*h+f*o+u*e-i*s,this._z=u*h+f*s+i*o-r*e,this._w=f*h-i*e-r*o-u*s,this.onChangeCallback(),this},slerp:function(n,t){var r;if(0===t)return this;if(1===t)return this.copy(n);var u=this._x,f=this._y,e=this._z,o=this._w,i=o*n._w+u*n._x+f*n._y+e*n._z;if(i<0?(this._w=-n._w,this._x=-n._x,this._y=-n._y,this._z=-n._z,i=-i):this.copy(n),i>=1)return this._w=o,this._x=u,this._y=f,this._z=e,this;if(r=Math.sqrt(1-i*i),Math.abs(r)<.001)return this._w=.5*(o+this._w),this._x=.5*(u+this._x),this._y=.5*(f+this._y),this._z=.5*(e+this._z),this;var c=Math.atan2(r,i),s=Math.sin((1-t)*c)/r,h=Math.sin(t*c)/r;return this._w=o*s+this._w*h,this._x=u*s+this._x*h,this._y=f*s+this._y*h,this._z=e*s+this._z*h,this.onChangeCallback(),this},equals:function(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._w===this._w},fromArray:function(n,t){return void 0===t&&(t=0),this._x=n[t],this._y=n[t+1],this._z=n[t+2],this._w=n[t+3],this.onChangeCallback(),this},toArray:function(n,t){return void 0===n&&(n=[]),void 0===t&&(t=0),n[t]=this._x,n[t+1]=this._y,n[t+2]=this._z,n[t+3]=this._w,n},onChange:function(n){return this.onChangeCallback=n,this},onChangeCallback:function(){}});Object.assign(t.prototype,{isVector3:!0,set:function(n,t,i){return this.x=n,this.y=t,this.z=i,this},setScalar:function(n){return this.x=n,this.y=n,this.z=n,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setZ:function(n){return this.z=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+n);}return this},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+n);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(n){return this.x=n.x,this.y=n.y,this.z=n.z,this},add:function(n,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this)},addScalar:function(n){return this.x+=n,this.y+=n,this.z+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this},addScaledVector:function(n,t){return this.x+=n.x*t,this.y+=n.y*t,this.z+=n.z*t,this},sub:function(n,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this)},subScalar:function(n){return this.x-=n,this.y-=n,this.z-=n,this},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this},multiply:function(n,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(n,t)):(this.x*=n.x,this.y*=n.y,this.z*=n.z,this)},multiplyScalar:function(n){return this.x*=n,this.y*=n,this.z*=n,this},multiplyVectors:function(n,t){return this.x=n.x*t.x,this.y=n.y*t.y,this.z=n.z*t.z,this},applyEuler:function(){var n=new y;return function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(n.setFromEuler(t))}}(),applyAxisAngle:function(){var n=new y;return function(t,i){return this.applyQuaternion(n.setFromAxisAngle(t,i))}}(),applyMatrix3:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[3]*r+t[6]*u,this.y=t[1]*i+t[4]*r+t[7]*u,this.z=t[2]*i+t[5]*r+t[8]*u,this},applyMatrix4:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements,f=1/(t[3]*i+t[7]*r+t[11]*u+t[15]);return this.x=(t[0]*i+t[4]*r+t[8]*u+t[12])*f,this.y=(t[1]*i+t[5]*r+t[9]*u+t[13])*f,this.z=(t[2]*i+t[6]*r+t[10]*u+t[14])*f,this},applyQuaternion:function(n){var f=this.x,e=this.y,o=this.z,t=n.x,i=n.y,r=n.z,u=n.w,s=u*f+i*o-r*e,h=u*e+r*f-t*o,c=u*o+t*e-i*f,l=-t*f-i*e-r*o;return this.x=s*u+l*-t+h*-r-c*-i,this.y=h*u+l*-i+c*-t-s*-r,this.z=c*u+l*-r+s*-i-h*-t,this},project:function(){var n=new u;return function(t){return n.multiplyMatrices(t.projectionMatrix,n.getInverse(t.matrixWorld)),this.applyMatrix4(n)}}(),unproject:function(){var n=new u;return function(t){return n.multiplyMatrices(t.matrixWorld,n.getInverse(t.projectionMatrix)),this.applyMatrix4(n)}}(),transformDirection:function(n){var i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u,this.y=t[1]*i+t[5]*r+t[9]*u,this.z=t[2]*i+t[6]*r+t[10]*u,this.normalize()},divide:function(n){return this.x/=n.x,this.y/=n.y,this.z/=n.z,this},divideScalar:function(n){return this.multiplyScalar(1/n)},min:function(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this},max:function(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this},clamp:function(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this.z=Math.max(n.z,Math.min(t.z,this.z)),this},clampScalar:function(){var n=new t,i=new t;return function(t,r){return n.set(t,t,t),i.set(r,r,r),this.clamp(n,i)}}(),clampLength:function(n,t){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(n,Math.min(t,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(n){return this.x*n.x+this.y*n.y+this.z*n.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(n){return this.normalize().multiplyScalar(n)},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this},lerpVectors:function(n,t,i){return this.subVectors(t,n).multiplyScalar(i).add(n)},cross:function(n,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(n,t)):this.crossVectors(this,n)},crossVectors:function(n,t){var i=n.x,r=n.y,u=n.z,f=t.x,e=t.y,o=t.z;return this.x=r*o-u*e,this.y=u*f-i*o,this.z=i*e-r*f,this},projectOnVector:function(n){var t=n.dot(this)/n.lengthSq();return this.copy(n).multiplyScalar(t)},projectOnPlane:function(){var n=new t;return function(t){return n.copy(this).projectOnVector(t),this.sub(n)}}(),reflect:function(){var n=new t;return function(t){return this.sub(n.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(n){var t=this.dot(n)/Math.sqrt(this.lengthSq()*n.lengthSq());return Math.acos(o.clamp(t,-1,1))},distanceTo:function(n){return Math.sqrt(this.distanceToSquared(n))},distanceToSquared:function(n){var t=this.x-n.x,i=this.y-n.y,r=this.z-n.z;return t*t+i*i+r*r},manhattanDistanceTo:function(n){return Math.abs(this.x-n.x)+Math.abs(this.y-n.y)+Math.abs(this.z-n.z)},setFromSpherical:function(n){var t=Math.sin(n.phi)*n.radius;return this.x=t*Math.sin(n.theta),this.y=Math.cos(n.phi)*n.radius,this.z=t*Math.cos(n.theta),this},setFromCylindrical:function(n){return this.x=n.radius*Math.sin(n.theta),this.y=n.y,this.z=n.radius*Math.cos(n.theta),this},setFromMatrixPosition:function(n){var t=n.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(n){var t=this.setFromMatrixColumn(n,0).length(),i=this.setFromMatrixColumn(n,1).length(),r=this.setFromMatrixColumn(n,2).length();return this.x=t,this.y=i,this.z=r,this},setFromMatrixColumn:function(n,t){return this.fromArray(n.elements,4*t)},equals:function(n){return n.x===this.x&&n.y===this.y&&n.z===this.z},fromArray:function(n,t){return void 0===t&&(t=0),this.x=n[t],this.y=n[t+1],this.z=n[t+2],this},toArray:function(n,t){return void 0===n&&(n=[]),void 0===t&&(t=0),n[t]=this.x,n[t+1]=this.y,n[t+2]=this.z,n},fromBufferAttribute:function(n,t,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=n.getX(t),this.y=n.getY(t),this.z=n.getZ(t),this}});Object.assign(w.prototype,{isMatrix3:!0,set:function(n,t,i,r,u,f,e,o,s){var h=this.elements;return h[0]=n,h[1]=r,h[2]=e,h[3]=t,h[4]=u,h[5]=o,h[6]=i,h[7]=f,h[8]=s,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(n){var t=this.elements,i=n.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this},setFromMatrix4:function(n){var t=n.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var n=new t;return function(t){for(var i=0,r=t.count;i<r;i++)n.x=t.getX(i),n.y=t.getY(i),n.z=t.getZ(i),n.applyMatrix3(this),t.setXYZ(i,n.x,n.y,n.z);return t}}(),multiply:function(n){return this.multiplyMatrices(this,n)},premultiply:function(n){return this.multiplyMatrices(n,this)},multiplyMatrices:function(n,t){var i=n.elements,r=t.elements,u=this.elements,f=i[0],e=i[3],o=i[6],s=i[1],h=i[4],c=i[7],l=i[2],a=i[5],v=i[8],y=r[0],p=r[3],w=r[6],b=r[1],k=r[4],d=r[7],g=r[2],nt=r[5],tt=r[8];return u[0]=f*y+e*b+o*g,u[3]=f*p+e*k+o*nt,u[6]=f*w+e*d+o*tt,u[1]=s*y+h*b+c*g,u[4]=s*p+h*k+c*nt,u[7]=s*w+h*d+c*tt,u[2]=l*y+a*b+v*g,u[5]=l*p+a*k+v*nt,u[8]=l*w+a*d+v*tt,this},multiplyScalar:function(n){var t=this.elements;return t[0]*=n,t[3]*=n,t[6]*=n,t[1]*=n,t[4]*=n,t[7]*=n,t[2]*=n,t[5]*=n,t[8]*=n,this},determinant:function(){var n=this.elements,t=n[0],i=n[1],r=n[2],u=n[3],f=n[4],e=n[5],o=n[6],s=n[7],h=n[8];return t*f*h-t*e*s-i*u*h+i*e*o+r*u*s-r*f*o},getInverse:function(n,t){var y,i;n&&n.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var r=n.elements,u=this.elements,f=r[0],e=r[1],o=r[2],s=r[3],h=r[4],c=r[5],l=r[6],a=r[7],v=r[8],p=v*h-c*a,w=c*l-v*s,b=a*s-h*l,k=f*p+e*w+o*b;if(0===k){if(y="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0",!0===t)throw new Error(y);return console.warn(y),this.identity()}return i=1/k,u[0]=p*i,u[1]=(o*a-v*e)*i,u[2]=(c*e-o*h)*i,u[3]=w*i,u[4]=(v*f-o*l)*i,u[5]=(o*s-c*f)*i,u[6]=b*i,u[7]=(e*l-a*f)*i,u[8]=(h*f-e*s)*i,this},transpose:function(){var t,n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this},getNormalMatrix:function(n){return this.setFromMatrix4(n).getInverse(this).transpose()},transposeIntoArray:function(n){var t=this.elements;return n[0]=t[0],n[1]=t[3],n[2]=t[6],n[3]=t[1],n[4]=t[4],n[5]=t[7],n[6]=t[2],n[7]=t[5],n[8]=t[8],this},setUvTransform:function(n,t,i,r,u,f,e){var o=Math.cos(u),s=Math.sin(u);this.set(i*o,i*s,-i*(o*f+s*e)+f+n,-r*s,r*o,-r*(-s*f+o*e)+e+t,0,0,1)},scale:function(n,t){var i=this.elements;return i[0]*=n,i[3]*=n,i[6]*=n,i[1]*=t,i[4]*=t,i[7]*=t,this},rotate:function(n){var i=Math.cos(n),r=Math.sin(n),t=this.elements,u=t[0],f=t[3],e=t[6],o=t[1],s=t[4],h=t[7];return t[0]=i*u+r*o,t[3]=i*f+r*s,t[6]=i*e+r*h,t[1]=-r*u+i*o,t[4]=-r*f+i*s,t[7]=-r*e+i*h,this},translate:function(n,t){var i=this.elements;return i[0]+=n*i[2],i[3]+=n*i[5],i[6]+=n*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this},equals:function(n){for(var i=this.elements,r=n.elements,t=0;t<9;t++)if(i[t]!==r[t])return!1;return!0},fromArray:function(n,t){void 0===t&&(t=0);for(var i=0;i<9;i++)this.elements[i]=n[i+t];return this},toArray:function(n,t){void 0===n&&(n=[]);void 0===t&&(t=0);var i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n}});se=0;l.DEFAULT_IMAGE=void 0;l.DEFAULT_MAPPING=cf;l.prototype=Object.assign(Object.create(et.prototype),{constructor:l,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.name=n.name,this.image=n.image,this.mipmaps=n.mipmaps.slice(0),this.mapping=n.mapping,this.wrapS=n.wrapS,this.wrapT=n.wrapT,this.magFilter=n.magFilter,this.minFilter=n.minFilter,this.anisotropy=n.anisotropy,this.format=n.format,this.type=n.type,this.offset.copy(n.offset),this.repeat.copy(n.repeat),this.center.copy(n.center),this.rotation=n.rotation,this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrix.copy(n.matrix),this.generateMipmaps=n.generateMipmaps,this.premultiplyAlpha=n.premultiplyAlpha,this.flipY=n.flipY,this.unpackAlignment=n.unpackAlignment,this.encoding=n.encoding,this},toJSON:function(n){function u(n){var t,i;return n instanceof HTMLCanvasElement?t=n:(t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),t.width=n.width,t.height=n.height,i=t.getContext("2d"),n instanceof ImageData?i.putImageData(n,0,0):i.drawImage(n,0,0,n.width,n.height)),t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}var r=void 0===n||"string"==typeof n,i,t;return!r&&void 0!==n.textures[this.uuid]?n.textures[this.uuid]:(i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY},void 0!==this.image&&(t=this.image,void 0===t.uuid&&(t.uuid=o.generateUUID()),r||void 0!==n.images[t.uuid]||(n.images[t.uuid]={uuid:t.uuid,url:u(t)}),i.image=t.uuid),r||(n.textures[this.uuid]=i),i)},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(n){if(this.mapping===cf){if(n.applyMatrix3(this.matrix),n.x<0||n.x>1)switch(this.wrapS){case yi:n.x=n.x-Math.floor(n.x);break;case d:n.x=n.x<0?0:1;break;case pr:n.x=1===Math.abs(Math.floor(n.x)%2)?Math.ceil(n.x)-n.x:n.x-Math.floor(n.x)}if(n.y<0||n.y>1)switch(this.wrapT){case yi:n.y=n.y-Math.floor(n.y);break;case d:n.y=n.y<0?0:1;break;case pr:n.y=1===Math.abs(Math.floor(n.y)%2)?Math.ceil(n.y)-n.y:n.y-Math.floor(n.y)}this.flipY&&(n.y=1-n.y)}}});Object.defineProperty(l.prototype,"needsUpdate",{set:function(n){!0===n&&this.version++}});Object.assign(s.prototype,{isVector4:!0,set:function(n,t,i,r){return this.x=n,this.y=t,this.z=i,this.w=r,this},setScalar:function(n){return this.x=n,this.y=n,this.z=n,this.w=n,this},setX:function(n){return this.x=n,this},setY:function(n){return this.y=n,this},setZ:function(n){return this.z=n,this},setW:function(n){return this.w=n,this},setComponent:function(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+n);}return this},getComponent:function(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+n);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(n){return this.x=n.x,this.y=n.y,this.z=n.z,this.w=void 0!==n.w?n.w:1,this},add:function(n,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,t)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this.w+=n.w,this)},addScalar:function(n){return this.x+=n,this.y+=n,this.z+=n,this.w+=n,this},addVectors:function(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this.w=n.w+t.w,this},addScaledVector:function(n,t){return this.x+=n.x*t,this.y+=n.y*t,this.z+=n.z*t,this.w+=n.w*t,this},sub:function(n,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,t)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this.w-=n.w,this)},subScalar:function(n){return this.x-=n,this.y-=n,this.z-=n,this.w-=n,this},subVectors:function(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this.w=n.w-t.w,this},multiplyScalar:function(n){return this.x*=n,this.y*=n,this.z*=n,this.w*=n,this},applyMatrix4:function(n){var i=this.x,r=this.y,u=this.z,f=this.w,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u+t[12]*f,this.y=t[1]*i+t[5]*r+t[9]*u+t[13]*f,this.z=t[2]*i+t[6]*r+t[10]*u+t[14]*f,this.w=t[3]*i+t[7]*r+t[11]*u+t[15]*f,this},divideScalar:function(n){return this.multiplyScalar(1/n)},setAxisAngleFromQuaternion:function(n){this.w=2*Math.acos(n.w);var t=Math.sqrt(1-n.w*n.w);return t<.0001?(this.x=1,this.y=0,this.z=0):(this.x=n.x/t,this.y=n.y/t,this.z=n.z/t),this},setAxisAngleFromRotationMatrix:function(n){var g,t,i,r,f=.01,v=.1,u=n.elements,b=u[0],e=u[4],o=u[8],s=u[1],k=u[5],h=u[9],c=u[2],l=u[6],d=u[10],a;if(Math.abs(e-s)<f&&Math.abs(o-c)<f&&Math.abs(h-l)<f){if(Math.abs(e+s)<v&&Math.abs(o+c)<v&&Math.abs(h+l)<v&&Math.abs(b+k+d-3)<v)return this.set(1,0,0,0),this;g=Math.PI;var y=(b+1)/2,p=(k+1)/2,w=(d+1)/2,nt=(e+s)/4,tt=(o+c)/4,it=(h+l)/4;return y>p&&y>w?y<f?(t=0,i=.707106781,r=.707106781):(t=Math.sqrt(y),i=nt/t,r=tt/t):p>w?p<f?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(p),t=nt/i,r=it/i):w<f?(t=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),t=tt/r,i=it/r),this.set(t,i,r,g),this}return a=Math.sqrt((l-h)*(l-h)+(o-c)*(o-c)+(s-e)*(s-e)),Math.abs(a)<.001&&(a=1),this.x=(l-h)/a,this.y=(o-c)/a,this.z=(s-e)/a,this.w=Math.acos((b+k+d-1)/2),this},min:function(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this.w=Math.min(this.w,n.w),this},max:function(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this.w=Math.max(this.w,n.w),this},clamp:function(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this.z=Math.max(n.z,Math.min(t.z,this.z)),this.w=Math.max(n.w,Math.min(t.w,this.w)),this},clampScalar:function(){var n,t;return function(i,r){return void 0===n&&(n=new s,t=new s),n.set(i,i,i,i),t.set(r,r,r,r),this.clamp(n,t)}}(),clampLength:function(n,t){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(n,Math.min(t,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(n){return this.x*n.x+this.y*n.y+this.z*n.z+this.w*n.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(n){return this.normalize().multiplyScalar(n)},lerp:function(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this.w+=(n.w-this.w)*t,this},lerpVectors:function(n,t,i){return this.subVectors(t,n).multiplyScalar(i).add(n)},equals:function(n){return n.x===this.x&&n.y===this.y&&n.z===this.z&&n.w===this.w},fromArray:function(n,t){return void 0===t&&(t=0),this.x=n[t],this.y=n[t+1],this.z=n[t+2],this.w=n[t+3],this},toArray:function(n,t){return void 0===n&&(n=[]),void 0===t&&(t=0),n[t]=this.x,n[t+1]=this.y,n[t+2]=this.z,n[t+3]=this.w,n},fromBufferAttribute:function(n,t,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=n.getX(t),this.y=n.getY(t),this.z=n.getZ(t),this.w=n.getW(t),this}});oi.prototype=Object.assign(Object.create(et.prototype),{constructor:oi,isWebGLRenderTarget:!0,setSize:function(n,t){this.width===n&&this.height===t||(this.width=n,this.height=t,this.dispose());this.viewport.set(0,0,n,t);this.scissor.set(0,0,n,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.width=n.width,this.height=n.height,this.viewport.copy(n.viewport),this.texture=n.texture.clone(),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});lt.prototype=Object.create(l.prototype);lt.prototype.constructor=lt;lt.prototype.isDataTexture=!0;at.prototype=Object.create(l.prototype);at.prototype.constructor=at;at.prototype.isCubeTexture=!0;Object.defineProperty(at.prototype,"images",{get:function(){return this.image},set:function(n){this.image=n}});var he=new l,ce=new at,le=[],ae=[],ve=new Float32Array(16),ye=new Float32Array(9);su.prototype.setValue=function(n,t){for(var r,u=this.seq,i=0,f=u.length;i!==f;++i)r=u[i],r.setValue(n,t[r.id])};ki=/([\w\d_]+)(\])?(\[|\.)?/g;ot.prototype.setValue=function(n,t,i){var r=this.map[t];void 0!==r&&r.setValue(n,i,this.renderer)};ot.prototype.setOptional=function(n,t,i){var r=t[i];void 0!==r&&this.setValue(n,i,r)};ot.upload=function(n,t,i,r){for(var f,e,u=0,o=t.length;u!==o;++u)f=t[u],e=i[f.id],!1!==e.needsUpdate&&f.setValue(n,e.value,r)};ot.seqWithValue=function(n,t){for(var r,u=[],i=0,f=n.length;i!==f;++i)r=n[i],r.id in t&&u.push(r);return u};pe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(c.prototype,{isColor:!0,r:1,g:1,b:1,set:function(n){return n&&n.isColor?this.copy(n):"number"==typeof n?this.setHex(n):"string"==typeof n&&this.setStyle(n),this},setScalar:function(n){return this.r=n,this.g=n,this.b=n,this},setHex:function(n){return n=Math.floor(n),this.r=(n>>16&255)/255,this.g=(n>>8&255)/255,this.b=(255&n)/255,this},setRGB:function(n,t,i){return this.r=n,this.g=t,this.b=i,this},setHSL:function(){function n(n,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?n+6*(t-n)*i:i<.5?t:i<2/3?n+6*(t-n)*(2/3-i):n}return function(t,i,r){if(t=o.euclideanModulo(t,1),i=o.clamp(i,0,1),r=o.clamp(r,0,1),0===i)this.r=this.g=this.b=r;else{var u=r<=.5?r*(1+i):r+i-r*i,f=2*r-u;this.r=n(f,u,t+1/3);this.g=n(f,u,t);this.b=n(f,u,t-1/3)}return this}}(),setStyle:function(n){function f(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+n+" will be ignored.")}var r,i,o,u,e,t;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(n)){o=r[1];u=r[2];switch(o){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(u))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,f(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(u))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,f(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(u)){var s=parseFloat(i[1])/360,h=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return f(i[5]),this.setHSL(s,h,c)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(n)){if(t=r[1],e=t.length,3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return n&&n.length>0&&(t=pe[n],void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+n)),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(n){return this.r=n.r,this.g=n.g,this.b=n.b,this},copyGammaToLinear:function(n,t){return void 0===t&&(t=2),this.r=Math.pow(n.r,t),this.g=Math.pow(n.g,t),this.b=Math.pow(n.b,t),this},copyLinearToGamma:function(n,t){void 0===t&&(t=2);var i=t>0?1/t:1;return this.r=Math.pow(n.r,i),this.g=Math.pow(n.g,i),this.b=Math.pow(n.b,i),this},convertGammaToLinear:function(){var n=this.r,t=this.g,i=this.b;return this.r=n*n,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(n){var t,h,s=n||{h:0,s:0,l:0},e=this.r,i=this.g,r=this.b,u=Math.max(e,i,r),o=Math.min(e,i,r),c=(o+u)/2,f;if(o===u)t=0,h=0;else{f=u-o;switch(h=c<=.5?f/(u+o):f/(2-u-o),u){case e:t=(i-r)/f+(i<r?6:0);break;case i:t=(r-e)/f+2;break;case r:t=(e-i)/f+4}t/=6}return s.h=t,s.s=h,s.l=c,s},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(n,t,i){var r=this.getHSL();return r.h+=n,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(n){return this.r+=n.r,this.g+=n.g,this.b+=n.b,this},addColors:function(n,t){return this.r=n.r+t.r,this.g=n.g+t.g,this.b=n.b+t.b,this},addScalar:function(n){return this.r+=n,this.g+=n,this.b+=n,this},sub:function(n){return this.r=Math.max(0,this.r-n.r),this.g=Math.max(0,this.g-n.g),this.b=Math.max(0,this.b-n.b),this},multiply:function(n){return this.r*=n.r,this.g*=n.g,this.b*=n.b,this},multiplyScalar:function(n){return this.r*=n,this.g*=n,this.b*=n,this},lerp:function(n,t){return this.r+=(n.r-this.r)*t,this.g+=(n.g-this.g)*t,this.b+=(n.b-this.b)*t,this},equals:function(n){return n.r===this.r&&n.g===this.g&&n.b===this.b},fromArray:function(n,t){return void 0===t&&(t=0),this.r=n[t],this.g=n[t+1],this.b=n[t+2],this},toArray:function(n,t){return void 0===n&&(n=[]),void 0===t&&(t=0),n[t]=this.r,n[t+1]=this.g,n[t+2]=this.b,n},toJSON:function(){return this.getHex()}});var i={common:{diffuse:{value:new c(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new w},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new r(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:.00025},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new c(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new c(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new w}}},p={merge:function(n){for(var r,u,i={},t=0;t<n.length;t++){r=this.clone(n[t]);for(u in r)i[u]=r[u]}return i},clone:function(n){var r={},i,u,t;for(i in n){r[i]={};for(u in n[i])t=n[i][u],r[i][u]=t&&(t.isColor||t.isMatrix3||t.isMatrix4||t.isVector2||t.isVector3||t.isVector4||t.isTexture)?t.clone():Array.isArray(t)?t.slice():t}return r}},e={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",cube_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",equirect_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n"},gt={basic:{uniforms:p.merge([i.common,i.specularmap,i.envmap,i.aomap,i.lightmap,i.fog]),vertexShader:e.meshbasic_vert,fragmentShader:e.meshbasic_frag},lambert:{uniforms:p.merge([i.common,i.specularmap,i.envmap,i.aomap,i.lightmap,i.emissivemap,i.fog,i.lights,{emissive:{value:new c(0)}}]),vertexShader:e.meshlambert_vert,fragmentShader:e.meshlambert_frag},phong:{uniforms:p.merge([i.common,i.specularmap,i.envmap,i.aomap,i.lightmap,i.emissivemap,i.bumpmap,i.normalmap,i.displacementmap,i.gradientmap,i.fog,i.lights,{emissive:{value:new c(0)},specular:{value:new c(1118481)},shininess:{value:30}}]),vertexShader:e.meshphong_vert,fragmentShader:e.meshphong_frag},standard:{uniforms:p.merge([i.common,i.envmap,i.aomap,i.lightmap,i.emissivemap,i.bumpmap,i.normalmap,i.displacementmap,i.roughnessmap,i.metalnessmap,i.fog,i.lights,{emissive:{value:new c(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:e.meshphysical_vert,fragmentShader:e.meshphysical_frag},points:{uniforms:p.merge([i.points,i.fog]),vertexShader:e.points_vert,fragmentShader:e.points_frag},dashed:{uniforms:p.merge([i.common,i.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:e.linedashed_vert,fragmentShader:e.linedashed_frag},depth:{uniforms:p.merge([i.common,i.displacementmap]),vertexShader:e.depth_vert,fragmentShader:e.depth_frag},normal:{uniforms:p.merge([i.common,i.bumpmap,i.normalmap,i.displacementmap,{opacity:{value:1}}]),vertexShader:e.normal_vert,fragmentShader:e.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:e.cube_vert,fragmentShader:e.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:e.equirect_vert,fragmentShader:e.equirect_frag},distanceRGBA:{uniforms:p.merge([i.common,i.displacementmap,{referencePosition:{value:new t},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:e.distanceRGBA_vert,fragmentShader:e.distanceRGBA_frag},shadow:{uniforms:p.merge([i.lights,i.fog,{color:{value:new c(0)},opacity:{value:1}}]),vertexShader:e.shadow_vert,fragmentShader:e.shadow_frag}};gt.physical={uniforms:p.merge([gt.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:e.meshphysical_vert,fragmentShader:e.meshphysical_frag};Object.assign(cu.prototype,{set:function(n,t){return this.min.copy(n),this.max.copy(t),this},setFromPoints:function(n){this.makeEmpty();for(var t=0,i=n.length;t<i;t++)this.expandByPoint(n[t]);return this},setFromCenterAndSize:function(){var n=new r;return function(t,i){var r=n.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.min.copy(n.min),this.max.copy(n.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(n){var t=n||new r;return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(n){var t=n||new r;return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(n){return this.min.min(n),this.max.max(n),this},expandByVector:function(n){return this.min.sub(n),this.max.add(n),this},expandByScalar:function(n){return this.min.addScalar(-n),this.max.addScalar(n),this},containsPoint:function(n){return!(n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y)},containsBox:function(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y},getParameter:function(n,t){return(t||new r).set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(n){return!(n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y)},clampPoint:function(n,t){return(t||new r).copy(n).clamp(this.min,this.max)},distanceToPoint:function(){var n=new r;return function(t){return n.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(n){return this.min.max(n.min),this.max.min(n.max),this},union:function(n){return this.min.min(n.min),this.max.max(n.max),this},translate:function(n){return this.min.add(n),this.max.add(n),this},equals:function(n){return n.min.equals(this.min)&&n.max.equals(this.max)}});si.prototype=Object.create(l.prototype);si.prototype.constructor=si;we=0;a.prototype=Object.assign(Object.create(et.prototype),{constructor:a,isMaterial:!0,onBeforeCompile:function(){},setValues:function(n){var i,t,r;if(void 0!==n)for(i in n)t=n[i],void 0!==t?"shading"!==i?(r=this[i],void 0!==r?r&&r.isColor?r.set(t):r&&r.isVector3&&t&&t.isVector3?r.copy(t):this[i]="overdraw"===i?Number(t):t:console.warn("THREE."+this.type+": '"+i+"' is not a property of this material.")):(console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===rc):console.warn("THREE.Material: '"+i+"' parameter is undefined.")},toJSON:function(n){function u(n){var i=[],r,t;for(r in n)t=n[r],delete t.metadata,i.push(t);return i}var f=void 0===n||"string"==typeof n,t,i,r;return f&&(n={textures:{},images:{}}),t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}},(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),void 0!==this.roughness&&(t.roughness=this.roughness),void 0!==this.metalness&&(t.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),void 0!==this.shininess&&(t.shininess=this.shininess),void 0!==this.clearCoat&&(t.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(t.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(n).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(n).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(n).uuid),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(n).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(n).uuid,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(n).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(n).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(n).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(n).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(n).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(n).uuid,t.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(n).uuid),void 0!==this.size&&(t.size=this.size),void 0!==this.sizeAttenuation&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==ar&&(t.blending=this.blending),!0===this.flatShading&&(t.flatShading=this.flatShading),this.side!==ei&&(t.side=this.side),this.vertexColors!==lr&&(t.vertexColors=this.vertexColors),this.opacity<1&&(t.opacity=this.opacity),!0===this.transparent&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,0!==this.rotation&&(t.rotation=this.rotation),1!==this.linewidth&&(t.linewidth=this.linewidth),void 0!==this.dashSize&&(t.dashSize=this.dashSize),void 0!==this.gapSize&&(t.gapSize=this.gapSize),void 0!==this.scale&&(t.scale=this.scale),!0===this.dithering&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(t.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(t.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(t.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(t.morphTargets=!0),!0===this.skinning&&(t.skinning=!0),!1===this.visible&&(t.visible=!1),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),f)&&(i=u(n.textures),r=u(n.images),i.length>0&&(t.textures=i),r.length>0&&(t.images=r)),t},clone:function(){return(new this.constructor).copy(this)},copy:function(n){var i,r,u,t;if(this.name=n.name,this.fog=n.fog,this.lights=n.lights,this.blending=n.blending,this.side=n.side,this.flatShading=n.flatShading,this.vertexColors=n.vertexColors,this.opacity=n.opacity,this.transparent=n.transparent,this.blendSrc=n.blendSrc,this.blendDst=n.blendDst,this.blendEquation=n.blendEquation,this.blendSrcAlpha=n.blendSrcAlpha,this.blendDstAlpha=n.blendDstAlpha,this.blendEquationAlpha=n.blendEquationAlpha,this.depthFunc=n.depthFunc,this.depthTest=n.depthTest,this.depthWrite=n.depthWrite,this.colorWrite=n.colorWrite,this.precision=n.precision,this.polygonOffset=n.polygonOffset,this.polygonOffsetFactor=n.polygonOffsetFactor,this.polygonOffsetUnits=n.polygonOffsetUnits,this.dithering=n.dithering,this.alphaTest=n.alphaTest,this.premultipliedAlpha=n.premultipliedAlpha,this.overdraw=n.overdraw,this.visible=n.visible,this.userData=JSON.parse(JSON.stringify(n.userData)),this.clipShadows=n.clipShadows,this.clipIntersection=n.clipIntersection,i=n.clippingPlanes,r=null,null!==i)for(u=i.length,r=new Array(u),t=0;t!==u;++t)r[t]=i[t].clone();return this.clippingPlanes=r,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});yt.prototype=Object.create(a.prototype);yt.prototype.constructor=yt;yt.prototype.isMeshDepthMaterial=!0;yt.prototype.copy=function(n){return a.prototype.copy.call(this,n),this.depthPacking=n.depthPacking,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this};pt.prototype=Object.create(a.prototype);pt.prototype.constructor=pt;pt.prototype.isMeshDistanceMaterial=!0;pt.prototype.copy=function(n){return a.prototype.copy.call(this,n),this.referencePosition.copy(n.referencePosition),this.nearDistance=n.nearDistance,this.farDistance=n.farDistance,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this};Object.assign(wt.prototype,{isBox3:!0,set:function(n,t){return this.min.copy(n),this.max.copy(t),this},setFromArray:function(n){for(var f=1/0,e=1/0,o=1/0,s=-1/0,h=-1/0,c=-1/0,t=0,l=n.length;t<l;t+=3){var i=n[t],r=n[t+1],u=n[t+2];i<f&&(f=i);r<e&&(e=r);u<o&&(o=u);i>s&&(s=i);r>h&&(h=r);u>c&&(c=u)}return this.min.set(f,e,o),this.max.set(s,h,c),this},setFromBufferAttribute:function(n){for(var f=1/0,e=1/0,o=1/0,s=-1/0,h=-1/0,c=-1/0,t=0,l=n.count;t<l;t++){var i=n.getX(t),r=n.getY(t),u=n.getZ(t);i<f&&(f=i);r<e&&(e=r);u<o&&(o=u);i>s&&(s=i);r>h&&(h=r);u>c&&(c=u)}return this.min.set(f,e,o),this.max.set(s,h,c),this},setFromPoints:function(n){this.makeEmpty();for(var t=0,i=n.length;t<i;t++)this.expandByPoint(n[t]);return this},setFromCenterAndSize:function(){var n=new t;return function(t,i){var r=n.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(n){return this.makeEmpty(),this.expandByObject(n)},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.min.copy(n.min),this.max.copy(n.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(n){var i=n||new t;return this.isEmpty()?i.set(0,0,0):i.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(n){var i=n||new t;return this.isEmpty()?i.set(0,0,0):i.subVectors(this.max,this.min)},expandByPoint:function(n){return this.min.min(n),this.max.max(n),this},expandByVector:function(n){return this.min.sub(n),this.max.add(n),this},expandByScalar:function(n){return this.min.addScalar(-n),this.max.addScalar(n),this},expandByObject:function(){function f(t){var f=t.geometry,o,e;if(void 0!==f)if(f.isGeometry)for(o=f.vertices,n=0,r=o.length;n<r;n++)i.copy(o[n]),i.applyMatrix4(t.matrixWorld),u.expandByPoint(i);else if(f.isBufferGeometry&&(e=f.attributes.position,void 0!==e))for(n=0,r=e.count;n<r;n++)i.fromBufferAttribute(e,n).applyMatrix4(t.matrixWorld),u.expandByPoint(i)}var u,n,r,i=new t;return function(n){return u=this,n.updateMatrixWorld(!0),n.traverse(f),this}}(),containsPoint:function(n){return!(n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y||n.z<this.min.z||n.z>this.max.z)},containsBox:function(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y&&this.min.z<=n.min.z&&n.max.z<=this.max.z},getParameter:function(n,i){return(i||new t).set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y),(n.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(n){return!(n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y||n.max.z<this.min.z||n.min.z>this.max.z)},intersectsSphere:function(){var n=new t;return function(t){return this.clampPoint(t.center,n),n.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(n){var t,i;return n.normal.x>0?(t=n.normal.x*this.min.x,i=n.normal.x*this.max.x):(t=n.normal.x*this.max.x,i=n.normal.x*this.min.x),n.normal.y>0?(t+=n.normal.y*this.min.y,i+=n.normal.y*this.max.y):(t+=n.normal.y*this.max.y,i+=n.normal.y*this.min.y),n.normal.z>0?(t+=n.normal.z*this.min.z,i+=n.normal.z*this.max.z):(t+=n.normal.z*this.max.z,i+=n.normal.z*this.min.z),t<=n.constant&&i>=n.constant},clampPoint:function(n,i){return(i||new t).copy(n).clamp(this.min,this.max)},distanceToPoint:function(){var n=new t;return function(t){return n.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var n=new t;return function(t){var i=t||new st;return this.getCenter(i.center),i.radius=.5*this.getSize(n).length(),i}}(),intersect:function(n){return this.min.max(n.min),this.max.min(n.max),this.isEmpty()&&this.makeEmpty(),this},union:function(n){return this.min.min(n.min),this.max.max(n.max),this},applyMatrix4:function(){var n=[new t,new t,new t,new t,new t,new t,new t,new t];return function(t){return this.isEmpty()?this:(n[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),n[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),n[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),n[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),n[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),n[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),n[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),n[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(n),this)}}(),translate:function(n){return this.min.add(n),this.max.add(n),this},equals:function(n){return n.min.equals(this.min)&&n.max.equals(this.max)}});Object.assign(st.prototype,{set:function(n,t){return this.center.copy(n),this.radius=t,this},setFromPoints:function(){var n=new wt;return function(t,i){var r=this.center;void 0!==i?r.copy(i):n.setFromPoints(t).getCenter(r);for(var u=0,f=0,e=t.length;f<e;f++)u=Math.max(u,r.distanceToSquared(t[f]));return this.radius=Math.sqrt(u),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.center.copy(n.center),this.radius=n.radius,this},empty:function(){return this.radius<=0},containsPoint:function(n){return n.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(n){return n.distanceTo(this.center)-this.radius},intersectsSphere:function(n){var t=this.radius+n.radius;return n.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(n){return n.intersectsSphere(this)},intersectsPlane:function(n){return Math.abs(n.distanceToPoint(this.center))<=this.radius},clampPoint:function(n,i){var u=this.center.distanceToSquared(n),r=i||new t;return r.copy(n),u>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(n){var t=n||new wt;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(n){return this.center.applyMatrix4(n),this.radius=this.radius*n.getMaxScaleOnAxis(),this},translate:function(n){return this.center.add(n),this},equals:function(n){return n.center.equals(this.center)&&n.radius===this.radius}});Object.assign(b.prototype,{set:function(n,t){return this.normal.copy(n),this.constant=t,this},setComponents:function(n,t,i,r){return this.normal.set(n,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(n,t){return this.normal.copy(n),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var n=new t,i=new t;return function(t,r,u){var f=n.subVectors(u,r).cross(i.subVectors(t,r)).normalize();return this.setFromNormalAndCoplanarPoint(f,t),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.normal.copy(n.normal),this.constant=n.constant,this},normalize:function(){var n=1/this.normal.length();return this.normal.multiplyScalar(n),this.constant*=n,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(n){return this.normal.dot(n)+this.constant},distanceToSphere:function(n){return this.distanceToPoint(n.center)-n.radius},projectPoint:function(n,i){return(i||new t).copy(this.normal).multiplyScalar(-this.distanceToPoint(n)).add(n)},intersectLine:function(){var n=new t;return function(i,r){var f=r||new t,e=i.delta(n),o=this.normal.dot(e),u;if(0!==o){if(u=-(i.start.dot(this.normal)+this.constant)/o,!(u<0||u>1))return f.copy(e).multiplyScalar(u).add(i.start)}else if(0===this.distanceToPoint(i.start))return f.copy(i.start)}}(),intersectsLine:function(n){var t=this.distanceToPoint(n.start),i=this.distanceToPoint(n.end);return t<0&&i>0||i<0&&t>0},intersectsBox:function(n){return n.intersectsPlane(this)},intersectsSphere:function(n){return n.intersectsPlane(this)},coplanarPoint:function(n){return(n||new t).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var n=new t,i=new w;return function(t,r){var u=r||i.getNormalMatrix(t),f=this.coplanarPoint(n).applyMatrix4(t),e=this.normal.applyMatrix3(u).normalize();return this.constant=-f.dot(e),this}}(),translate:function(n){return this.constant-=n.dot(this.normal),this},equals:function(n){return n.normal.equals(this.normal)&&n.constant===this.constant}});Object.assign(di.prototype,{set:function(n,t,i,r,u,f){var e=this.planes;return e[0].copy(n),e[1].copy(t),e[2].copy(i),e[3].copy(r),e[4].copy(u),e[5].copy(f),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){for(var i=this.planes,t=0;t<6;t++)i[t].copy(n.planes[t]);return this},setFromMatrix:function(n){var i=this.planes,t=n.elements,o=t[0],s=t[1],h=t[2],r=t[3],c=t[4],l=t[5],a=t[6],u=t[7],v=t[8],y=t[9],p=t[10],f=t[11],w=t[12],b=t[13],k=t[14],e=t[15];return i[0].setComponents(r-o,u-c,f-v,e-w).normalize(),i[1].setComponents(r+o,u+c,f+v,e+w).normalize(),i[2].setComponents(r+s,u+l,f+y,e+b).normalize(),i[3].setComponents(r-s,u-l,f-y,e-b).normalize(),i[4].setComponents(r-h,u-a,f-p,e-k).normalize(),i[5].setComponents(r+h,u+a,f+p,e+k).normalize(),this},intersectsObject:function(){var n=new st;return function(t){var i=t.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),n.copy(i.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}}(),intersectsSprite:function(){var n=new st;return function(t){return n.center.set(0,0,0),n.radius=.70710678118654757,n.applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}}(),intersectsSphere:function(n){for(var i=this.planes,r=n.center,u=-n.radius,t=0;t<6;t++)if(i[t].distanceToPoint(r)<u)return!1;return!0},intersectsBox:function(){var n=new t,i=new t;return function(t){for(var r,e,o,f=this.planes,u=0;u<6;u++)if(r=f[u],n.x=r.normal.x>0?t.min.x:t.max.x,i.x=r.normal.x>0?t.max.x:t.min.x,n.y=r.normal.y>0?t.min.y:t.max.y,i.y=r.normal.y>0?t.max.y:t.min.y,n.z=r.normal.z>0?t.min.z:t.max.z,i.z=r.normal.z>0?t.max.z:t.min.z,e=r.distanceToPoint(n),o=r.distanceToPoint(i),e<0&&o<0)return!1;return!0}}(),containsPoint:function(n){for(var i=this.planes,t=0;t<6;t++)if(i[t].distanceToPoint(n)<0)return!1;return!0}});ht.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];ht.DefaultOrder="XYZ";Object.defineProperties(ht.prototype,{x:{get:function(){return this._x},set:function(n){this._x=n;this.onChangeCallback()}},y:{get:function(){return this._y},set:function(n){this._y=n;this.onChangeCallback()}},z:{get:function(){return this._z},set:function(n){this._z=n;this.onChangeCallback()}},order:{get:function(){return this._order},set:function(n){this._order=n;this.onChangeCallback()}}});Object.assign(ht.prototype,{isEuler:!0,set:function(n,t,i,r){return this._x=n,this._y=t,this._z=i,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(n){return this._x=n._x,this._y=n._y,this._z=n._z,this._order=n._order,this.onChangeCallback(),this},setFromRotationMatrix:function(n,t,i){var u=o.clamp,r=n.elements,f=r[0],h=r[4],c=r[8],l=r[1],e=r[5],a=r[9],v=r[2],y=r[6],s=r[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(u(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-a,s),this._z=Math.atan2(-h,f)):(this._x=Math.atan2(y,e),this._z=0)):"YXZ"===t?(this._x=Math.asin(-u(a,-1,1)),Math.abs(a)<.99999?(this._y=Math.atan2(c,s),this._z=Math.atan2(l,e)):(this._y=Math.atan2(-v,f),this._z=0)):"ZXY"===t?(this._x=Math.asin(u(y,-1,1)),Math.abs(y)<.99999?(this._y=Math.atan2(-v,s),this._z=Math.atan2(-h,e)):(this._y=0,this._z=Math.atan2(l,f))):"ZYX"===t?(this._y=Math.asin(-u(v,-1,1)),Math.abs(v)<.99999?(this._x=Math.atan2(y,s),this._z=Math.atan2(l,f)):(this._x=0,this._z=Math.atan2(-h,e))):"YZX"===t?(this._z=Math.asin(u(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(-a,e),this._y=Math.atan2(-v,f)):(this._x=0,this._y=Math.atan2(c,s))):"XZY"===t?(this._z=Math.asin(-u(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(y,e),this._y=Math.atan2(c,f)):(this._x=Math.atan2(-a,s),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var n=new u;return function(t,i,r){return n.makeRotationFromQuaternion(t),this.setFromRotationMatrix(n,i,r)}}(),setFromVector3:function(n,t){return this.set(n.x,n.y,n.z,t||this._order)},reorder:function(){var n=new y;return function(t){return n.setFromEuler(this),this.setFromQuaternion(n,t)}}(),equals:function(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._order===this._order},fromArray:function(n){return this._x=n[0],this._y=n[1],this._z=n[2],void 0!==n[3]&&(this._order=n[3]),this.onChangeCallback(),this},toArray:function(n,t){return void 0===n&&(n=[]),void 0===t&&(t=0),n[t]=this._x,n[t+1]=this._y,n[t+2]=this._z,n[t+3]=this._order,n},toVector3:function(n){return n?n.set(this._x,this._y,this._z):new t(this._x,this._y,this._z)},onChange:function(n){return this.onChangeCallback=n,this},onChangeCallback:function(){}});Object.assign(lu.prototype,{set:function(n){this.mask=1<<n|0},enable:function(n){this.mask|=1<<n|0},toggle:function(n){this.mask^=1<<n|0},disable:function(n){this.mask&=~(1<<n|0)},test:function(n){return 0!=(this.mask&n.mask)}});be=0;h.DefaultUp=new t(0,1,0);h.DefaultMatrixAutoUpdate=!0;h.prototype=Object.assign(Object.create(et.prototype),{constructor:h,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(n){this.matrix.multiplyMatrices(n,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(n){return this.quaternion.premultiply(n),this},setRotationFromAxisAngle:function(n,t){this.quaternion.setFromAxisAngle(n,t)},setRotationFromEuler:function(n){this.quaternion.setFromEuler(n,!0)},setRotationFromMatrix:function(n){this.quaternion.setFromRotationMatrix(n)},setRotationFromQuaternion:function(n){this.quaternion.copy(n)},rotateOnAxis:function(){var n=new y;return function(t,i){return n.setFromAxisAngle(t,i),this.quaternion.multiply(n),this}}(),rotateOnWorldAxis:function(){var n=new y;return function(t,i){return n.setFromAxisAngle(t,i),this.quaternion.premultiply(n),this}}(),rotateX:function(){var n=new t(1,0,0);return function(t){return this.rotateOnAxis(n,t)}}(),rotateY:function(){var n=new t(0,1,0);return function(t){return this.rotateOnAxis(n,t)}}(),rotateZ:function(){var n=new t(0,0,1);return function(t){return this.rotateOnAxis(n,t)}}(),translateOnAxis:function(){var n=new t;return function(t,i){return n.copy(t).applyQuaternion(this.quaternion),this.position.add(n.multiplyScalar(i)),this}}(),translateX:function(){var n=new t(1,0,0);return function(t){return this.translateOnAxis(n,t)}}(),translateY:function(){var n=new t(0,1,0);return function(t){return this.translateOnAxis(n,t)}}(),translateZ:function(){var n=new t(0,0,1);return function(t){return this.translateOnAxis(n,t)}}(),localToWorld:function(n){return n.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var n=new u;return function(t){return t.applyMatrix4(n.getInverse(this.matrixWorld))}}(),lookAt:function(){var i=new u,n=new t;return function(t,r,u){t.isVector3?n.copy(t):n.set(t,r,u);this.isCamera?i.lookAt(this.position,n,this.up):i.lookAt(n,this.position,this.up);this.quaternion.setFromRotationMatrix(i)}}(),add:function(n){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return n===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",n),this):(n&&n.isObject3D?(null!==n.parent&&n.parent.remove(n),n.parent=this,n.dispatchEvent({type:"added"}),this.children.push(n)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",n),this)},remove:function(n){var t,i;if(arguments.length>1){for(t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}return i=this.children.indexOf(n),-1!==i&&(n.parent=null,n.dispatchEvent({type:"removed"}),this.children.splice(i,1)),this},getObjectById:function(n){return this.getObjectByProperty("id",n)},getObjectByName:function(n){return this.getObjectByProperty("name",n)},getObjectByProperty:function(n,t){var i,u,f,r;if(this[n]===t)return this;for(i=0,u=this.children.length;i<u;i++)if(f=this.children[i],r=f.getObjectByProperty(n,t),void 0!==r)return r},getWorldPosition:function(n){var i=n||new t;return this.updateMatrixWorld(!0),i.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var n=new t,i=new t;return function(t){var r=t||new y;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(n,r,i),r}}(),getWorldRotation:function(){var n=new y;return function(t){var i=t||new ht;return this.getWorldQuaternion(n),i.setFromQuaternion(n,this.rotation.order,!1)}}(),getWorldScale:function(){var n=new t,i=new y;return function(r){var u=r||new t;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(n,i,u),u}}(),getWorldDirection:function(){var n=new y;return function(i){var r=i||new t;return this.getWorldQuaternion(n),r.set(0,0,1).applyQuaternion(n)}}(),raycast:function(){},traverse:function(n){n(this);for(var i=this.children,t=0,r=i.length;t<r;t++)i[t].traverse(n)},traverseVisible:function(n){if(!1!==this.visible){n(this);for(var i=this.children,t=0,r=i.length;t<r;t++)i[t].traverseVisible(n)}},traverseAncestors:function(n){var t=this.parent;null!==t&&(n(t),t.traverseAncestors(n))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate&&this.updateMatrix();(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);for(var i=this.children,t=0,r=i.length;t<r;t++)i[t].updateMatrixWorld(n)},toJSON:function(n){function f(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(n)),i.uuid}function e(n){var i=[],r,t;for(r in n)t=n[r],delete t.metadata,i.push(t);return i}var h=void 0===n||"string"==typeof n,r={},t,o,u,s,c,i;if(h&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),t={},(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),!0===this.castShadow&&(t.castShadow=!0),!0===this.receiveShadow&&(t.receiveShadow=!0),!1===this.visible&&(t.visible=!1),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),t.matrix=this.matrix.toArray(),void 0!==this.geometry)&&(t.geometry=f(n.geometries,this.geometry),o=this.geometry.parameters,void 0!==o&&void 0!==o.shapes))if(u=o.shapes,Array.isArray(u))for(i=0,s=u.length;i<s;i++)c=u[i],f(n.shapes,c);else f(n.shapes,u);if(void 0!==this.material)if(Array.isArray(this.material)){for(var l=[],i=0,s=this.material.length;i<s;i++)l.push(f(n.materials,this.material[i]));t.material=l}else t.material=f(n.materials,this.material);if(this.children.length>0)for(t.children=[],i=0;i<this.children.length;i++)t.children.push(this.children[i].toJSON(n).object);if(h){var a=e(n.geometries),v=e(n.materials),y=e(n.textures),p=e(n.images),u=e(n.shapes);a.length>0&&(r.geometries=a);v.length>0&&(r.materials=v);y.length>0&&(r.textures=y);p.length>0&&(r.images=p);u.length>0&&(r.shapes=u)}return r.object=t,r},clone:function(n){return(new this.constructor).copy(this,n)},copy:function(n,t){var i,r;if(void 0===t&&(t=!0),this.name=n.name,this.up.copy(n.up),this.position.copy(n.position),this.quaternion.copy(n.quaternion),this.scale.copy(n.scale),this.matrix.copy(n.matrix),this.matrixWorld.copy(n.matrixWorld),this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrixWorldNeedsUpdate=n.matrixWorldNeedsUpdate,this.layers.mask=n.layers.mask,this.visible=n.visible,this.castShadow=n.castShadow,this.receiveShadow=n.receiveShadow,this.frustumCulled=n.frustumCulled,this.renderOrder=n.renderOrder,this.userData=JSON.parse(JSON.stringify(n.userData)),!0===t)for(i=0;i<n.children.length;i++)r=n.children[i],this.add(r.clone());return this}});tt.prototype=Object.assign(Object.create(h.prototype),{constructor:tt,isCamera:!0,copy:function(n,t){return h.prototype.copy.call(this,n,t),this.matrixWorldInverse.copy(n.matrixWorldInverse),this.projectionMatrix.copy(n.projectionMatrix),this},getWorldDirection:function(){var n=new y;return function(i){var r=i||new t;return this.getWorldQuaternion(n),r.set(0,0,-1).applyQuaternion(n)}}(),updateMatrixWorld:function(n){h.prototype.updateMatrixWorld.call(this,n);this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});hi.prototype=Object.assign(Object.create(tt.prototype),{constructor:hi,isOrthographicCamera:!0,copy:function(n,t){return tt.prototype.copy.call(this,n,t),this.left=n.left,this.right=n.right,this.top=n.top,this.bottom=n.bottom,this.near=n.near,this.far=n.far,this.zoom=n.zoom,this.view=null===n.view?null:Object.assign({},n.view),this},setViewOffset:function(n,t,i,r,u,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=n;this.view.fullHeight=t;this.view.offsetX=i;this.view.offsetY=r;this.view.width=u;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var i=(this.right-this.left)/(2*this.zoom),r=(this.top-this.bottom)/(2*this.zoom),u=(this.right+this.left)/2,f=(this.top+this.bottom)/2,n=u-i,e=u+i,t=f+r,o=f-r;if(null!==this.view&&this.view.enabled){var s=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),c=(this.right-this.left)/this.view.width,l=(this.top-this.bottom)/this.view.height;n+=c*(this.view.offsetX/s);e=n+c*(this.view.width/s);t-=l*(this.view.offsetY/h);o=t-l*(this.view.height/h)}this.projectionMatrix.makeOrthographic(n,e,t,o,this.near,this.far)},toJSON:function(n){var t=h.prototype.toJSON.call(this,n);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}});Object.assign(ci.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(n){var t,i;for(this.a=n.a,this.b=n.b,this.c=n.c,this.normal.copy(n.normal),this.color.copy(n.color),this.materialIndex=n.materialIndex,t=0,i=n.vertexNormals.length;t<i;t++)this.vertexNormals[t]=n.vertexNormals[t].clone();for(t=0,i=n.vertexColors.length;t<i;t++)this.vertexColors[t]=n.vertexColors[t].clone();return this}});ke=0;it.prototype=Object.assign(Object.create(et.prototype),{constructor:it,isGeometry:!0,applyMatrix:function(n){for(var i,r,e,f=(new w).getNormalMatrix(n),t=0,u=this.vertices.length;t<u;t++)this.vertices[t].applyMatrix4(n);for(t=0,u=this.faces.length;t<u;t++)for(i=this.faces[t],i.normal.applyMatrix3(f).normalize(),r=0,e=i.vertexNormals.length;r<e;r++)i.vertexNormals[r].applyMatrix3(f).normalize();return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var n=new u;return function(t){return n.makeRotationX(t),this.applyMatrix(n),this}}(),rotateY:function(){var n=new u;return function(t){return n.makeRotationY(t),this.applyMatrix(n),this}}(),rotateZ:function(){var n=new u;return function(t){return n.makeRotationZ(t),this.applyMatrix(n),this}}(),translate:function(){var n=new u;return function(t,i,r){return n.makeTranslation(t,i,r),this.applyMatrix(n),this}}(),scale:function(){var n=new u;return function(t,i,r){return n.makeScale(t,i,r),this.applyMatrix(n),this}}(),lookAt:function(){var n=new h;return function(t){n.lookAt(t);n.updateMatrix();this.applyMatrix(n.matrix)}}(),fromBufferGeometry:function(n){function v(n,t,i,r){var u=void 0!==h?[p[n].clone(),p[t].clone(),p[i].clone()]:[],f=void 0!==l?[o.colors[n].clone(),o.colors[t].clone(),o.colors[i].clone()]:[],e=new ci(n,t,i,u,f,r);o.faces.push(e);void 0!==y&&o.faceVertexUvs[0].push([w[n].clone(),w[t].clone(),w[i].clone()]);void 0!==a&&o.faceVertexUvs[1].push([b[n].clone(),b[t].clone(),b[i].clone()])}var o=this,f=null!==n.index?n.index.array:void 0,e=n.attributes,s=e.position.array,h=void 0!==e.normal?e.normal.array:void 0,l=void 0!==e.color?e.color.array:void 0,y=void 0!==e.uv?e.uv.array:void 0,a=void 0!==e.uv2?e.uv2.array:void 0,k,i;void 0!==a&&(this.faceVertexUvs[1]=[]);for(var p=[],w=[],b=[],i=0,u=0;i<s.length;i+=3,u+=2)o.vertices.push(new t(s[i],s[i+1],s[i+2])),void 0!==h&&p.push(new t(h[i],h[i+1],h[i+2])),void 0!==l&&o.colors.push(new c(l[i],l[i+1],l[i+2])),void 0!==y&&w.push(new r(y[u],y[u+1])),void 0!==a&&b.push(new r(a[u],a[u+1]));if(k=n.groups,k.length>0)for(i=0;i<k.length;i++)for(var d=k[i],g=d.start,nt=d.count,u=g,tt=g+nt;u<tt;u+=3)void 0!==f?v(f[u],f[u+1],f[u+2],d.materialIndex):v(u,u+1,u+2,d.materialIndex);else if(void 0!==f)for(i=0;i<f.length;i+=3)v(f[i],f[i+1],f[i+2]);else for(i=0;i<s.length/3;i+=3)v(i,i+1,i+2);return this.computeFaceNormals(),null!==n.boundingBox&&(this.boundingBox=n.boundingBox.clone()),null!==n.boundingSphere&&(this.boundingSphere=n.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var n=this.boundingBox.getCenter().negate();return this.translate(n.x,n.y,n.z),n},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,i=this.boundingSphere.radius,n=0===i?1:1/i,r=new u;return r.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var n=new t,u=new t,r=0,e=this.faces.length;r<e;r++){var i=this.faces[r],o=this.vertices[i.a],f=this.vertices[i.b],s=this.vertices[i.c];n.subVectors(s,f);u.subVectors(o,f);n.cross(u);n.normalize();i.normal.copy(n)}},computeVertexNormals:function(n){var f,h,u,o,i,r,a,c,v,s,l,e;for(void 0===n&&(n=!0),r=new Array(this.vertices.length),f=0,h=this.vertices.length;f<h;f++)r[f]=new t;if(n)for(s=new t,l=new t,u=0,o=this.faces.length;u<o;u++)i=this.faces[u],a=this.vertices[i.a],c=this.vertices[i.b],v=this.vertices[i.c],s.subVectors(v,c),l.subVectors(a,c),s.cross(l),r[i.a].add(s),r[i.b].add(s),r[i.c].add(s);else for(this.computeFaceNormals(),u=0,o=this.faces.length;u<o;u++)i=this.faces[u],r[i.a].add(i.normal),r[i.b].add(i.normal),r[i.c].add(i.normal);for(f=0,h=this.vertices.length;f<h;f++)r[f].normalize();for(u=0,o=this.faces.length;u<o;u++)i=this.faces[u],e=i.vertexNormals,3===e.length?(e[0].copy(r[i.a]),e[1].copy(r[i.b]),e[2].copy(r[i.c])):(e[0]=r[i.a].clone(),e[1]=r[i.b].clone(),e[2]=r[i.c].clone());this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var i,r,n,t;for(this.computeFaceNormals(),i=0,r=this.faces.length;i<r;i++)n=this.faces[i],t=n.vertexNormals,3===t.length?(t[0].copy(n.normal),t[1].copy(n.normal),t[2].copy(n.normal)):(t[0]=n.normal.clone(),t[1]=n.normal.clone(),t[2]=n.normal.clone());this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(var i,o,n,e,c,l,h,s,f,r=0,u=this.faces.length;r<u;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),i=0,o=n.vertexNormals.length;i<o;i++)n.__originalVertexNormals[i]?n.__originalVertexNormals[i].copy(n.vertexNormals[i]):n.__originalVertexNormals[i]=n.vertexNormals[i].clone();for(e=new it,e.faces=this.faces,i=0,o=this.morphTargets.length;i<o;i++){if(!this.morphNormals[i])for(this.morphNormals[i]={},this.morphNormals[i].faceNormals=[],this.morphNormals[i].vertexNormals=[],c=this.morphNormals[i].faceNormals,l=this.morphNormals[i].vertexNormals,r=0,u=this.faces.length;r<u;r++)s=new t,f={a:new t,b:new t,c:new t},c.push(s),l.push(f);for(h=this.morphNormals[i],e.vertices=this.morphTargets[i].vertices,e.computeFaceNormals(),e.computeVertexNormals(),r=0,u=this.faces.length;r<u;r++)n=this.faces[r],s=h.faceNormals[r],f=h.vertexNormals[r],s.copy(n.normal),f.a.copy(n.vertexNormals[0]),f.b.copy(n.vertexNormals[1]),f.c.copy(n.vertexNormals[2])}for(r=0,u=this.faces.length;r<u;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeLineDistances:function(){for(var i=0,t=this.vertices,n=0,r=t.length;n<r;n++)n>0&&(i+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=i},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new wt);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new st);this.boundingSphere.setFromPoints(this.vertices)},merge:function(n,t,i){var g,a,r,f,c,y,u,s;if(!n||!n.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",n);var h,l=this.vertices.length,rt=this.vertices,p=n.vertices,ut=this.faces,b=n.faces,ft=this.faceVertexUvs[0],k=n.faceVertexUvs[0],et=this.colors,d=n.colors;for(void 0===i&&(i=0),void 0!==t&&(h=(new w).getNormalMatrix(t)),r=0,f=p.length;r<f;r++)g=p[r],a=g.clone(),void 0!==t&&a.applyMatrix4(t),rt.push(a);for(r=0,f=d.length;r<f;r++)et.push(d[r].clone());for(r=0,f=b.length;r<f;r++){var e,v,nt,o=b[r],tt=o.vertexNormals,it=o.vertexColors;for(e=new ci(o.a+l,o.b+l,o.c+l),e.normal.copy(o.normal),void 0!==h&&e.normal.applyMatrix3(h).normalize(),u=0,s=tt.length;u<s;u++)v=tt[u].clone(),void 0!==h&&v.applyMatrix3(h).normalize(),e.vertexNormals.push(v);for(e.color.copy(o.color),u=0,s=it.length;u<s;u++)nt=it[u],e.vertexColors.push(nt.clone());e.materialIndex=o.materialIndex+i;ut.push(e)}for(r=0,f=k.length;r<f;r++)if(c=k[r],y=[],void 0!==c){for(u=0,s=c.length;u<s;u++)y.push(c[u].clone());ft.push(y)}},mergeMesh:function(n){if(!n||!n.isMesh)return void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",n);n.matrixAutoUpdate&&n.updateMatrix();this.merge(n.geometry,n.matrix)},mergeVertices:function(){for(var u,f,t,c,o,y,l={},s=[],i=[],a=Math.pow(10,4),h,r,v,p,n=0,e=this.vertices.length;n<e;n++)u=this.vertices[n],f=Math.round(u.x*a)+"_"+Math.round(u.y*a)+"_"+Math.round(u.z*a),void 0===l[f]?(l[f]=n,s.push(this.vertices[n]),i[n]=s.length-1):i[n]=i[l[f]];for(h=[],n=0,e=this.faces.length;n<e;n++)for(t=this.faces[n],t.a=i[t.a],t.b=i[t.b],t.c=i[t.c],c=[t.a,t.b,t.c],r=0;r<3;r++)if(c[r]===c[(r+1)%3]){h.push(n);break}for(n=h.length-1;n>=0;n--)for(v=h[n],this.faces.splice(v,1),o=0,y=this.faceVertexUvs.length;o<y;o++)this.faceVertexUvs[o].splice(v,1);return p=this.vertices.length-s.length,this.vertices=s,p},setFromPoints:function(n){var i,u,r;for(this.vertices=[],i=0,u=n.length;i<u;i++)r=n[i],this.vertices.push(new t(r.x,r.y,r.z||0));return this},sortFacesByMaterialIndex:function(){function s(n,t){return n.materialIndex-t.materialIndex}for(var t,i,f,e,o,r=this.faces,u=r.length,n=0;n<u;n++)r[n]._id=n;for(r.sort(s),f=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f&&f.length===u&&(t=[]),e&&e.length===u&&(i=[]),n=0;n<u;n++)o=r[n]._id,t&&t.push(f[o]),i&&i.push(e[o]);t&&(this.faceVertexUvs[0]=t);i&&(this.faceVertexUvs[1]=i)},toJSON:function(){function f(n,t,i){return i?n|1<<t:n&~(1<<t)}function e(n){var t=n.x.toString()+n.y.toString()+n.z.toString();return void 0!==l[t]?l[t]:(l[t]=nt.length/3,nt.push(n.x,n.y,n.z),l[t])}function o(n){var t=n.r.toString()+n.g.toString()+n.b.toString();return void 0!==v[t]?v[t]:(v[t]=a.length,a.push(n.getHex()),v[t])}function d(n){var t=n.x.toString()+n.y.toString();return void 0!==p[t]?p[t]:(p[t]=y.length/2,y.push(n.x,n.y),p[t])}var i={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}},s,h,g,r,c,w,b,k;if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),void 0!==this.parameters){s=this.parameters;for(h in s)void 0!==s[h]&&(i[h]=s[h]);return i}for(g=[],r=0;r<this.vertices.length;r++)c=this.vertices[r],g.push(c.x,c.y,c.z);for(var u=[],nt=[],l={},a=[],v={},y=[],p={},r=0;r<this.faces.length;r++){var t=this.faces[r],tt=void 0!==this.faceVertexUvs[0][r],it=t.normal.length()>0,rt=t.vertexNormals.length>0,ut=1!==t.color.r||1!==t.color.g||1!==t.color.b,ft=t.vertexColors.length>0,n=0;(n=f(n,0,0),n=f(n,1,!0),n=f(n,2,!1),n=f(n,3,tt),n=f(n,4,it),n=f(n,5,rt),n=f(n,6,ut),n=f(n,7,ft),u.push(n),u.push(t.a,t.b,t.c),u.push(t.materialIndex),tt)&&(w=this.faceVertexUvs[0][r],u.push(d(w[0]),d(w[1]),d(w[2])));(it&&u.push(e(t.normal)),rt)&&(b=t.vertexNormals,u.push(e(b[0]),e(b[1]),e(b[2])));(ut&&u.push(o(t.color)),ft)&&(k=t.vertexColors,u.push(o(k[0]),o(k[1]),o(k[2])))}return i.data={},i.data.vertices=g,i.data.normals=nt,a.length>0&&(i.data.colors=a),y.length>0&&(i.data.uvs=[y]),i.data.faces=u,i},clone:function(){return(new it).copy(this)},copy:function(n){var t,r,i,u,c,it,a,v,y,p,w,b,rt,f,o,e,s,l,h,k,d,g,nt,tt;for(this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=n.name,a=n.vertices,t=0,r=a.length;t<r;t++)this.vertices.push(a[t].clone());for(v=n.colors,t=0,r=v.length;t<r;t++)this.colors.push(v[t].clone());for(y=n.faces,t=0,r=y.length;t<r;t++)this.faces.push(y[t].clone());for(t=0,r=n.faceVertexUvs.length;t<r;t++)for(p=n.faceVertexUvs[t],void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),i=0,u=p.length;i<u;i++){for(w=p[i],b=[],c=0,it=w.length;c<it;c++)rt=w[c],b.push(rt.clone());this.faceVertexUvs[t].push(b)}for(f=n.morphTargets,t=0,r=f.length;t<r;t++){if(o={},o.name=f[t].name,void 0!==f[t].vertices)for(o.vertices=[],i=0,u=f[t].vertices.length;i<u;i++)o.vertices.push(f[t].vertices[i].clone());if(void 0!==f[t].normals)for(o.normals=[],i=0,u=f[t].normals.length;i<u;i++)o.normals.push(f[t].normals[i].clone());this.morphTargets.push(o)}for(e=n.morphNormals,t=0,r=e.length;t<r;t++){if(s={},void 0!==e[t].vertexNormals)for(s.vertexNormals=[],i=0,u=e[t].vertexNormals.length;i<u;i++)l=e[t].vertexNormals[i],h={},h.a=l.a.clone(),h.b=l.b.clone(),h.c=l.c.clone(),s.vertexNormals.push(h);if(void 0!==e[t].faceNormals)for(s.faceNormals=[],i=0,u=e[t].faceNormals.length;i<u;i++)s.faceNormals.push(e[t].faceNormals[i].clone());this.morphNormals.push(s)}for(k=n.skinWeights,t=0,r=k.length;t<r;t++)this.skinWeights.push(k[t].clone());for(d=n.skinIndices,t=0,r=d.length;t<r;t++)this.skinIndices.push(d[t].clone());for(g=n.lineDistances,t=0,r=g.length;t<r;t++)this.lineDistances.push(g[t]);return nt=n.boundingBox,null!==nt&&(this.boundingBox=nt.clone()),tt=n.boundingSphere,null!==tt&&(this.boundingSphere=tt.clone()),this.elementsNeedUpdate=n.elementsNeedUpdate,this.verticesNeedUpdate=n.verticesNeedUpdate,this.uvsNeedUpdate=n.uvsNeedUpdate,this.normalsNeedUpdate=n.normalsNeedUpdate,this.colorsNeedUpdate=n.colorsNeedUpdate,this.lineDistancesNeedUpdate=n.lineDistancesNeedUpdate,this.groupsNeedUpdate=n.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(f.prototype,"needsUpdate",{set:function(n){!0===n&&this.version++}});Object.assign(f.prototype,{isBufferAttribute:!0,setArray:function(n){if(Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==n?n.length/this.itemSize:0;this.array=n},setDynamic:function(n){return this.dynamic=n,this},copy:function(n){return this.array=new n.array.constructor(n.array),this.itemSize=n.itemSize,this.count=n.count,this.normalized=n.normalized,this.dynamic=n.dynamic,this},copyAt:function(n,t,i){n*=this.itemSize;i*=t.itemSize;for(var r=0,u=this.itemSize;r<u;r++)this.array[n+r]=t.array[i+r];return this},copyArray:function(n){return this.array.set(n),this},copyColorsArray:function(n){for(var t,r=this.array,u=0,i=0,f=n.length;i<f;i++)t=n[i],void 0===t&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),t=new c),r[u++]=t.r,r[u++]=t.g,r[u++]=t.b;return this},copyIndicesArray:function(n){for(var t,i=this.array,r=0,u=0,f=n.length;u<f;u++)t=n[u],i[r++]=t.a,i[r++]=t.b,i[r++]=t.c;return this},copyVector2sArray:function(n){for(var t,u=this.array,f=0,i=0,e=n.length;i<e;i++)t=n[i],void 0===t&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),t=new r),u[f++]=t.x,u[f++]=t.y;return this},copyVector3sArray:function(n){for(var i,u=this.array,f=0,r=0,e=n.length;r<e;r++)i=n[r],void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new t),u[f++]=i.x,u[f++]=i.y,u[f++]=i.z;return this},copyVector4sArray:function(n){for(var t,i=this.array,r=0,u=0,f=n.length;u<f;u++)t=n[u],void 0===t&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",u),t=new s),i[r++]=t.x,i[r++]=t.y,i[r++]=t.z,i[r++]=t.w;return this},set:function(n,t){return void 0===t&&(t=0),this.array.set(n,t),this},getX:function(n){return this.array[n*this.itemSize]},setX:function(n,t){return this.array[n*this.itemSize]=t,this},getY:function(n){return this.array[n*this.itemSize+1]},setY:function(n,t){return this.array[n*this.itemSize+1]=t,this},getZ:function(n){return this.array[n*this.itemSize+2]},setZ:function(n,t){return this.array[n*this.itemSize+2]=t,this},getW:function(n){return this.array[n*this.itemSize+3]},setW:function(n,t){return this.array[n*this.itemSize+3]=t,this},setXY:function(n,t,i){return n*=this.itemSize,this.array[n+0]=t,this.array[n+1]=i,this},setXYZ:function(n,t,i,r){return n*=this.itemSize,this.array[n+0]=t,this.array[n+1]=i,this.array[n+2]=r,this},setXYZW:function(n,t,i,r,u){return n*=this.itemSize,this.array[n+0]=t,this.array[n+1]=i,this.array[n+2]=r,this.array[n+3]=u,this},onUpload:function(n){return this.onUploadCallback=n,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}});gi.prototype=Object.create(f.prototype);gi.prototype.constructor=gi;nr.prototype=Object.create(f.prototype);nr.prototype.constructor=nr;tr.prototype=Object.create(f.prototype);tr.prototype.constructor=tr;ir.prototype=Object.create(f.prototype);ir.prototype.constructor=ir;ni.prototype=Object.create(f.prototype);ni.prototype.constructor=ni;rr.prototype=Object.create(f.prototype);rr.prototype.constructor=rr;ti.prototype=Object.create(f.prototype);ti.prototype.constructor=ti;v.prototype=Object.create(f.prototype);v.prototype.constructor=v;ur.prototype=Object.create(f.prototype);ur.prototype.constructor=ur;Object.assign(au.prototype,{computeGroups:function(n){for(var f,t,r=[],u=void 0,e=n.faces,i=0;i<e.length;i++)f=e[i],f.materialIndex!==u&&(u=f.materialIndex,void 0!==t&&(t.count=3*i-t.start,r.push(t)),t={start:3*i,materialIndex:u});void 0!==t&&(t.count=3*i-t.start,r.push(t));this.groups=r},fromGeometry:function(n){var c,nt=n.faces,o=n.vertices,e=n.faceVertexUvs,it=e[0]&&e[0].length>0,rt=e[1]&&e[1].length>0,tt=n.morphTargets,d=tt.length,l,g,a,i,t,s,p,h,w,u,b,f,k;if(d>0){for(c=[],i=0;i<d;i++)c[i]=[];this.morphTargets.position=c}if(g=n.morphNormals,a=g.length,a>0){for(l=[],i=0;i<a;i++)l[i]=[];this.morphTargets.normal=l}for(var v=n.skinIndices,y=n.skinWeights,ut=v.length===o.length,ft=y.length===o.length,i=0;i<nt.length;i++){for(t=nt[i],this.vertices.push(o[t.a],o[t.b],o[t.c]),s=t.vertexNormals,3===s.length?this.normals.push(s[0],s[1],s[2]):(p=t.normal,this.normals.push(p,p,p)),h=t.vertexColors,3===h.length?this.colors.push(h[0],h[1],h[2]):(w=t.color,this.colors.push(w,w,w)),!0===it&&(u=e[0][i],void 0!==u?this.uvs.push(u[0],u[1],u[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",i),this.uvs.push(new r,new r,new r))),!0===rt&&(u=e[1][i],void 0!==u?this.uvs2.push(u[0],u[1],u[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",i),this.uvs2.push(new r,new r,new r))),f=0;f<d;f++)b=tt[f].vertices,c[f].push(b[t.a],b[t.b],b[t.c]);for(f=0;f<a;f++)k=g[f].vertexNormals[i],l[f].push(k.a,k.b,k.c);ut&&this.skinIndices.push(v[t.a],v[t.b],v[t.c]);ft&&this.skinWeights.push(y[t.a],y[t.b],y[t.c])}return this.computeGroups(n),this.verticesNeedUpdate=n.verticesNeedUpdate,this.normalsNeedUpdate=n.normalsNeedUpdate,this.colorsNeedUpdate=n.colorsNeedUpdate,this.uvsNeedUpdate=n.uvsNeedUpdate,this.groupsNeedUpdate=n.groupsNeedUpdate,this}});de=1;k.prototype=Object.assign(Object.create(et.prototype),{constructor:k,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(n){this.index=Array.isArray(n)?new(fr(n)>65535?ti:ni)(n,1):n},addAttribute:function(n,t){return t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===n?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(t)):(this.attributes[n]=t,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(n,new f(arguments[1],arguments[2])))},getAttribute:function(n){return this.attributes[n]},removeAttribute:function(n){return delete this.attributes[n],this},addGroup:function(n,t,i){this.groups.push({start:n,count:t,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(n,t){this.drawRange.start=n;this.drawRange.count=t},applyMatrix:function(n){var i=this.attributes.position,t;return void 0!==i&&(n.applyToBufferAttribute(i),i.needsUpdate=!0),t=this.attributes.normal,void 0!==t&&((new w).getNormalMatrix(n).applyToBufferAttribute(t),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var n=new u;return function(t){return n.makeRotationX(t),this.applyMatrix(n),this}}(),rotateY:function(){var n=new u;return function(t){return n.makeRotationY(t),this.applyMatrix(n),this}}(),rotateZ:function(){var n=new u;return function(t){return n.makeRotationZ(t),this.applyMatrix(n),this}}(),translate:function(){var n=new u;return function(t,i,r){return n.makeTranslation(t,i,r),this.applyMatrix(n),this}}(),scale:function(){var n=new u;return function(t,i,r){return n.makeScale(t,i,r),this.applyMatrix(n),this}}(),lookAt:function(){var n=new h;return function(t){n.lookAt(t);n.updateMatrix();this.applyMatrix(n.matrix)}}(),center:function(){this.computeBoundingBox();var n=this.boundingBox.getCenter().negate();return this.translate(n.x,n.y,n.z),n},setFromObject:function(n){var t=n.geometry,i,r,u;return n.isPoints||n.isLine?(i=new v(3*t.vertices.length,3),r=new v(3*t.colors.length,3),(this.addAttribute("position",i.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length)&&(u=new v(t.lineDistances.length,1),this.addAttribute("lineDistance",u.copyArray(t.lineDistances))),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())):n.isMesh&&t&&t.isGeometry&&this.fromGeometry(t),this},setFromPoints:function(n){for(var t,r=[],i=0,u=n.length;i<u;i++)t=n[i],r.push(t.x,t.y,t.z||0);return this.addAttribute("position",new v(r,3)),this},updateFromObject:function(n){var t=n.geometry,r,i;if(n.isMesh){if(r=t.__directGeometry,!0===t.elementsNeedUpdate&&(r=void 0,t.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(t);r.verticesNeedUpdate=t.verticesNeedUpdate;r.normalsNeedUpdate=t.normalsNeedUpdate;r.colorsNeedUpdate=t.colorsNeedUpdate;r.uvsNeedUpdate=t.uvsNeedUpdate;r.groupsNeedUpdate=t.groupsNeedUpdate;t.verticesNeedUpdate=!1;t.normalsNeedUpdate=!1;t.colorsNeedUpdate=!1;t.uvsNeedUpdate=!1;t.groupsNeedUpdate=!1;t=r}return!0===t.verticesNeedUpdate&&(i=this.attributes.position,void 0!==i&&(i.copyVector3sArray(t.vertices),i.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(i=this.attributes.normal,void 0!==i&&(i.copyVector3sArray(t.normals),i.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(i=this.attributes.color,void 0!==i&&(i.copyColorsArray(t.colors),i.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(i=this.attributes.uv,void 0!==i&&(i.copyVector2sArray(t.uvs),i.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(i=this.attributes.lineDistance,void 0!==i&&(i.copyArray(t.lineDistances),i.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(n.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(n){return n.__directGeometry=(new au).fromGeometry(n),this.fromDirectGeometry(n.__directGeometry)},fromDirectGeometry:function(n){var b=new Float32Array(3*n.vertices.length),u,e,o,s,h,c,t,r,y,p,w;(this.addAttribute("position",new f(b,3).copyVector3sArray(n.vertices)),n.normals.length>0)&&(u=new Float32Array(3*n.normals.length),this.addAttribute("normal",new f(u,3).copyVector3sArray(n.normals)));n.colors.length>0&&(e=new Float32Array(3*n.colors.length),this.addAttribute("color",new f(e,3).copyColorsArray(n.colors)));n.uvs.length>0&&(o=new Float32Array(2*n.uvs.length),this.addAttribute("uv",new f(o,2).copyVector2sArray(n.uvs)));n.uvs2.length>0&&(s=new Float32Array(2*n.uvs2.length),this.addAttribute("uv2",new f(s,2).copyVector2sArray(n.uvs2)));n.indices.length>0&&(h=fr(n.indices)>65535?Uint32Array:Uint16Array,c=new h(3*n.indices.length),this.setIndex(new f(c,1).copyIndicesArray(n.indices)));this.groups=n.groups;for(t in n.morphTargets){for(var l=[],a=n.morphTargets[t],i=0,k=a.length;i<k;i++)r=a[i],y=new v(3*r.length,3),l.push(y.copyVector3sArray(r));this.morphAttributes[t]=l}return n.skinIndices.length>0&&(p=new v(4*n.skinIndices.length,4),this.addAttribute("skinIndex",p.copyVector4sArray(n.skinIndices))),n.skinWeights.length>0&&(w=new v(4*n.skinWeights.length,4),this.addAttribute("skinWeight",w.copyVector4sArray(n.skinWeights))),null!==n.boundingSphere&&(this.boundingSphere=n.boundingSphere.clone()),null!==n.boundingBox&&(this.boundingBox=n.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new wt);var n=this.attributes.position;void 0!==n?this.boundingBox.setFromBufferAttribute(n):this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var i=new wt,n=new t;return function(){var t,u;if(null===this.boundingSphere&&(this.boundingSphere=new st),t=this.attributes.position,t){u=this.boundingSphere.center;i.setFromBufferAttribute(t);i.getCenter(u);for(var f=0,r=0,e=t.count;r<e;r++)n.x=t.getX(r),n.y=t.getY(r),n.z=t.getZ(r),f=Math.max(f,u.distanceToSquared(n));this.boundingSphere.radius=Math.sqrt(f);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var k=this.index,e=this.attributes,b=this.groups,u,l,w,g,n,a;if(e.position){if(u=e.position.array,void 0===e.normal)this.addAttribute("normal",new f(new Float32Array(u.length),3));else for(var d=e.normal.array,n=0,a=d.length;n<a;n++)d[n]=0;var s,h,c,r=e.normal.array,v=new t,o=new t,y=new t,i=new t,p=new t;if(k)for(l=k.array,0===b.length&&this.addGroup(0,l.length),w=0,g=b.length;w<g;++w)for(var nt=b[w],tt=nt.start,it=nt.count,n=tt,a=tt+it;n<a;n+=3)s=3*l[n+0],h=3*l[n+1],c=3*l[n+2],v.fromArray(u,s),o.fromArray(u,h),y.fromArray(u,c),i.subVectors(y,o),p.subVectors(v,o),i.cross(p),r[s]+=i.x,r[s+1]+=i.y,r[s+2]+=i.z,r[h]+=i.x,r[h+1]+=i.y,r[h+2]+=i.z,r[c]+=i.x,r[c+1]+=i.y,r[c+2]+=i.z;else for(n=0,a=u.length;n<a;n+=9)v.fromArray(u,n),o.fromArray(u,n+3),y.fromArray(u,n+6),i.subVectors(y,o),p.subVectors(v,o),i.cross(p),r[n]=i.x,r[n+1]=i.y,r[n+2]=i.z,r[n+3]=i.x,r[n+4]=i.y,r[n+5]=i.z,r[n+6]=i.x,r[n+7]=i.y,r[n+8]=i.z;this.normalizeNormals();e.normal.needsUpdate=!0}},merge:function(n,t){var r,i;if(!n||!n.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",n);void 0===t&&(t=0);r=this.attributes;for(i in r)if(void 0!==n.attributes[i])for(var s=r[i],h=s.array,f=n.attributes[i],e=f.array,c=f.itemSize,u=0,o=c*t;u<e.length;u++,o++)h[o]=e[u];return this},normalizeNormals:function(){var n=new t;return function(){for(var i=this.attributes.normal,t=0,r=i.count;t<r;t++)n.x=i.getX(t),n.y=i.getY(t),n.z=i.getZ(t),n.normalize(),i.setXYZ(t,n.x,n.y,n.z)}}(),toNonIndexed:function(){var i,u;if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new k,t=this.index.array,o=this.attributes;for(i in o){for(var s=o[i],h=s.array,n=s.itemSize,c=new h.constructor(t.length*n),l=0,a=0,r=0,v=t.length;r<v;r++)for(l=t[r]*n,u=0;u<n;u++)c[a++]=h[l++];e.addAttribute(i,new f(c,n))}return e},toJSON:function(){var n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}},r,u,o,t,i,f,s,e;if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),void 0!==this.parameters){r=this.parameters;for(t in r)void 0!==r[t]&&(n[t]=r[t]);return n}n.data={attributes:{}};u=this.index;null!==u&&(f=Array.prototype.slice.call(u.array),n.data.index={type:u.array.constructor.name,array:f});o=this.attributes;for(t in o)i=o[t],f=Array.prototype.slice.call(i.array),n.data.attributes[t]={itemSize:i.itemSize,type:i.array.constructor.name,array:f,normalized:i.normalized};return s=this.groups,s.length>0&&(n.data.groups=JSON.parse(JSON.stringify(s))),e=this.boundingSphere,null!==e&&(n.data.boundingSphere={center:e.center.toArray(),radius:e.radius}),n},clone:function(){return(new k).copy(this)},copy:function(n){var i,t,r,f,e,v,o,s,h,c,u,l,a;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.name=n.name;f=n.index;null!==f&&this.setIndex(f.clone());e=n.attributes;for(i in e)v=e[i],this.addAttribute(i,v.clone());o=n.morphAttributes;for(i in o){for(s=[],h=o[i],t=0,r=h.length;t<r;t++)s.push(h[t].clone());this.morphAttributes[i]=s}for(c=n.groups,t=0,r=c.length;t<r;t++)u=c[t],this.addGroup(u.start,u.count,u.materialIndex);return l=n.boundingBox,null!==l&&(this.boundingBox=l.clone()),a=n.boundingSphere,null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=n.drawRange.start,this.drawRange.count=n.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});er.prototype=Object.create(it.prototype);er.prototype.constructor=er;ii.prototype=Object.create(k.prototype);ii.prototype.constructor=ii;li.prototype=Object.create(it.prototype);li.prototype.constructor=li;ri.prototype=Object.create(k.prototype);ri.prototype.constructor=ri;rt.prototype=Object.create(a.prototype);rt.prototype.constructor=rt;rt.prototype.isMeshBasicMaterial=!0;rt.prototype.copy=function(n){return a.prototype.copy.call(this,n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this};ut.prototype=Object.create(a.prototype);ut.prototype.constructor=ut;ut.prototype.isShaderMaterial=!0;ut.prototype.copy=function(n){return a.prototype.copy.call(this,n),this.fragmentShader=n.fragmentShader,this.vertexShader=n.vertexShader,this.uniforms=p.clone(n.uniforms),this.defines=n.defines,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.lights=n.lights,this.clipping=n.clipping,this.skinning=n.skinning,this.morphTargets=n.morphTargets,this.morphNormals=n.morphNormals,this.extensions=n.extensions,this};ut.prototype.toJSON=function(n){var t=a.prototype.toJSON.call(this,n);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t};Object.assign(vu.prototype,{set:function(n,t){return this.origin.copy(n),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.origin.copy(n.origin),this.direction.copy(n.direction),this},at:function(n,i){return(i||new t).copy(this.direction).multiplyScalar(n).add(this.origin)},lookAt:function(n){return this.direction.copy(n).sub(this.origin).normalize(),this},recast:function(){var n=new t;return function(t){return this.origin.copy(this.at(t,n)),this}}(),closestPointToPoint:function(n,i){var r=i||new t,u;return r.subVectors(n,this.origin),u=r.dot(this.direction),u<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(u).add(this.origin)},distanceToPoint:function(n){return Math.sqrt(this.distanceSqToPoint(n))},distanceSqToPoint:function(){var n=new t;return function(t){var i=n.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):(n.copy(this.direction).multiplyScalar(i).add(this.origin),n.distanceToSquared(t))}}(),distanceSqToSegment:function(){var r=new t,n=new t,i=new t;return function(t,u,f,e){var b;r.copy(t).add(u).multiplyScalar(.5);n.copy(u).sub(t).normalize();i.copy(this.origin).sub(r);var s,o,a,p,h=.5*t.distanceTo(u),c=-this.direction.dot(n),v=i.dot(this.direction),l=-i.dot(n),y=i.lengthSq(),w=Math.abs(1-c*c);return w>0?(s=c*l-v,o=c*v-l,p=h*w,s>=0)?o>=-p?o<=p?(b=1/w,s*=b,o*=b,a=s*(s+c*o+2*v)+o*(c*s+o+2*l)+y):(o=h,s=Math.max(0,-(c*o+v)),a=-s*s+o*(o+2*l)+y):(o=-h,s=Math.max(0,-(c*o+v)),a=-s*s+o*(o+2*l)+y):o<=-p?(s=Math.max(0,-(-c*h+v)),o=s>0?-h:Math.min(Math.max(-h,-l),h),a=-s*s+o*(o+2*l)+y):o<=p?(s=0,o=Math.min(Math.max(-h,-l),h),a=o*(o+2*l)+y):(s=Math.max(0,-(c*h+v)),o=s>0?h:Math.min(Math.max(-h,-l),h),a=-s*s+o*(o+2*l)+y):(o=c>0?-h:h,s=Math.max(0,-(c*o+v)),a=-s*s+o*(o+2*l)+y),f&&f.copy(this.direction).multiplyScalar(s).add(this.origin),e&&e.copy(n).multiplyScalar(o).add(r),a}}(),intersectSphere:function(){var n=new t;return function(t,i){n.subVectors(t.center,this.origin);var r=n.dot(this.direction),f=n.dot(n)-r*r,e=t.radius*t.radius;if(f>e)return null;var o=Math.sqrt(e-f),u=r-o,s=r+o;return u<0&&s<0?null:u<0?this.at(s,i):this.at(u,i)}}(),intersectsSphere:function(n){return this.distanceToPoint(n.center)<=n.radius},distanceToPlane:function(n){var i=n.normal.dot(this.direction),t;return 0===i?0===n.distanceToPoint(this.origin)?0:null:(t=-(this.origin.dot(n.normal)+n.constant)/i,t>=0?t:null)},intersectPlane:function(n,t){var i=this.distanceToPlane(n);return null===i?null:this.at(i,t)},intersectsPlane:function(n){var t=n.distanceToPoint(this.origin);return 0===t||n.normal.dot(this.direction)*t<0},intersectBox:function(n,t){var i,r,f,e,o,s,h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return h>=0?(i=(n.min.x-u.x)*h,r=(n.max.x-u.x)*h):(i=(n.max.x-u.x)*h,r=(n.min.x-u.x)*h),c>=0?(f=(n.min.y-u.y)*c,e=(n.max.y-u.y)*c):(f=(n.max.y-u.y)*c,e=(n.min.y-u.y)*c),i>e||f>r?null:((f>i||i!==i)&&(i=f),(e<r||r!==r)&&(r=e),l>=0?(o=(n.min.z-u.z)*l,s=(n.max.z-u.z)*l):(o=(n.max.z-u.z)*l,s=(n.min.z-u.z)*l),i>s||o>r?null:((o>i||i!==i)&&(i=o),(s<r||r!==r)&&(r=s),r<0?null:this.at(i>=0?i:r,t)))},intersectsBox:function(){var n=new t;return function(t){return null!==this.intersectBox(t,n)}}(),intersectTriangle:function(){var n=new t,r=new t,i=new t,u=new t;return function(t,f,e,o,s){var c,h,l,a,v;if(r.subVectors(f,t),i.subVectors(e,t),u.crossVectors(r,i),h=this.direction.dot(u),h>0){if(o)return null;c=1}else{if(!(h<0))return null;c=-1;h=-h}return(n.subVectors(this.origin,t),l=c*this.direction.dot(i.crossVectors(n,i)),l<0)?null:(a=c*this.direction.dot(r.cross(n)),a<0)?null:l+a>h?null:(v=-c*n.dot(u),v<0?null:this.at(v/h,s))}}(),applyMatrix4:function(n){return this.origin.applyMatrix4(n),this.direction.transformDirection(n),this},equals:function(n){return n.origin.equals(this.origin)&&n.direction.equals(this.direction)}});Object.assign(ai.prototype,{set:function(n,t){return this.start.copy(n),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.start.copy(n.start),this.end.copy(n.end),this},getCenter:function(n){return(n||new t).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(n){return(n||new t).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(n,i){var r=i||new t;return this.delta(r).multiplyScalar(n).add(this.start)},closestPointToPointParameter:function(){var i=new t,n=new t;return function(t,r){i.subVectors(t,this.start);n.subVectors(this.end,this.start);var f=n.dot(n),e=n.dot(i),u=e/f;return r&&(u=o.clamp(u,0,1)),u}}(),closestPointToPoint:function(n,i,r){var u=this.closestPointToPointParameter(n,i),f=r||new t;return this.delta(f).multiplyScalar(u).add(this.start)},applyMatrix4:function(n){return this.start.applyMatrix4(n),this.end.applyMatrix4(n),this},equals:function(n){return n.start.equals(this.start)&&n.end.equals(this.end)}});Object.assign(ft,{normal:function(){var n=new t;return function(i,r,u,f){var e=f||new t,o;return e.subVectors(u,r),n.subVectors(i,r),e.cross(n),o=e.lengthSq(),o>0?e.multiplyScalar(1/Math.sqrt(o)):e.set(0,0,0)}}(),barycoordFromPoint:function(){var n=new t,i=new t,r=new t;return function(u,f,e,o,s){n.subVectors(o,f);i.subVectors(e,f);r.subVectors(u,f);var c=n.dot(n),h=n.dot(i),l=n.dot(r),a=i.dot(i),v=i.dot(r),y=c*a-h*h,p=s||new t;if(0===y)return p.set(-2,-1,-1);var w=1/y,b=(a*l-h*v)*w,k=(c*v-h*l)*w;return p.set(1-b-k,k,b)}}(),containsPoint:function(){var n=new t;return function(t,i,r,u){var f=ft.barycoordFromPoint(t,i,r,u,n);return f.x>=0&&f.y>=0&&f.x+f.y<=1}}()});Object.assign(ft.prototype,{set:function(n,t,i){return this.a.copy(n),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(n,t,i,r){return this.a.copy(n[t]),this.b.copy(n[i]),this.c.copy(n[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(n){return this.a.copy(n.a),this.b.copy(n.b),this.c.copy(n.c),this},area:function(){var n=new t,i=new t;return function(){return n.subVectors(this.c,this.b),i.subVectors(this.a,this.b),.5*n.cross(i).length()}}(),midpoint:function(n){return(n||new t).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(n){return ft.normal(this.a,this.b,this.c,n)},plane:function(n){return(n||new b).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(n,t){return ft.barycoordFromPoint(n,this.a,this.b,this.c,t)},containsPoint:function(n){return ft.containsPoint(n,this.a,this.b,this.c)},closestPointToPoint:function(){var u=new b,n=[new ai,new ai,new ai],i=new t,r=new t;return function(f,e){var s=e||new t,c=1/0,o,h;if(u.setFromCoplanarPoints(this.a,this.b,this.c),u.projectPoint(f,i),!0===this.containsPoint(i))s.copy(i);else for(n[0].set(this.a,this.b),n[1].set(this.b,this.c),n[2].set(this.c,this.a),o=0;o<n.length;o++)n[o].closestPointToPoint(i,!0,r),h=i.distanceToSquared(r),h<c&&(c=h,s.copy(r));return s}}(),equals:function(n){return n.a.equals(this.a)&&n.b.equals(this.b)&&n.c.equals(this.c)}});ui.prototype=Object.assign(Object.create(h.prototype),{constructor:ui,isMesh:!0,setDrawMode:function(n){this.drawMode=n},copy:function(n){return h.prototype.copy.call(this,n),this.drawMode=n.drawMode,void 0!==n.morphTargetInfluences&&(this.morphTargetInfluences=n.morphTargetInfluences.slice()),void 0!==n.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},n.morphTargetDictionary)),this},updateMorphTargets:function(){var n,i,r,f=this.geometry,e,o,u,t;if(f.isBufferGeometry){if(e=f.morphAttributes,o=Object.keys(e),o.length>0&&(u=e[o[0]],void 0!==u))for(this.morphTargetInfluences=[],this.morphTargetDictionary={},n=0,i=u.length;n<i;n++)r=u[n].name||String(n),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}else if(t=f.morphTargets,void 0!==t&&t.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},n=0,i=t.length;n<i;n++)r=t[n].name||String(n),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n},raycast:function(){function y(n,t,i,r,u,f,e){return ft.barycoordFromPoint(n,t,i,r,c),u.multiplyScalar(c.x),f.multiplyScalar(c.y),e.multiplyScalar(c.z),u.add(f).add(e),u.clone()}function p(n,t,i,r,u,f,e,o){if(null===(t.side===kt?r.intersectTriangle(e,f,u,!0,o):r.intersectTriangle(u,f,e,t.side!==vi,o)))return null;a.copy(o);a.applyMatrix4(n.matrixWorld);var s=i.ray.origin.distanceTo(a);return s<i.near||s>i.far?null:{distance:s,point:a.clone(),object:n}}function w(t,r,u,e,c,a,v,w){n.fromBufferAttribute(e,a);i.fromBufferAttribute(e,v);f.fromBufferAttribute(e,w);var b=p(t,t.material,r,u,n,i,f,l);return b&&(c&&(o.fromBufferAttribute(c,a),s.fromBufferAttribute(c,v),h.fromBufferAttribute(c,w),b.uv=y(l,n,i,f,o,s,h)),b.face=new ci(a,v,w,ft.normal(n,i,f)),b.faceIndex=a),b}var b=new u,e=new vu,v=new st,n=new t,i=new t,f=new t,k=new t,d=new t,g=new t,o=new r,s=new r,h=new r,c=new t,l=new t,a=new t;return function(t,r){var u=this.geometry,ht=this.material,gt=this.matrixWorld,a,tt,ri,nt,pt,dt,ui,ot,fi,st,wt,bt;if(void 0!==ht&&(null===u.boundingSphere&&u.computeBoundingSphere(),v.copy(u.boundingSphere),v.applyMatrix4(gt),!1!==t.ray.intersectsSphere(v)&&(b.getInverse(gt),e.copy(t.ray).applyMatrix4(b),null===u.boundingBox||!1!==e.intersectsBox(u.boundingBox))))if(u.isBufferGeometry){var ft,ct,lt,c,at,et=u.index,vt=u.attributes.position,ni=u.attributes.uv;if(null!==et)for(c=0,at=et.count;c<at;c+=3)ft=et.getX(c),ct=et.getX(c+1),lt=et.getX(c+2),(a=w(this,t,e,vt,ni,ft,ct,lt))&&(a.faceIndex=Math.floor(c/3),r.push(a));else if(void 0!==vt)for(c=0,at=vt.count;c<at;c+=3)ft=c,ct=c+1,lt=c+2,(a=w(this,t,e,vt,ni,ft,ct,lt))&&(a.index=ft,r.push(a))}else if(u.isGeometry){var it,rt,ut,yt,ei=Array.isArray(ht),kt=u.vertices,ti=u.faces,ii=u.faceVertexUvs[0];for(ii.length>0&&(yt=ii),tt=0,ri=ti.length;tt<ri;tt++)if(nt=ti[tt],pt=ei?ht[nt.materialIndex]:ht,void 0!==pt){if(it=kt[nt.a],rt=kt[nt.b],ut=kt[nt.c],!0===pt.morphTargets){for(dt=u.morphTargets,ui=this.morphTargetInfluences,n.set(0,0,0),i.set(0,0,0),f.set(0,0,0),ot=0,fi=dt.length;ot<fi;ot++)st=ui[ot],0!==st&&(wt=dt[ot].vertices,n.addScaledVector(k.subVectors(wt[nt.a],it),st),i.addScaledVector(d.subVectors(wt[nt.b],rt),st),f.addScaledVector(g.subVectors(wt[nt.c],ut),st));n.add(it);i.add(rt);f.add(ut);it=n;rt=i;ut=f}(a=p(this,pt,t,e,it,rt,ut,l))&&(yt&&yt[tt]&&(bt=yt[tt],o.copy(bt[0]),s.copy(bt[1]),h.copy(bt[2]),a.uv=y(l,it,rt,ut,o,s,h)),a.face=nt,a.faceIndex=tt,r.push(a))}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});ge=0;bt.prototype=Object.assign(Object.create(tt.prototype),{constructor:bt,isPerspectiveCamera:!0,copy:function(n,t){return tt.prototype.copy.call(this,n,t),this.fov=n.fov,this.zoom=n.zoom,this.near=n.near,this.far=n.far,this.focus=n.focus,this.aspect=n.aspect,this.view=null===n.view?null:Object.assign({},n.view),this.filmGauge=n.filmGauge,this.filmOffset=n.filmOffset,this},setFocalLength:function(n){var t=.5*this.getFilmHeight()/n;this.fov=2*o.RAD2DEG*Math.atan(t);this.updateProjectionMatrix()},getFocalLength:function(){var n=Math.tan(.5*o.DEG2RAD*this.fov);return.5*this.getFilmHeight()/n},getEffectiveFOV:function(){return 2*o.RAD2DEG*Math.atan(Math.tan(.5*o.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(n,t,i,r,u,f){this.aspect=n/t;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=n;this.view.fullHeight=t;this.view.offsetX=i;this.view.offsetY=r;this.view.width=u;this.view.height=f;this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()},updateProjectionMatrix:function(){var f=this.near,t=f*Math.tan(.5*o.DEG2RAD*this.fov)/this.zoom,i=2*t,r=this.aspect*i,u=-.5*r,n=this.view,e,s,h;null!==this.view&&this.view.enabled&&(e=n.fullWidth,s=n.fullHeight,u+=n.offsetX*r/e,t-=n.offsetY*i/s,r*=n.width/e,i*=n.height/s);h=this.filmOffset;0!==h&&(u+=f*h/this.getFilmWidth());this.projectionMatrix.makePerspective(u,u+r,t,t-i,f,this.far)},toJSON:function(n){var t=h.prototype.toJSON.call(this,n);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});hr.prototype=Object.assign(Object.create(bt.prototype),{constructor:hr,isArrayCamera:!0});cr.prototype=Object.assign(Object.create(h.prototype),{constructor:cr,copy:function(n,t){return h.prototype.copy.call(this,n,t),null!==n.background&&(this.background=n.background.clone()),null!==n.fog&&(this.fog=n.fog.clone()),null!==n.overrideMaterial&&(this.overrideMaterial=n.overrideMaterial.clone()),this.autoUpdate=n.autoUpdate,this.matrixAutoUpdate=n.matrixAutoUpdate,this},toJSON:function(n){var t=h.prototype.toJSON.call(this,n);return null!==this.background&&(t.object.background=this.background.toJSON(n)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}});tu={enabled:!1,files:{},add:function(n,t){!1!==this.enabled&&(this.files[n]=t)},get:function(n){if(!1!==this.enabled)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};iu=new kh;Object.assign(ku.prototype,{crossOrigin:"Anonymous",load:function(n,t,i,r){var u,e,f;return(void 0===n&&(n=""),void 0!==this.path&&(n=this.path+n),n=this.manager.resolveURL(n),u=this,e=tu.get(n),void 0!==e)?(u.manager.itemStart(n),setTimeout(function(){t&&t(e);u.manager.itemEnd(n)},0),e):(f=document.createElementNS("http://www.w3.org/1999/xhtml","img"),f.addEventListener("load",function(){tu.add(n,this);t&&t(this);u.manager.itemEnd(n)},!1),f.addEventListener("error",function(t){r&&r(t);u.manager.itemEnd(n);u.manager.itemError(n)},!1),"data:"!==n.substr(0,5)&&void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),u.manager.itemStart(n),f.src=n,f)},setCrossOrigin:function(n){return this.crossOrigin=n,this},setPath:function(n){return this.path=n,this}});Object.assign(du.prototype,{crossOrigin:"Anonymous",load:function(n,t,i,r){var u=new l,f=new ku(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setPath(this.path),f.load(n,function(i){u.image=i;var r=n.search(/\.(jpg|jpeg)$/)>0||0===n.search(/^data\:image\/jpeg/);u.format=r?wi:nt;u.needsUpdate=!0;void 0!==t&&t(u)},i,r),u},setCrossOrigin:function(n){return this.crossOrigin=n,this},setPath:function(n){return this.path=n,this}});n.WebGLRenderTarget=oi;n.WebGLRenderer=bh;n.Scene=cr;n.Mesh=ui;n.DataTexture=lt;n.PlaneGeometry=li;n.ShaderMaterial=ut;n.MeshBasicMaterial=rt;n.Material=a;n.TextureLoader=du;n.OrthographicCamera=hi;n.ClampToEdgeWrapping=d;n.FloatType=dt;n.LinearFilter=ct;n.NearestFilter=g;n.NearestMipMapNearestFilter=wr;n.RepeatWrapping=yi;n.RGBAFormat=nt;n.UnsignedByteType=pi;Object.defineProperty(n,"__esModule",{value:!0})});require=function(){function n(t,i,r){function u(f,o){var h,c,s;if(!i[f]){if(!t[f]){if(h="function"==typeof require&&require,!o&&h)return h(f,!0);if(e)return e(f,!0);c=new Error("Cannot find module '"+f+"'");throw c.code="MODULE_NOT_FOUND",c;}s=i[f]={exports:{}};t[f][0].call(s.exports,function(n){return u(t[f][1][n]||n)},s,s.exports,n,t,i,r)}return i[f].exports}for(var e="function"==typeof require&&require,f=0;f<r.length;f++)u(r[f]);return u}return n}()({1:[function(n){(function(t){t.THREE=n("three");THREE={ClampToEdgeWrapping:THREE.ClampToEdgeWrapping,DataTexture:THREE.DataTexture,FloatType:THREE.FloatType,LinearFilter:THREE.LinearFilter,Material:THREE.Material,Mesh:THREE.Mesh,MeshBasicMaterial:THREE.MeshBasicMaterial,NearestFilter:THREE.NearestFilter,NearestMipMapNearestFilter:THREE.NearestMipMapNearestFilter,OrthographicCamera:THREE.OrthographicCamera,PlaneGeometry:THREE.PlaneGeometry,RepeatWrapping:THREE.RepeatWrapping,RGBAFormat:THREE.RGBAFormat,Scene:THREE.Scene,ShaderMaterial:THREE.ShaderMaterial,TextureLoader:THREE.TextureLoader,UnsignedByteType:THREE.UnsignedByteType,WebGLRenderer:THREE.WebGLRenderer,WebGLRenderTarget:THREE.WebGLRenderTarget}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{three:"three"}],three:[function(n,t){t.exports=window.THREE},{}]},{},[1]);var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var n=document.createElement("canvas");return!(!window.WebGLRenderingContext||!n.getContext("webgl")&&!n.getContext("experimental-webgl"))}catch(n){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var n=document.createElement("div");return n.id="webgl-error-message",n.style.fontFamily="monospace",n.style.fontSize="13px",n.style.fontWeight="normal",n.style.textAlign="center",n.style.background="#fff",n.style.color="#000",n.style.padding="1.5em",n.style.width="400px",n.style.margin="5em auto 0",this.webgl||(n.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL<\/a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here<\/a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL<\/a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here<\/a>.'),n},addGetWebGLMessage:function(n){var i,r,t;n=n||{};i=void 0!==n.parent?n.parent:document.body;r=void 0!==n.id?n.id:"oldie";t=Detector.getWebGLErrorMessage();t.id=r;i.appendChild(t)}};"object"==typeof module&&(module.exports=Detector),function(n,t){"use strict";function o(){if(n.postMessage&&!n.importScripts){var t=!0,i=n.onmessage;return n.onmessage=function(){t=!1},n.postMessage("","*"),n.onmessage=i,t}}function e(){return n.navigator&&/Trident/.test(n.navigator.userAgent)}var f,r;if(!e()&&(n.msSetImmediate||n.setImmediate))return void(n.setImmediate||(n.setImmediate=n.msSetImmediate,n.clearImmediate=n.msClearImmediate));var u=n.document,s=Array.prototype.slice,h=Object.prototype.toString,i={};i.polifill={};i.nextId=1;i.tasks={};i.lock=!1;i.run=function(t){if(i.lock)n.setTimeout(i.wrap(i.run,t),0);else{var r=i.tasks[t];if(r){i.lock=!0;try{r()}finally{i.clear(t);i.lock=!1}}}};i.wrap=function(n){var i=s.call(arguments,1);return function(){n.apply(t,i)}};i.create=function(n){return i.tasks[i.nextId]=i.wrap.apply(t,n),i.nextId++};i.clear=function(n){delete i.tasks[n]};i.polifill.messageChannel=function(){var t=new n.MessageChannel;return t.port1.onmessage=function(n){i.run(Number(n.data))},function(){var n=i.create(arguments);return t.port2.postMessage(n),n}};i.polifill.nextTick=function(){return function(){var t=i.create(arguments);return n.process.nextTick(i.wrap(i.run,t)),t}};i.polifill.postMessage=function(){var t="setImmediate$"+Math.random()+"$",r=function(r){r.source===n&&"string"==typeof r.data&&0===r.data.indexOf(t)&&i.run(Number(r.data.slice(t.length)))};return n.addEventListener?n.addEventListener("message",r,!1):n.attachEvent("onmessage",r),function(){var r=i.create(arguments);return n.postMessage(t+r,"*"),r}};i.polifill.readyStateChange=function(){var n=u.documentElement;return function(){var r=i.create(arguments),t=u.createElement("script");return t.onreadystatechange=function(){i.run(r);t.onreadystatechange=null;n.removeChild(t);t=null},n.appendChild(t),r}};i.polifill.setTimeout=function(){return function(){var t=i.create(arguments);return n.setTimeout(i.wrap(i.run,t),0),t}};f=e()?"setTimeout":"[object process]"===h.call(n.process)?"nextTick":o()?"postMessage":n.MessageChannel?"messageChannel":u&&"onreadystatechange"in u.createElement("script")?"readyStateChange":"setTimeout";r=Object.getPrototypeOf&&Object.getPrototypeOf(n);r=r&&r.setTimeout?r:n;r.setImmediate=i.polifill[f]();r.setImmediate.usePolifill=f;r.msSetImmediate=r.setImmediate;r.clearImmediate=i.clear;r.msClearImmediate=i.clear}(function(){return this||(0,eval)("this")}()),function(){"use strict";function t(){}function u(n,t){for(var i=n.length;i--;)if(n[i].listener===t)return i;return-1}function i(n){return function(){return this[n].apply(this,arguments)}}var n=t.prototype,r=this,f=r.EventEmitter;n.getListeners=function(n){var r,t,i=this._getEvents();if(n instanceof RegExp){r={};for(t in i)i.hasOwnProperty(t)&&n.test(t)&&(r[t]=i[t])}else r=i[n]||(i[n]=[]);return r};n.flattenListeners=function(n){for(var i=[],t=0;t<n.length;t+=1)i.push(n[t].listener);return i};n.getListenersAsObject=function(n){var t,i=this.getListeners(n);return i instanceof Array&&(t={},t[n]=i),t||i};n.addListener=function(n,t){var i,r=this.getListenersAsObject(n),f="object"==typeof t;for(i in r)r.hasOwnProperty(i)&&-1===u(r[i],t)&&r[i].push(f?t:{listener:t,once:!1});return this};n.on=i("addListener");n.addOnceListener=function(n,t){return this.addListener(n,{listener:t,once:!0})};n.once=i("addOnceListener");n.defineEvent=function(n){return this.getListeners(n),this};n.defineEvents=function(n){for(var t=0;t<n.length;t+=1)this.defineEvent(n[t]);return this};n.removeListener=function(n,t){var f,i,r=this.getListenersAsObject(n);for(i in r)r.hasOwnProperty(i)&&-1!==(f=u(r[i],t))&&r[i].splice(f,1);return this};n.off=i("removeListener");n.addListeners=function(n,t){return this.manipulateListeners(!1,n,t)};n.removeListeners=function(n,t){return this.manipulateListeners(!0,n,t)};n.manipulateListeners=function(n,t,i){var r,u,f=n?this.removeListener:this.addListener,e=n?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=i.length;r--;)f.call(this,t,i[r]);else for(r in t)t.hasOwnProperty(r)&&(u=t[r])&&("function"==typeof u?f.call(this,r,u):e.call(this,r,u));return this};n.removeEvent=function(n){var t,r=typeof n,i=this._getEvents();if("string"===r)delete i[n];else if(n instanceof RegExp)for(t in i)i.hasOwnProperty(t)&&n.test(t)&&delete i[t];else delete this._events;return this};n.removeAllListeners=i("removeEvent");n.emitEvent=function(n,t){var r,i,u,f,e=this.getListenersAsObject(n);for(f in e)if(e.hasOwnProperty(f))for(r=e[f].slice(0),u=r.length;u--;)i=r[u],!0===i.once&&this.removeListener(n,i.listener),i.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(n,i.listener);return this};n.trigger=i("emitEvent");n.emit=function(n){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(n,t)};n.setOnceReturnValue=function(n){return this._onceReturnValue=n,this};n._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue};n._getEvents=function(){return this._events||(this._events={})};t.noConflict=function(){return r.EventEmitter=f,t};"function"==typeof define&&define.amd?define(function(){return t}):"object"==typeof module&&module.exports?module.exports=t:r.EventEmitter=t}.call(this);GrowingPacker=function(){};GrowingPacker.prototype={fit:function(n){var i,u,t,r=n.length,f=r>0?n[0].w:0,e=r>0?n[0].h:0;for(this.root={x:0,y:0,w:f,h:e},i=0;i<r;i++)t=n[i],t.fit=(u=this.findNode(this.root,t.w,t.h))?this.splitNode(u,t.w,t.h):this.growNode(t.w,t.h)},findNode:function(n,t,i){return n.used?this.findNode(n.right,t,i)||this.findNode(n.down,t,i):t<=n.w&&i<=n.h?n:null},splitNode:function(n,t,i){return n.used=!0,n.down={x:n.x,y:n.y+i,w:n.w,h:n.h-i},n.right={x:n.x+t,y:n.y,w:n.w-t,h:i},n},growNode:function(n,t){var i=n<=this.root.w,r=t<=this.root.h,u=r&&this.root.h>=this.root.w+n,f=i&&this.root.w>=this.root.h+t;return u?this.growRight(n,t):f?this.growDown(n,t):r?this.growRight(n,t):i?this.growDown(n,t):null},growRight:function(n,t){this.root={used:!0,x:0,y:0,w:this.root.w+n,h:this.root.h,down:this.root,right:{x:this.root.w,y:0,w:n,h:this.root.h}};var i=this.findNode(this.root,n,t);return i?this.splitNode(i,n,t):null},growDown:function(n,t){this.root={used:!0,x:0,y:0,w:this.root.w,h:this.root.h+t,down:{x:0,y:this.root.h,w:this.root.w,h:t},right:this.root};var i=this.findNode(this.root,n,t);return i?this.splitNode(i,n,t):null}},function(){function u(t){var i=(new Date).getTime(),u=Math.max(0,16-(i-r)),f=n.setTimeout(function(){t(i+u)},u);return r=i+u,f}for(var n=this,r=0,i=["ms","moz","webkit","o"],t=0;t<i.length&&!n.requestAnimationFrame;++t)n.requestAnimationFrame=n[i[t]+"RequestAnimationFrame"],n.cancelAnimationFrame=n[i[t]+"CancelAnimationFrame"]||n[i[t]+"CancelRequestAnimationFrame"];n.requestAnimationFrame||(n.requestAnimationFrame=u);n.cancelAnimationFrame||(n.cancelAnimationFrame=function(n){clearTimeout(n)});"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=n.requestAnimationFrame),exports.requestAnimationFrame=n.requestAnimationFrame):n.requestAnimationFrame=n.requestAnimationFrame;"function"==typeof define&&define.amd&&define("requestAnimationFrame",[],function(){return n.requestAnimationFrame})}(),function(n,t,i,r,u){var e=this,f=e.Blotter=n=function(){r.webgl||f.Messaging.throwError("Blotter",!1,"device does not support webgl");this._texts=[];this._textEventBindings={};this._scopes={};this._scopeEventBindings={};this._renderer=new f.Renderer;this._startTime=0;this._lastDrawTime=0;this.init.apply(this,arguments)};f.prototype=function(){function i(){var n=Date.now();this._material.uniforms.uTimeDelta.value=(n-(this._lastDrawTime||n))/1e3;this._material.uniforms.uGlobalTime.value=(n-this._startTime)/1e3;this._lastDrawTime=n}function r(){i.call(this);t.each(this._scopes,t.bind(function(n){n.playing&&n.render();this.trigger("render")},this))}function u(n){if(this.mappingMaterial){var t=this._material.uniforms[n].value;this.mappingMaterial.uniformInterface[n].value=t}}function e(n,t){if(this.mappingMaterial){var i=this._scopes[n],r=i.material.uniforms[t].value;this.mappingMaterial.textUniformInterface[n][t].value=r}}function n(){var n,i,r;n=t.bind(function(){return t.bind(function(n){f.MappingBuilder.build(this._texts,t.bind(function(t){this._mapping=t;this._mapping.ratio=this.ratio;n()},this))},this)},this);i=t.bind(function(){return t.bind(function(n){f.MappingMaterialBuilder.build(this._mapping,this._material,t.bind(function(t){this.mappingMaterial=t;n()},this))},this)},this);r=[n(),i()];t(r).reduceRight(t.wrap,t.bind(function(){this._renderer.stop();t.each(this._scopes,t.bind(function(n){n.mappingMaterial=this.mappingMaterial;n.needsUpdate=!0},this));this._renderer.material=this.mappingMaterial.shaderMaterial;this._renderer.width=this._mapping.width;this._renderer.height=this._mapping.height;this.autostart&&this.start();this.trigger(this.lastUpdated?"update":"ready");this.lastUpdated=Date.now()},this))()}return{constructor:f,get needsUpdate(){},set needsUpdate(t){!0===t&&n.call(this)},get material(){return this._material},set material(n){this.setMaterial(n)},get texts(){return this._texts},set texts(n){this.removeTexts(this._texts);this.addTexts(n)},get imageData(){return this._renderer.imageData},init:function(n,i){i=i||{};t.defaults(this,i,{ratio:f.CanvasUtils.pixelRatio,autobuild:!0,autostart:!0,autoplay:!0});this.setMaterial(n);this.addTexts(i.texts);this._renderer.on("render",t.bind(r,this));this.autobuild&&(this.needsUpdate=!0);this.autostart&&this.start()},start:function(){this.autostart=!0;this._startTime=Date.now();this._renderer.start()},stop:function(){this.autostart=!1;this._renderer.stop()},teardown:function(){this._renderer.teardown()},setMaterial:function(i){f.Messaging.ensureInstanceOf(i,f.Material,"Blotter.Material","Blotter","setMaterial");this._material=i;this._materialEventBinding&&this._materialEventBinding.unsetEventCallbacks();this._materialEventBinding=new f.ModelEventBinding(i,{update:t.bind(function(){n.call(this)},this),updateUniform:t.bind(function(n){u.call(this,n)},this)});i.on("update",this._materialEventBinding.eventCallbacks.update);i.on("update:uniform",this._materialEventBinding.eventCallbacks.updateUniform)},addText:function(n){this.addTexts(n)},addTexts:function(i){var r=f.TextUtils.filterTexts(i),u=t.difference(r,this._texts);t.each(u,t.bind(function(i){this._texts.push(i);this._textEventBindings[i.id]=new f.ModelEventBinding(i,{update:t.bind(function(){n.call(this)},this)});i.on("update",this._textEventBindings[i.id].eventCallbacks.update);this._scopes[i.id]=new f.RenderScope(i,this);this._scopeEventBindings[i.id]=new f.ModelEventBinding(this._scopes[i.id],{updateUniform:t.bind(function(n){e.call(this,i.id,n)},this)});this._scopes[i.id].on("update:uniform",this._scopeEventBindings[i.id].eventCallbacks.updateUniform)},this))},removeText:function(n){this.removeTexts(n)},removeTexts:function(n){var i=f.TextUtils.filterTexts(n),r=t.intersection(this._texts,i);t.each(r,t.bind(function(n){this._texts=t.without(this._texts,n);this._textEventBindings[n.id].unsetEventCallbacks();this._scopeEventBindings[n.id].unsetEventCallbacks();delete this._textEventBindings[n.id];delete this._scopeEventBindings[n.id];delete this._scopes[n.id]},this))},forText:function(n){return f.Messaging.ensureInstanceOf(n,f.Text,"Blotter.Text","Blotter","forText"),this._scopes[n.id]?this._scopes[n.id]:void f.Messaging.logError("Blotter","forText","Blotter.Text object not found in blotter")},boundsForText:function(n){return f.Messaging.ensureInstanceOf(n,f.Text,"Blotter.Text","Blotter","boundsForText"),this._scopes[n.id]?this._mapping?this.mappingMaterial.boundsForText(n):void 0:void f.Messaging.logError("Blotter","boundsForText","Blotter.Text object not found in blotter")}}}();t.extend(f.prototype,u.prototype);f.Version="v0.1.0";f.webglRenderer=f.webglRenderer||new i.WebGLRenderer({antialias:!0,alpha:!0,premultipliedAlpha:!1});f.Assets=f.Assets||{};f.Assets.Shaders=f.Assets.Shaders||{}}(this.Blotter,this._,this.THREE,this.Detector,this.EventEmitter),function(n){n.Math={generateUUID:function(){for(var n=[],t=0;t<256;t++)n[t]=(t<16?"0":"")+t.toString(16).toUpperCase();return function(){var t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,r=4294967295*Math.random()|0,u=4294967295*Math.random()|0;return n[255&t]+n[t>>8&255]+n[t>>16&255]+n[t>>24&255]+"-"+n[255&i]+n[i>>8&255]+"-"+n[i>>16&15|64]+n[i>>24&255]+"-"+n[63&r|128]+n[r>>8&255]+"-"+n[r>>16&255]+n[r>>24&255]+n[255&u]+n[u>>8&255]+n[u>>16&255]+n[u>>24&255]}}()}}(this.Blotter),function(n){n.Messaging=function(){function n(n,t,i){return n+(t?"#"+t:"")+": "+i}return{ensureInstanceOf:function(n,t,i,r,u){if(!(n instanceof t))return void this.logError(r,u,"argument must be instanceof "+i)},logError:function(t,i,r){var u=n(t,i,r);console.error(u)},logWarning:function(t,i,r){var u=n(t,i,r);console.warn(u)},throwError:function(t,i,r){throw n(t,i,r);}}}()}(this.Blotter),function(n,t){n._extendWithGettersSetters=function(n){return t.each(Array.prototype.slice.call(arguments,1),function(t){if(t)for(var i in t)n[i]&&Object.getOwnPropertyDescriptor(n,i)&&Object.getOwnPropertyDescriptor(n,i).set?Object.getOwnPropertyDescriptor(n,i).set(t[i]):n[i]=t[i]}),n}}(this.Blotter,this._),function(n){n.VendorPrefixes=["ms","moz","webkit","o"]}(this.Blotter),function(n,t){n.ModelEventBinding=function(n,t){this.model=n;this.eventCallbacks=t||{}};n.ModelEventBinding.prototype={constructor:n.ModelEventBinding,unsetEventCallbacks:function(){t.each(this.eventCallbacks,t.bind(function(n,t){this.model.off(t,n)},this))}}}(this.Blotter,this._),function(n){n.CanvasUtils={canvas:function(n,t,i){i=i||{};var r=document.createElement("canvas");return r.className=i.class,r.innerHTML=i.html,r.width=n,r.height=t,r},hiDpiCanvas:function(n,t,i,r){i=i||this.pixelRatio;r=r||{};var u=document.createElement("canvas");return u.className=r.class,u.innerHTML=r.html,this.updateCanvasSize(u,n,t,i),u},updateCanvasSize:function(n,t,i,r){r=r||1;n.width=t*r;n.height=i*r;n.style.width=t+"px";n.style.height=i+"px";n.getContext("2d").setTransform(r,0,0,r,0,0)},pixelRatio:function(){for(var r=document.createElement("canvas").getContext("2d"),u=window.devicePixelRatio||1,t=r.backingStorePixelRatio,i=0;i<n.VendorPrefixes.length&&!t;++i)t=r[n.VendorPrefixes[i]+"BackingStorePixelRatio"];return t=t||1,u/t}(),mousePosition:function(n,t){var i=n.getBoundingClientRect();return{x:t.clientX-i.left,y:t.clientY-i.top}},normalizedMousePosition:function(n,t){var i=n.getBoundingClientRect(),r=this.mousePosition(n,t);return{x:r.x/i.width,y:r.y/i.height}}}}(this.Blotter),function(n,t){n.PropertyDefaults={family:"sans-serif",size:12,leading:1.5,fill:"#000",style:"normal",weight:400,padding:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0};n.TextUtils={Properties:t.keys(n.PropertyDefaults),ensurePropertyValues:function(i){return t.defaults(i||{},n.PropertyDefaults)},filterTexts:function(i){return i=i instanceof n.Text?[i]:t.toArray(i),t.filter(i,t.bind(function(t){var i=t instanceof n.Text;return i||n.Messaging.logWarning("Blotter.TextUtils","filterTexts","object must be instance of Blotter.Text"),i},this))},stringifiedPadding:function(n){var t=n||this.ensurePropertyValues();return(n.paddingTop||t.padding)+"px "+(t.paddingRight||t.padding)+"px "+(t.paddingBottom||t.padding)+"px "+(t.paddingLeft||t.padding)+"px"},sizeForText:function(n,t){var r,i=document.createElement("span");return t=this.ensurePropertyValues(t),i.innerHTML=n,i.style.display="inline-block",i.style.fontFamily=t.family,i.style.fontSize=t.size+"px",i.style.fontWeight=t.weight,i.style.fontStyle=t.style,i.style.lineHeight=t.leading,i.style.maxWidth="none",i.style.padding=this.stringifiedPadding(t),i.style.position="absolute",i.style.width="auto",i.style.visibility="hidden",document.body.appendChild(i),r={w:i.offsetWidth,h:i.offsetHeight},document.body.removeChild(i),r}}}(this.Blotter,this._),function(n,t){n.UniformUtils={UniformTypes:["1f","2f","3f","4f"],defaultUniforms:{uResolution:{type:"2f",value:[0,0]},uGlobalTime:{type:"1f",value:0},uTimeDelta:{type:"1f",value:0},uBlendColor:{type:"4f",value:[1,1,1,1]},uPixelRatio:{type:"1f",value:n.CanvasUtils.pixelRatio}},validValueForUniformType:function(n,i){var r=!1,u=function(n){return!isNaN(n)};switch(n){case"1f":r=!isNaN(i)&&[i].every(u);break;case"2f":r=t.isArray(i)&&2==i.length&&i.every(u);break;case"3f":r=t.isArray(i)&&3==i.length&&i.every(u);break;case"4f":r=t.isArray(i)&&4==i.length&&i.every(u)}return r},glslDataTypeForUniformType:function(n){var t;switch(n){case"1f":t="float";break;case"2f":t="vec2";break;case"3f":t="vec3";break;case"4f":t="vec4"}return t},fullSwizzleStringForUniformType:function(n){var t;switch(n){case"1f":t="x";break;case"2f":t="xy";break;case"3f":t="xyz";break;case"4f":t="xyzw"}return t},extractValidUniforms:function(i){return i=i||{},t.reduce(i,function(i,r,u){return-1==n.UniformUtils.UniformTypes.indexOf(r.type)?(n.Messaging.logError("Blotter.UniformUtils","extractValidUniforms","uniforms must be one of type: "+n.UniformUtils.UniformTypes.join(", ")),i):n.UniformUtils.validValueForUniformType(r.type,r.value)?(i[u]=t.pick(r,"type","value"),i):(n.Messaging.logError("Blotter.UniformUtils","extractValidUniforms","uniform value for "+u+" is incorrect for type: "+r.type),i)},{})},ensureHasRequiredDefaultUniforms:function(t,i,r){if(!n.UniformUtils.hasRequiredDefaultUniforms(t))return void this.logError(i,r,"uniforms object is missing required default uniforms defined in Blotter.UniformUtils.defaultUniforms")},hasRequiredDefaultUniforms:function(i){return!t.difference(t.allKeys(n.UniformUtils.defaultUniforms),t.allKeys(i)).length}}}(this.Blotter,this._),function(n,t,i,r){n.Text=function(t,i){this.id=n.Math.generateUUID();this.value=t;this.properties=i};n.Text.prototype={constructor:n.Text,get needsUpdate(){},set needsUpdate(n){!0===n&&this.trigger("update")},get properties(){return this._properties},set properties(t){this._properties=n.TextUtils.ensurePropertyValues(t)}};n._extendWithGettersSetters(n.Text.prototype,r.prototype)}(this.Blotter,this._,this.THREE,this.EventEmitter),function(n){n.Assets.Shaders.Blending="//\n// Author : Bradley Griffith\n// License : Distributed under the MIT License.\n//\n\n// Returns the resulting blend color by blending a top color over a base color\nhighp vec4 normalBlend(highp vec4 topColor, highp vec4 baseColor) {\n  highp vec4 blend = vec4(0.0);\n  // HACK\n  // Cant divide by 0 (see the 'else' alpha) and after a lot of attempts\n  // this simply seems like the only solution Im going to be able to come up with to get alpha back.\n  if (baseColor.a == 1.0) {\n    baseColor.a = 0.9999999;\n  };\n  if (topColor.a >= 1.0) {\n    blend.a = topColor.a;\n    blend.r = topColor.r;\n    blend.g = topColor.g;\n    blend.b = topColor.b;\n  } else if (topColor.a == 0.0) {\n    blend.a = baseColor.a;\n    blend.r = baseColor.r;\n    blend.g = baseColor.g;\n    blend.b = baseColor.b;\n  } else {\n    blend.a = 1.0 - (1.0 - topColor.a) * (1.0 - baseColor.a); // alpha\n    blend.r = (topColor.r * topColor.a / blend.a) + (baseColor.r * baseColor.a * (1.0 - topColor.a) / blend.a);\n    blend.g = (topColor.g * topColor.a / blend.a) + (baseColor.g * baseColor.a * (1.0 - topColor.a) / blend.a);\n    blend.b = (topColor.b * topColor.a / blend.a) + (baseColor.b * baseColor.a * (1.0 - topColor.a) / blend.a);\n  }\n  return blend;\n}\n// Returns a vec4 representing the original top color that would have been needed to blend\n//  against a passed in base color in order to result in the passed in blend color.\nhighp vec4 normalUnblend(highp vec4 blendColor, highp vec4 baseColor) {\n  highp vec4 unblend = vec4(0.0);\n  // HACKY\n  // Cant divide by 0 (see alpha) and after a lot of attempts\n  // this simply seems like the only solution Im going to be able to come up with to get alpha back.\n  if (baseColor.a == 1.0) {\n    baseColor.a = 0.9999999;\n  }\n  unblend.a = 1.0 - ((1.0 - blendColor.a) / (1.0 - baseColor.a));\n  // Round to two decimal places\n  unblend.a = (sign(100.0 * unblend.a) * floor(abs(100.0 * unblend.a) + 0.5)) / 100.0;\n  if (unblend.a >= 1.0) {\n    unblend.r = blendColor.r;\n    unblend.g = blendColor.g;\n    unblend.b = blendColor.b;\n  } else if (unblend.a == 0.0) {\n    unblend.r = baseColor.r;\n    unblend.g = baseColor.g;\n    unblend.b = baseColor.b;\n  } else {\n    unblend.r = (blendColor.r - (baseColor.r * baseColor.a * (1.0 - unblend.a) / blendColor.a)) / (unblend.a / blendColor.a);\n    unblend.g = (blendColor.g - (baseColor.g * baseColor.a * (1.0 - unblend.a) / blendColor.a)) / (unblend.a / blendColor.a);\n    unblend.b = (blendColor.b - (baseColor.b * baseColor.a * (1.0 - unblend.a) / blendColor.a)) / (unblend.a / blendColor.a);\n  }\n  return unblend;\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.Inf="//\n// Author : Bradley Griffith\n// License : Distributed under the MIT License.\n//\nbool isinf(float val) {\n    return (val != 0.0 && val * 2.0 == val) ? true : false;\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.LineMath=[n.Assets.Shaders.Inf,"","//","// Author : Bradley Griffith","// License : Distributed under the MIT License.","//","","// Returns the slope of a line given the degrees of the angle on which that line is rotated;","float slopeForDegrees(float deg) {","    // Ensure degrees stay withing 0.0 - 360.0","    deg = mod(deg, 360.0);","    float radians = deg * (PI / 180.0);","    return tan(radians);","}","// Given x, a slope, and another point, find y for x.","float yForXOnSlope(float x, float slope, vec2 p2) {","    return -1.0 * ((slope * (p2.x - x)) - p2.y);","}","// Given y, a slope, and another point, find x for y.","float xForYOnSlope(float y, float slope, vec2 p2) {","    return ((y - p2.y) + (slope * p2.x)) / slope;","}","// Returns slope adjusted for screen ratio.","float normalizedSlope(float slope, vec2 resolution) {","    vec2 p = vec2(1.0) / resolution;","    return ((slope * 100.0) / p.x) / (100.0 / p.x);","}","// Returns offsets (+/-) for any coordinate at distance given slope.","//   Note: This function does not normalize distance.","//   Note: This function does not adjust slope for screen ratio.","vec2 offsetsForCoordAtDistanceOnSlope(float d, float slope) {","    return vec2(","        (d * cos(atan(slope))),","        (d * sin(atan(slope)))","    );","}","// Returns a boolean designating whether or not an infinite line intersects with an infinite line, and sets an `out` variable for the intersection point if it is found.","//   Note: This function does not adjust slope for screen ratio.","bool lineLineIntersection (out vec2 intersect, in vec2 p1, in float m1, in vec2 p2, in float m2) {","    // See: http://gamedev.stackexchange.com/questions/44720/line-intersection-from-parametric-equation","    //      http://stackoverflow.com/questions/41687083/formula-to-determine-if-an-infinite-line-and-a-line-segment-intersect/41687904#41687904","    bool isIntersecting = false;","    float dx = 1.0;","    float dy = m1;","    float dxx = 1.0;","    float dyy = m2;","    float denominator = ((dxx * dy) - (dyy * dx));","    if (denominator == 0.0) {","        // Lines are parallel","        return isIntersecting;","    }","    if (isinf(dy)) {","        float y = yForXOnSlope(p1.x, m2, p2);","        isIntersecting = true;","        intersect = vec2(p1.x, y);","        return isIntersecting;","    }","    if (isinf(dyy)) {","        float y = yForXOnSlope(p2.x, m1, p1);","        isIntersecting = true;","        intersect = vec2(p2.x, y);","        return isIntersecting;","    }","    float u = ((dx * (p2.y - p1.y)) + (dy * (p1.x - p2.x))) / denominator;","    isIntersecting = true;","    intersect = p2 + (u * vec2(dxx, dyy));","    return isIntersecting;","}","// Returns a boolean designating whether or not an infinite line intersects with a line segment, and sets an `out` variable for the intersection point if it is found.","//   Note: This function does not adjust slope for screen ratio.","bool lineLineSegmentIntersection (out vec2 intersect, in vec2 point, in float m, in vec2 pA, in vec2 pB) {","    // See: http://gamedev.stackexchange.com/questions/44720/line-intersection-from-parametric-equation","    //      http://stackoverflow.com/questions/41687083/formula-to-determine-if-an-infinite-line-and-a-line-segment-intersect/41687904#41687904","    bool isIntersecting = false;","    float dx = 1.0;","    float dy = m;","    float dxx = pB.x - pA.x;","    float dyy = pB.y - pA.y;","    float denominator = ((dxx * dy) - (dyy * dx));","    if (denominator == 0.0 || (isinf(dyy / dxx) && isinf(dy))) {","        // Lines are parallel","        return isIntersecting;","    }","    if (isinf(dy)) {","        float m2 = dyy / dxx;","        float y = yForXOnSlope(point.x, m2, pB);","        isIntersecting = true;","        intersect = vec2(point.x, y);","        return isIntersecting;","    }","    float u = ((dx * (pA.y - point.y)) + (dy * (point.x - pA.x))) / denominator;","    if (u >= 0.0 && u <= 1.0) {","        // Intersection occured on line segment","        isIntersecting = true;","        intersect = pA + (u * vec2(dxx, dyy));","    }","    return isIntersecting;","}","// Dev Note: Terrible code. Needs refactor. Just trying to find ","//   which two edges of the rect the intersections occur at.","void intersectsOnRectForLine(out vec2 iA, out vec2 iB, in vec2 rMinXY, in vec2 rMaxXY, in vec2 point, in float slope) {","    bool firstIntersectFound = false;","    vec2 intersectLeft = vec2(0.0);","    vec2 intersectTop = vec2(0.0);","    vec2 intersectRight = vec2(0.0);","    vec2 intersectBottom = vec2(0.0);","    bool intersectsLeft = lineLineSegmentIntersection(intersectLeft, point, slope, rMinXY, vec2(rMinXY.x, rMaxXY.y));","    bool intersectsTop = lineLineSegmentIntersection(intersectTop, point, slope, vec2(rMinXY.x, rMaxXY.y), rMaxXY);","    bool intersectsRight = lineLineSegmentIntersection(intersectRight, point, slope, rMaxXY, vec2(rMaxXY.x, rMinXY.y));","    bool intersectsBottom = lineLineSegmentIntersection(intersectBottom, point, slope, rMinXY, vec2(rMaxXY.x, rMinXY.y));","    if (intersectsLeft) {","        if (firstIntersectFound) {","            iB = intersectLeft;","        }","        else {","            iA = intersectLeft;","            firstIntersectFound = true;","        }","    }","    if (intersectsTop) {","        if (firstIntersectFound) {","            iB = intersectTop;","        }","        else {","            iA = intersectTop;","            firstIntersectFound = true;","        }","    }","    if (intersectsRight) {","        if (firstIntersectFound) {","            iB = intersectRight;","        }","        else {","            iA = intersectRight;","            firstIntersectFound = true;","        }","    }","    if (intersectsBottom) {","        if (firstIntersectFound) {","            iB = intersectBottom;","        }","        else {","            iA = intersectBottom;","        }","    }","}"].join("\n")}(this.Blotter,this._),function(n){n.Assets.Shaders.BlinnPhongSpecular="//\n// Author : Reza Ali\n// License : Distributed under the MIT License.\n//\n\nfloat blinnPhongSpecular( vec3 lightDirection, vec3 viewDirection, vec3 surfaceNormal, float shininess ) {\n\n  //Calculate Blinn-Phong power\n  vec3 H = normalize(viewDirection + lightDirection);\n  return pow(max(0.0, dot(surfaceNormal, H)), shininess);\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.Easing="//\n// Author : Reza Ali\n// License : Distributed under the MIT License.\n//\n\nfloat linear( float t, float b, float c, float d )\n{\n    return t * ( c / d ) + b;\n}\n\nfloat linear( float t )\n{\n    return t;\n}\n\nfloat inQuad( float t, float b, float c, float d )\n{\n    return c * ( t /= d ) * t + b;\n}\n\nfloat inQuad( float t )\n{\n    return t * t;\n}\n\nfloat outQuad( float t, float b, float c, float d )\n{\n    return -c * ( t /= d ) * ( t - 2.0 ) + b;\n}\n\nfloat outQuad( float t )\n{\n    return - ( t -= 1.0 ) * t + 1.0;\n}\n\nfloat inOutQuad( float t, float b, float c, float d )\n{\n    if( ( t /= d / 2.0 ) < 1.0 ) {\n      return c / 2.0 * t * t + b;\n    }\n    return - c / 2.0 * ( ( --t ) * ( t - 2.0 ) - 1.0 ) + b;\n}\n\nfloat inOutQuad( float t )\n{\n    if( ( t /= 0.5 ) < 1.0 ) return 0.5 * t * t;\n    return -0.5 * ( ( --t ) * ( t-2 ) - 1 );\n}\n\nfloat inCubic( float t, float b, float c, float d )\n{\n    return c * ( t /= d ) * t * t + b;\n}\n\nfloat inCubic( float t )\n{\n    return t * t * t;\n}\n\nfloat outCubic( float t, float b, float c, float d )\n{\n    return c * ( ( t = t/d - 1.0 ) * t * t + 1.0 ) + b;\n}\n\nfloat outCubic( float t )\n{\n    return ( ( --t ) * t * t + 1.0 );\n}\n\nfloat inOutCubic( float t, float b, float c, float d )\n{\n    if( ( t /= d / 2.0 ) < 1.0 ) return  c / 2.0 * t * t * t + b;\n    return c / 2.0 * ( ( t -= 2.0 ) * t * t + 2.0 ) + b;\n}\n\nfloat inOutCubic( float t )\n{\n    if( ( t /= 0.5 ) < 1.0 ) return 0.5 * t * t * t;\n    return 0.5 * ( ( t -= 2.0 ) * t * t + 2.0 );\n}\n\nfloat inQuart( float t, float b, float c, float d )\n{\n    return c * ( t /= d ) * t * t * t + b;\n}\n\nfloat inQuart( float t )\n{\n    return t * t * t * t;\n}\n\nfloat outQuart( float t, float b, float c, float d )\n{\n    return -c * ( ( t = t/d - 1.0 ) * t * t * t - 1.0 ) + b;\n}\n\nfloat outQuart( float t )\n{\n    return - ( ( --t ) * t * t * t - 1.0 );\n}\n\nfloat inOutQuart( float t, float b, float c, float d )\n{\n    if ( ( t /= d / 2.0 ) < 1.0 ) return c / 2.0 * t * t * t * t + b;\n    return -c / 2.0 * ( ( t -= 2.0 ) * t * t * t - 2.0 ) + b;\n}\n\nfloat inOutQuart( float t )\n{\n    if ( (t /= 0.5 ) < 1.0 ) return 0.5 * t * t * t * t;\n    return -0.5 * ( ( t -= 2.0 ) * t * t * t - 2.0 );\n}\n\nfloat inQuint( float t, float b, float c, float d )\n{\n    return c * ( t /= d ) * t * t * t * t + b;\n}\n\nfloat inQuint( float t )\n{\n    return t * t * t * t * t;\n}\n\nfloat outQuint( float t, float b, float c, float d )\n{\n    return c * ( ( t = t/d - 1.0) * t * t * t * t + 1.0 ) + b;\n}\n\nfloat outQuint( float t )\n{\n    return ( ( --t ) * t * t * t * t + 1.0 );\n}\n\nfloat inOutQuint( float t, float b, float c, float d )\n{\n    if( ( t /= d /2.0 ) < 1.0 ) return  c / 2.0 * t * t * t * t * t + b;\n    return c / 2.0 * ( ( t -= 2.0 ) * t * t * t * t + 2.0) + b;\n}\n\nfloat inOutQuint( float t )\n{\n    if ( ( t /= 0.5 ) < 1.0 ) return 0.5 * t * t * t * t * t;\n    return 0.5 * ( ( t -= 2 ) * t * t * t * t + 2.0 );\n}\n\nfloat inSine( float t, float b, float c, float d )\n{\n    return -c * cos( t / d * ( 1.5707963268 ) ) + c + b;\n}\n\nfloat inSine( float t )\n{\n    return -1.0 * cos( t * ( 1.5707963268 ) ) + 1.0;\n}\n\nfloat outSine( float t, float b, float c, float d )\n{\n    return c * sin( t / d * ( 1.5707963268 ) ) + b;\n}\n\nfloat outSine( float t )\n{\n    return sin( t * ( 1.5707963268 ) );\n}\n\nfloat inOutSine( float t, float b, float c, float d )\n{\n    return - c / 2.0 * ( cos( 3.1415926536 * t / d ) - 1.0 ) + b;\n}\n\nfloat inOutSine( float t )\n{\n    return -0.5 * ( cos( 3.1415926536 * t ) - 1.0 );\n}\n\nfloat inExpo( float t, float b, float c, float d )\n{\n    return ( t == 0.0 ) ? b : c * pow( 2.0, 10.0 * ( t / d - 1.0 ) ) + b;\n}\n\nfloat inExpo( float t )\n{\n    return ( t == 0 ) ? 0.0 : pow( 2.0, 10.0 * ( t - 1.0 ) );\n}\n\nfloat outExpo( float t, float b, float c, float d )\n{\n    return ( t == d ) ? b + c : c * ( - pow( 2.0, -10.0 * t / d ) + 1.0 ) + b;\n}\n\nfloat outExpo( float t )\n{\n    return ( t == 1.0 ) ? 1.0 : ( - pow( 2.0, -10.0 * t ) + 1.0 );\n}\n\nfloat inOutExpo( float t, float b, float c, float d )\n{\n    if( t == 0 ) return b;\n    if( t == d ) return b + c;\n    if(( t /= d / 2.0 ) < 1.0 ) return c / 2.0 * pow( 2.0, 10.0 * ( t - 1.0 ) ) + b;\n    return c / 2.0 * ( - pow( 2.0, -10.0 * --t ) + 2.0 ) + b;\n}\n\nfloat inOutExpo( float t )\n{\n    if( t == 0.0 ) return 0.0;\n    if( t == 1.0 ) return 1.0;\n    if( ( t /= 0.5 ) < 1.0 ) return 0.5 * pow( 2.0, 10.0 * ( t - 1.0 ) );\n    return 0.5 * ( - pow( 2.0, -10.0 * --t ) + 2.0 );\n}\n\nfloat inCirc( float t, float b, float c, float d )\n{\n    return -c * ( sqrt( 1.0 - (t/=d)*t) - 1) + b;\n}\n\nfloat inCirc( float t )\n{\n    return - ( sqrt( 1.0 - t*t) - 1);\n}\n\nfloat outCirc( float t, float b, float c, float d )\n{\n    return c * sqrt( 1.0 - (t=t/d-1)*t) + b;\n}\n\nfloat outCirc( float t )\n{\n    return sqrt( 1.0 - (--t)*t);\n}\n\nfloat inOutCirc( float t, float b, float c, float d )\n{\n    if ( ( t /= d / 2.0 ) < 1 ) return - c / 2.0 * ( sqrt( 1.0 - t * t ) - 1.0 ) + b;\n    return c / 2.0 * ( sqrt( 1.0 - ( t -= 2.0 ) * t ) + 1.0 ) + b;\n}\n\nfloat inOutCirc( float t )\n{\n    if( ( t /= 0.5 ) < 1.0 ) return -0.5 * ( sqrt( 1.0 - t * t ) - 1.0 );\n    return 0.5 * ( sqrt( 1.0 - ( t -= 2.0 ) * t ) + 1.0 );\n}\n\nfloat inElastic( float t, float b, float c, float d )\n{\n    float s = 1.70158; float p = 0.0; float a = c;\n    if( t == 0 ) return b;  if( ( t /= d ) == 1 ) return b + c;\n    p = d * 0.3;\n    if( a < abs( c ) ) { a = c; float s = p / 4.0; }\n    else s = 0.1591549431 * p / ( 6.2831853072 ) * asin( c / a );\n    return -( a * pow( 2.0, 10.0 * ( t -= 1.0 ) ) * sin( ( t * d - s ) * ( 6.2831853072 ) / p ) )  + b;\n}\n\nfloat inElastic( float t )\n{\n    float s = 1.70158; float p = 0.0; float a = 1.0;\n    if( t == 0.0 ) return 0.0;\n    if( t == 1.0 ) return 1.0;\n    p = 0.3;\n    s = p / ( 6.2831853072 ) * asin( 1.0 / a );\n    return -( a * pow( 2.0, 10.0 * ( t -= 1.0 ) ) * sin( ( t - s ) * ( 6.2831853072 ) / p ) );\n}\n\nfloat outElastic( float t, float b, float c, float d )\n{\n    float s = 1.70158; float p = 0.0; float a = c;\n    if( t == 0.0 ) return b;\n    if( (t /= d ) == 1.0 ) return b + c;\n    p = d * 0.3;\n    if( a < abs( c ) ) { a = c; s = p / 4.0; }\n    else { s = p / ( 6.2831853072 ) * asin( c / a ); }\n    return a * pow( 2.0, -10.0 * t ) * sin( ( t * d - s ) * ( 6.2831853072 ) / p ) + c + b;\n}\n\nfloat outElastic( float t )\n{\n    float s = 1.70158; float p = 0.0 ; float a = 1.0;\n    if( t == 0.0 ) return 0.0;  if( t == 1.0 ) return 1.0;\n    p = 0.3;\n    s = p / ( 6.2831853072 ) * asin( 1.0 / a );\n    return a * pow( 2.0, -10.0 * t ) * sin( ( t - s ) * ( 6.2831853072 ) / p ) + 1.0;\n}\n\nfloat inOutElastic( float t, float b, float c, float d )\n{\n    float s = 1.70158; float p = 0.0; float a = c;\n    if( t == 0.0 ) return b;\n    if( ( t /= d / 2.0 ) == 2.0 ) return b + c;\n    p = d * ( 0.3 * 1.5 );\n    if( a < abs( c ) ) { a = c; s = p / 4.0; }\n    else { s = p / ( 6.2831853072 ) * asin( c / a ); }\n    if( t < 1.0 ) return -0.5 * ( a * pow( 2.0, 10.0 * ( t -= 1.0 ) ) * sin( ( t * d - s ) * ( 6.2831853072 ) / p ) ) + b;\n    return a * pow( 2.0, -10.0 * ( t -= 1.0 ) ) * sin( ( t * d - s ) * ( 6.2831853072 ) / p ) * 0.5 + c + b;\n}\n\nfloat inOutElastic( float t )\n{\n    float s = 1.70158; float p = 0; float a = 1.0;\n    if( t == 0 ) return 0.0;\n    if( ( t /= 0.5 ) == 2.0 ) return 1.0;\n    p = ( 0.3 * 1.5 );\n    s = p / ( 6.2831853072 ) * asin( 1.0 / a );\n    if( t < 1.0 ) return -0.5 * ( a * pow( 2.0, 10.0 * ( t -= 1.0 ) ) * sin( ( t - s ) * ( 6.2831853072 ) / p ) );\n    return a * pow( 2.0, -10.0 * ( t -= 1.0 ) ) * sin( ( t - s ) * ( 6.2831853072 ) / p ) * 0.5 + 1.0;\n}\n\nfloat inBack( float t, float b, float c, float d )\n{\n    float s = 1.70158;\n    return c * ( t /= d ) * t * ( ( s + 1.0 ) * t - s ) + b;\n}\n\nfloat inBack( float t )\n{\n    float s = 1.70158;\n    return t * t * ( ( s + 1.0 ) * t - s);\n}\n\nfloat outBack( float t,  float b,  float c,  float d )\n{\n    float s = 1.70158;\n    return c * ( ( t = t / d - 1.0 ) * t * ( ( s + 1.0 ) * t + s ) + 1.0 ) + b;\n}\n\nfloat outBack( float t )\n{\n    float s = 1.70158;\n    return ( ( --t ) * t * ( ( s + 1.0 ) * t + s ) + 1.0);\n}\n\nfloat inOutBack( float t, float b, float c, float d )\n{\n    float s = 1.70158;\n    if( ( t /= d / 2.0 ) < 1.0 ) return c / 2.0 * ( t * t * ( ( ( s *= 1.525 ) + 1.0 ) * t - s ) ) + b;\n    return c / 2.0 * ( ( t -= 2.0 ) * t * ( ( ( s *= ( 1.525 ) ) + 1.0 ) * t + s ) + 2.0 ) + b;\n}\n\nfloat inOutBack( float t )\n{\n    float s = 1.70158;\n    if( ( t /= 0.5 ) < 1.0 ) return 0.5 * ( t * t * ( ( ( s *= 1.525 ) + 1.0 ) * t - s ) );\n    return 0.5 * ( ( t -= 2 ) * t * ( ( ( s *= ( 1.525 ) ) + 1.0 ) * t + s ) + 2.0 );\n}\n\nfloat outBounce( float t, float b, float c, float d )\n{\n    if( ( t /= d ) < ( 1.0 / 2.75 ) ) {\n        return c * ( 7.5625 * t * t ) + b;\n    } else if ( t < ( 2.0 / 2.75 ) ) {\n        return c * ( 7.5625 * ( t -= ( 1.5 / 2.75 ) ) * t + 0.75 ) + b;\n    } else if ( t < ( 2.5 / 2.75 ) ) {\n        return c * ( 7.5625 * ( t -= ( 2.25 / 2.75 ) ) * t + 0.9375 ) + b;\n    } else {\n        return c * ( 7.5625 * ( t -= ( 2.625 / 2.75 ) ) * t + 0.984375 ) + b;\n    }\n}\n\nfloat outBounce( float t )\n{\n    if( t < ( 1.0 / 2.75 ) ) {\n        return ( 7.5625 * t * t );\n    } else if ( t < ( 2.0 / 2.75 ) ) {\n        return ( 7.5625 * ( t-= ( 1.5 / 2.75 ) ) * t + .75 );\n    } else if ( t < ( 2.5 / 2.75 ) ) {\n        return ( 7.5625 * ( t -= ( 2.25 / 2.75 ) ) * t + 0.9375 );\n    } else {\n        return ( 7.5625 * ( t -= ( 2.625 / 2.75 ) ) * t + 0.984375 );\n    }\n}\n\nfloat inBounce( float t, float b, float c, float d )\n{\n    return c - outBounce( d - t, 0.0, c, d ) + b;\n}\n\nfloat inBounce( float t )\n{\n    return 1.0 - outBounce( 1.0 - t);\n}\n\nfloat inOutBounce( float t, float b, float c, float d )\n{\n    if ( t < d /2.0 ) return inBounce ( t * 2.0, 0.0, c, d ) * 0.5 + b;\n    return outBounce ( t * 2.0 - d, 0, c, d ) * 0.5 + c * 0.5 + b;\n}\n\nfloat inOutBounce( float t )\n{\n    if ( t < 0.5 ) return inBounce( t * 2.0 ) * 0.5;\n    return outBounce( t * 2.0 - 1.0 ) * 0.5 + 0.5;\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.Gamma="//\n// Author : Reza Ali\n// License : Distributed under the MIT License.\n//\n\nconst vec3 cGammaCorrection = vec3( 0.4545454545 );\n\nvec3 gamma( in vec3 color )\n{\n  return pow( color, cGammaCorrection );\n}\n\nvec4 gamma( in vec4 color )\n{\n  return vec4( gamma( color.rgb ), color.a );\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.Map="//\n// Author : Reza Ali\n// License : Distributed under the MIT License.\n//\n\nfloat map( float value, float inMin, float inMax, float outMin, float outMax )\n{\n    return ( (value - inMin) / ( inMax - inMin ) * ( outMax - outMin ) ) + outMin;\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.Noise="//\n// Author : Patricio Gonzalez Vivo and Jen Lowe\n// License : Distributed under the MIT License.\n// Source : https://github.com/patriciogonzalezvivo/thebookofshaders\n//\nfloat random (in float _x) {\n    return fract(sin(_x)*1e4);\n}\n\nfloat random (in vec2 co) {\n    return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);\n}\n\nfloat noise (in float _x) {\n    float i = floor(_x);\n    float f = fract(_x);\n    float u = f * f * (3.0 - 2.0 * f);\n    return mix(random(i), random(i + 1.0), u);\n}\n\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.Noise2D="//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec2 n2mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 n2mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 n2mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return n2mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = n2mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n   + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}"}(this.Blotter,this._),function(n){n.Assets.Shaders.Noise3D="//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec2 n3mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 n3mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 n3mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return n3mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = n3mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }"}(this.Blotter,this._),function(n){n.Assets.Shaders.Noise4D="//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\n\nfloat mod289(float x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0; }\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat permute(float x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat taylorInvSqrt(float r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 grad4(float j, vec4 ip)\n  {\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;\n\n  return p;\n  }\n\n// (sqrt(5) - 1)/4 = F4, used once below\n#define F4 0.309016994374947451\n\nfloat snoise(vec4 v)\n  {\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\n                        0.276393202250021,  // 2 * G4\n                        0.414589803375032,  // 3 * G4\n                       -0.447213595499958); // -1 + 4 * G4\n\n// First corner\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n// Other corners\n\n// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n//  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\n  vec4 x1 = x0 - i1 + C.xxxx;\n  vec4 x2 = x0 - i2 + C.yyyy;\n  vec4 x3 = x0 - i3 + C.zzzz;\n  vec4 x4 = x0 + C.wwww;\n\n// Permutations\n  i = mod289(i);\n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n// 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n// Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n// Mix contributions from the five corners\n  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n  }"}(this.Blotter,this._),function(n){n.Assets.Shaders.PI="//\n// Author : Reza Ali\n// License : Distributed under the MIT License.\n//\n\n#define TWO_PI 6.2831853072\n#define PI 3.14159265359\n#define HALF_PI 1.57079632679"}(this.Blotter,this._),function(n){n.Assets.Shaders.Random="//\n// Author : Patricio Gonzalez Vivo and Jen Lowe\n// License : Distributed under the MIT License.\n// Source : https://github.com/patriciogonzalezvivo/thebookofshaders\n//\n\nfloat random (in float _x) {\n    return fract(sin(_x)*1e4);\n}\n\nfloat random (in vec2 co) {\n    return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);\n}"}(this.Blotter,this._),function(n,t){n.Mapping=function(n,t,i,r){this.texts=n;this._textBounds=t;this._width=i;this._height=r;this._ratio=1};n.Mapping.prototype=function(){function i(t,i){return i=i||n.TextUtils.ensurePropertyValues().leading,isNaN(i)?-1!==i.toString().indexOf("px")?i=parseInt(i):-1!==i.toString().indexOf("%")&&(i=parseInt(i)/100*t):i*=t,i}return{constructor:n.Mapping,get ratio(){return this._ratio},set ratio(n){this._ratio=n||1},get width(){return this._width*this._ratio},get height(){return this._height*this._ratio},boundsForText:function(t){n.Messaging.ensureInstanceOf(t,n.Text,"Blotter.Text","Blotter.Mapping","boundsForText");var i=this._textBounds[t.id];return i&&(i={w:i.w*this._ratio,h:i.h*this._ratio,x:i.x*this._ratio,y:i.y*this._ratio}),i},toCanvas:function(r){var o=n.CanvasUtils.hiDpiCanvas(this._width,this._height,this._ratio),u=o.getContext("2d",{alpha:!1}),s=new Image,e;for(u.textBaseline="middle",e=0;e<this.texts.length;e++){var f=this.texts[e],h=this._textBounds[f.id],c=i.call(this,f.properties.size,f.properties.leading)/2;u.font=f.properties.style+" "+f.properties.weight+" "+f.properties.size+"px "+f.properties.family;u.save();u.translate(h.x+f.properties.paddingLeft,this._height-(h.y+h.h)+f.properties.paddingTop);u.fillStyle=f.properties.fill;u.fillText(f.value,0,Math.round(c));u.restore()}s.onload=t.bind(function(){u.save();u.scale(1,-1);u.clearRect(0,-1*this._height,this._width,this._height);u.drawImage(s,0,-1*this._height,this._width,this._height);u.restore();r(o)},this);s.src=o.toDataURL("image/png")}}}()}(this.Blotter,this._),function(n,t,i){n.MappingMaterial=function(n,t,i,r){this.mapping=n;this.material=t;this.shaderMaterial=i;this._userUniformDataTextureObjects=r;this.init.apply(this,arguments)};n.MappingMaterial.prototype=function(){function u(n,t,i,r){var u=r.type;"1f"==u?(i[4*t]=n,i[4*t+1]=0,i[4*t+2]=0,i[4*t+3]=0):"2f"==u?(i[4*t]=n[0],i[4*t+1]=n[1],i[4*t+2]=0,i[4*t+3]=0):"3f"==u?(i[4*t]=n[0],i[4*t+1]=n[1],i[4*t+2]=n[2],i[4*t+3]=0):"4f"==u?(i[4*t]=n[0],i[4*t+1]=n[1],i[4*t+2]=n[2],i[4*t+3]=n[3]):(i[4*t]=0,i[4*t+1]=0,i[4*t+2]=0,i[4*t+3]=0)}function r(r){var u={_type:r.userUniform.type,_value:r.userUniform.value,get value(){return this._value},set value(t){if(!n.UniformUtils.validValueForUniformType(this._type,t))return void n.Messaging.logError("Blotter.MappingMaterial",!1,"uniform value not valid for uniform type: "+this._type);this._value=t;this.trigger("update")}};return t.extend(u,i.prototype),u}function f(n,i){return t.reduce(n.texts,function(n,f,e){return n[f.id]=t.reduce(i.userUniforms,function(n,t,f){var o=t.position+e;return n[f]=r(t),n[f].on("update",function(){u(n[f].value,o,i.data,t.userUniform);i.texture.needsUpdate=!0}),n[f].value=t.userUniform.value,n},{}),n},{})}function e(n,i,u){return t.reduce(i.userUniforms,function(f,e,o){return f[o]=r(e),f[o].on("update",function(){t.each(n.texts,function(n){u[n.id][o].value=f[o].value});i.texture.needsUpdate=!0}),f},{})}return{constructor:n.MappingMaterial,get uniforms(){return this.material.uniforms},get mainImage(){return this.material.mainImage},get width(){return this.mapping.width},get height(){return this.mapping.height},get ratio(){return this.mapping.ratio},init:function(){this.textUniformInterface=f(this.mapping,this._userUniformDataTextureObjects);this.uniformInterface=e(this.mapping,this._userUniformDataTextureObjects,this.textUniformInterface)},boundsForText:function(t){return n.Messaging.ensureInstanceOf(t,n.Text,"Blotter.Text","Blotter.MappingMaterial","boundsForText"),this.mapping.boundsForText(t)}}}()}(this.Blotter,this._,this.EventEmitter),function(n,t,i){n.Material=function(){this.init.apply(this,arguments)};n.Material.prototype=function(){function r(){return"void mainImage( out vec4 mainImage, in vec2 fragCoord ) {\nmainImage = textTexture(fragCoord / uResolution);\n}"}function u(r){var u={_type:r.type,_value:r.value,get type(){return this._type},set type(n){this._type=n},get value(){return this._value},set value(t){if(!n.UniformUtils.validValueForUniformType(this._type,t))return void n.Messaging.logError("Blotter.Material",!1,"uniform value not valid for uniform type: "+this._type);this._value=t;this.trigger("update")}};return t.extend(u,i.prototype),u}function f(n){return t.reduce(n,t.bind(function(n,i,r){return n[r]=u(i),n[r].on("update",t.bind(function(){this.trigger("update:uniform",[r])},this)),n},this),{})}return{constructor:n.Material,get needsUpdate(){},set needsUpdate(n){!0===n&&this.trigger("update")},get mainImage(){return this._mainImage},set mainImage(n){this._mainImage=n||r()},get uniforms(){return this._uniforms},set uniforms(i){this._uniforms=f.call(this,n.UniformUtils.extractValidUniforms(t.extend(i,n.UniformUtils.defaultUniforms)))},init:function(){this.mainImage=r();this.uniforms={}}}}();n._extendWithGettersSetters(n.Material.prototype,i.prototype)}(this.Blotter,this._,this.EventEmitter),function(n,t){n.ShaderMaterial=function(){n.Material.apply(this,arguments)};n.ShaderMaterial.prototype=Object.create(n.Material.prototype);n._extendWithGettersSetters(n.ShaderMaterial.prototype,function(){return{constructor:n.ShaderMaterial,init:function(n,i){t.defaults(this,i);this.mainImage=n}}}())}(this.Blotter,this._),function(n,t,i){n.RenderScope=function(t,i){this.text=t;this.blotter=i;this.material={mainImage:this.blotter.material.mainImage};this._mappingMaterial=i.mappingMaterial;this.playing=this.blotter.autoplay;this.timeDelta=0;this.lastDrawTime=!1;this.frameCount=0;this.domElement=n.CanvasUtils.hiDpiCanvas(0,0,this.blotter.ratio,{"class":"b-canvas",html:t.value});this.context=this.domElement.getContext("2d")};n.RenderScope.prototype=function(){function r(){function u(i){t.domElement.addEventListener(i,function(r){var u=n.CanvasUtils.normalizedMousePosition(t.domElement,r);t.emit(i,u)},!1)}for(var t=this,r=["mousedown","mouseup","mousemove","mouseenter","mouseleave"],i=0;i<r.length;i++)u(r[i])}function u(n,t){var i=n.boundsForText(t);if(i)return{w:i.w,h:i.h,x:-1*Math.floor(i.x),y:-1*Math.floor(n.height-(i.y+i.h))}}function f(n,i){t.each(n,function(n,t){var r=i[t],u,f;r&&(u=r.type==n.type,f=r.value==n.value,u&&!f&&(r.value=n.value))})}function e(r){var u={_type:r.type,_value:r.value,get type(){return this._type},set type(){n.Messaging.logError("Blotter.RenderScope",!1,"uniform types may not be updated through a text scope")},get value(){return this._value},set value(t){if(!n.UniformUtils.validValueForUniformType(this._type,t))return void n.Messaging.logError("Blotter.RenderScope",!1,"uniform value not valid for uniform type: "+this._type);this._value=t;this.trigger("update")}};return t.extend(u,i.prototype),u}function o(n){return t.reduce(n,t.bind(function(n,i,r){return n[r]=e(i),n[r].on("update",t.bind(function(){this.trigger("update:uniform",[r])},this)),n},this),{})}function s(){var t=this._mappingMaterial,i=t&&u(t,this.text),r=this.material.uniforms;t&&i&&(n.CanvasUtils.updateCanvasSize(this.domElement,i.w/this.blotter.ratio,i.h/this.blotter.ratio,this.blotter.ratio),this.domElement.innerHTML=this.text.value,this.bounds=i,this.material.uniforms=o.call(this,t.uniforms),this.material.mainImage=t.mainImage,r&&f(r,this.material.uniforms),this.trigger(this.lastUpdated?"update":"ready"),this.lastUpdated=Date.now())}return{constructor:n.RenderScope,get needsUpdate(){},set needsUpdate(n){!0===n&&s.call(this)},get mappingMaterial(){},set mappingMaterial(n){this._mappingMaterial=n},play:function(){this.playing=!0},pause:function(){this.playing=!1},render:function(){if(this.bounds){var n=Date.now();this.frameCount+=1;this.timeDelta=(n-(this.lastDrawTime||n))/1e3;this.lastDrawTime=n;this.context.clearRect(0,0,this.domElement.width,this.domElement.height);this.context.putImageData(this.blotter.imageData,this.bounds.x,this.bounds.y);this.trigger("render",[this.frameCount])}},appendTo:function(n){return"function"==typeof n.append?n.append(this.domElement):n.appendChild(this.domElement),r.call(this),this}}}();n._extendWithGettersSetters(n.RenderScope.prototype,i.prototype)}(this.Blotter,this._,this.EventEmitter),function(n,t,i,r){var u=this;n.Renderer=function(){this._currentAnimationLoop=!1;this._scene=new i.Scene;this._plane=new i.PlaneGeometry(1,1);this._material=new i.MeshBasicMaterial;this._mesh=new i.Mesh(this._plane,this._material);this._scene.add(this._mesh);this._camera=new i.OrthographicCamera(.5,.5,.5,.5,0,100);this.init.apply(this,arguments)};n.Renderer.prototype=function(){function f(n,t){var r=new i.WebGLRenderTarget(n,t,{minFilter:i.LinearFilter,magFilter:i.LinearFilter,format:i.RGBAFormat,type:i.UnsignedByteType});return r.texture.generateMipmaps=!1,r.width=n,r.height=t,r}function r(){n.webglRenderer.render(this._scene,this._camera,this._renderTarget);n.webglRenderer.readRenderTargetPixels(this._renderTarget,0,0,this._renderTarget.width,this._renderTarget.height,this._imageDataArray);this.trigger("render");this._currentAnimationLoop=u.requestAnimationFrame(t.bind(r,this))}return{constructor:n.Renderer,get material(){},set material(n){n instanceof i.Material&&(this._material=n,this._mesh.material=n)},get width(){return this._width},set width(n){this.setSize(n,this._height)},get height(){return this._height},set height(n){this.setSize(this._width,n)},init:function(){this.setSize(1,1)},start:function(){this._currentAnimationLoop||r.call(this)},stop:function(){this._currentAnimationLoop&&(u.cancelAnimationFrame(this._currentAnimationLoop),this._currentAnimationLoop=void 0)},setSize:function(n,t){this._width=Math.trunc(n)||1;this._height=Math.trunc(t)||1;this._mesh.scale.set(this._width,this._height,1);this._camera.left=this._width/-2;this._camera.right=this._width/2;this._camera.top=this._height/2;this._camera.bottom=this._height/-2;this._camera.updateProjectionMatrix();this._renderTarget=f(this._width,this._height);this._viewBuffer=new ArrayBuffer(this._width*this._height*4);this._imageDataArray=new Uint8Array(this._viewBuffer);this._clampedImageDataArray=new Uint8ClampedArray(this._viewBuffer);this.imageData=new ImageData(this._clampedImageDataArray,this._width,this._height)},teardown:function(){this.stop()}}}();n._extendWithGettersSetters(n.Renderer.prototype,r.prototype)}(this.Blotter,this._,this.THREE,this.EventEmitter),function(n,t,i,r){n.BoundsDataTextureBuilder=function(){function n(n){for(var f,i,u=n.texts,r=new Float32Array(4*u.length),t=0;t<u.length;t++)f=u[t],i=n.boundsForText(f),r[4*t]=i.x,r[4*t+1]=n.height-(i.y+i.h),r[4*t+2]=i.w,r[4*t+3]=i.h;return r}return{build:function(t,u){r(function(){var f=n(t),r=new i.DataTexture(f,t.texts.length,1,i.RGBAFormat,i.FloatType);r.needsUpdate=!0;u(r)})}}}()}(this.Blotter,this._,this.THREE,this.setImmediate),function(n,t,i,r){n.IndicesDataTextureBuilder=function(){function n(n,t,i,r){for(var e,o=n.ratio,u=new Float32Array(i*t*4),l=t%1,k=1/n.texts.length/2,f=1;f<u.length/4;f++){for(var c=Math.ceil(f/(t-l)),a=f-(t-l)*(c-1),v=0,y=0,p=0,s=0;s<n.texts.length;s++){var d=n.texts[s],h=n.boundsForText(d),g=h.w/o*r,nt=h.h/o*r,w=h.x/o*r,b=h.y/o*r;if(c>=b&&c<=b+nt&&a>=w&&a<=w+g){v=s/n.texts.length+k;p=1;break}}e=f-1;u[4*e+0]=v;u[4*e+1]=y;u[4*e+2]=y;u[4*e+3]=p}return u}return{build:function(t,u){var f=.5;r(function(){var e=t.width/t.ratio*f,o=t.height/t.ratio*f,s=n(t,e,o,f),r=new i.DataTexture(s,e,o,i.RGBAFormat,i.FloatType);r.flipY=!0;r.needsUpdate=!0;u(r)})}}}()}(this.Blotter,this._,this.THREE,this.setImmediate),function(n,t,i){n.TextTextureBuilder=function(){return{build:function(n,r){var u,f=new i.TextureLoader;n.toCanvas(t.bind(function(n){u=n.toDataURL();f.load(u,t.bind(function(n){n.minFilter=i.LinearFilter;n.magFilter=i.LinearFilter;n.generateMipmaps=!0;n.needsUpdate=!0;r(n)},this))},this))}}}()}(this.Blotter,this._,this.THREE),function(n,t,i,r,u){n.MappingBuilder=function(){function i(n,t){var i=n.w*n.h;return t.w*t.h-i}function f(i){return t.reduce(i,function(t,i){var r=n.TextUtils.sizeForText(i.value,i.properties);return t[i.id]=r,t},[])}return{build:function(t,e){u(function(){var v=n.TextUtils.filterTexts(t),l=f(v),o=new r,s=[],y={},h,a,c,u;for(h in l)l.hasOwnProperty(h)&&(a=l[h],a.referenceId=h,s.push(a));for(o.fit(s.sort(i)),c=0;c<s.length;c++)u=s[c],y[u.referenceId]={w:u.w,h:u.h,x:u.fit.x,y:o.root.h-(u.fit.y+u.h)};e(new n.Mapping(v,y,o.root.w,o.root.h))})}}}()}(this.Blotter,this._,this.THREE,this.GrowingPacker,this.setImmediate),function(n,t,i){n.MappingMaterialBuilder=function(){function r(){return"varying vec2 _vTexCoord;\nvoid main() {\n  _vTexCoord = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}"}function u(i,r,u){var e,f={publicUniformDeclarations:"",publicUniformDefinitions:""},o=(1/i.data.length/2).toFixed(20),s=i.texture.image.width.toFixed(1);return t.reduce(i.userUniforms,function(t,i,u){var f=n.UniformUtils.fullSwizzleStringForUniformType(i.userUniform.type),e=n.UniformUtils.glslDataTypeForUniformType(i.userUniform.type),h="(("+i.position.toFixed(1)+" + ((textIndex - ((1.0 / "+r.toFixed(1)+") / 2.0)) * "+r.toFixed(1)+")) / "+s+") + "+o;return t.publicUniformDeclarations+=e+" "+u+";\n",t.publicUniformDefinitions+="   "+u+" = texture2D(_userUniformsTexture, vec2("+h+", 0.5))."+f+";\n",t},f),e=[n.Assets.Shaders.Blending,n.Assets.Shaders.TextTexture,"uniform sampler2D _uSampler;","uniform vec2 _uCanvasResolution;","uniform sampler2D _uTextIndicesTexture;","uniform sampler2D _uTextBoundsTexture;","varying vec2 _vTexCoord;","vec4 _textBounds;","uniform sampler2D _userUniformsTexture;",f.publicUniformDeclarations,"// Helper function used by user programs to retrieve texel color information within the bounds of","// any given text. This is to be used instead of `texture2D` in the fragment sources for all Blotter materials.","vec4 textTexture(vec2 coord) {","   vec2 adjustedFragCoord = _textBounds.xy + vec2((_textBounds.z * coord.x), (_textBounds.w * coord.y));","   vec2 uv = adjustedFragCoord.xy / _uCanvasResolution;","   //  If adjustedFragCoord falls outside the bounds of the current texel's text, return `vec4(0.0)`.","   if (adjustedFragCoord.x < _textBounds.x ||","       adjustedFragCoord.x > _textBounds.x + _textBounds.z ||","       adjustedFragCoord.y < _textBounds.y ||","       adjustedFragCoord.y > _textBounds.y + _textBounds.w) {","     return vec4(0.0);","   }","   return texture2D(_uSampler, uv);","}","void mainImage(out vec4 mainImage, in vec2 fragCoord);",u,"void main(void) {","   vec4 textIndexData = texture2D(_uTextIndicesTexture, _vTexCoord);","   float textIndex = textIndexData.r;","   float textAlpha = textIndexData.a;","   _textBounds = texture2D(_uTextBoundsTexture, vec2(textIndex, 0.5));",f.publicUniformDefinitions,"   uResolution = _textBounds.zw;","   vec2 fragCoord = gl_FragCoord.xy - _textBounds.xy;","   vec4 outColor;","   mainImage(outColor, fragCoord);","   outColor.a = outColor.a * textAlpha;","   gl_FragColor = outColor;","}"],e.join("\n")}function f(t,i){n.TextTextureBuilder.build(t,function(n){i(n)})}function e(i,r){var f,e,o,u=[];f=function(){return function(t){n.IndicesDataTextureBuilder.build(i,function(n){u.push({uniformName:"_uTextIndicesTexture",texture:n});t()})}};e=function(){return function(t){n.BoundsDataTextureBuilder.build(i,function(n){u.push({uniformName:"_uTextBoundsTexture",texture:n});t()})}};o=[f(),e()];t(o).reduceRight(t.wrap,function(){r(u)})()}function o(r,u,f){n.UniformUtils.ensureHasRequiredDefaultUniforms(r,"Blotter.MappingMaterialBuilder","_buildUserUniformDataTextureObjects");r=n.UniformUtils.extractValidUniforms(r);var e=Object.keys(r).length*u,o=new Float32Array(4*e),h=new i.DataTexture(o,e,1,i.RGBAFormat,i.FloatType),s={data:o,texture:h,userUniforms:{}};t.reduce(r,function(n,t,i){var f=Object.keys(r).indexOf(i)*u;return n.userUniforms[i]={userUniform:t,position:f},n},s);f(s)}function s(n){return t.reduce(n,function(n,t){return n[t.uniformName]={type:"t",value:t.texture},n},{})}function h(n){return{_userUniformsTexture:{type:"t",value:n.texture}}}function c(n,i,r,u,f){var e={_uSampler:{type:"t",value:r},_uCanvasResolution:{type:"2f",value:[n,i]}};return t.extend(e,s(u)),t.extend(e,h(f)),e}function l(n,t,r){var u=new i.ShaderMaterial({vertexShader:n,fragmentShader:t,uniforms:r});return u.depthTest=!1,u.depthWrite=!1,u.premultipliedAlpha=!1,u}return{build:function(i,s,h){var a,v,y,p,w;a=function(){return function(n){f(i,function(t){y=t;n()})}};v=function(){return function(n){e(i,function(t){p=t;n()})}};buildUserUniformDataTextureObjects=function(){return function(n){o(s.uniforms,i.texts.length,function(t){userUniformDataTextureObjects=t;n()})}};w=[a(),v(),buildUserUniformDataTextureObjects()];t(w).reduceRight(t.wrap,function(){var f=c(i.width,i.height,y,p,userUniformDataTextureObjects),e=(t.omit(f,"_uCanvasResolution","_uSampler","_uTextBoundsTexture","_uTextIndicesTexture"),l(r(),u(userUniformDataTextureObjects,i.texts.length,s.mainImage),f));h(new n.MappingMaterial(i,s,e,userUniformDataTextureObjects))})()}}}()}(this.Blotter,this._,this.THREE),function(n){n.LiquidDistortMaterial=function(){n.Material.apply(this,arguments)};n.LiquidDistortMaterial.prototype=Object.create(n.Material.prototype);n._extendWithGettersSetters(n.LiquidDistortMaterial.prototype,function(){function t(){return[n.Assets.Shaders.Noise3D,"void mainImage( out vec4 mainImage, in vec2 fragCoord )","{","    // Setup ========================================================================","    vec2 uv = fragCoord.xy / uResolution.xy;","    float z = uSeed + uGlobalTime * uSpeed;","    uv += snoise(vec3(uv, z)) * uVolatility;","    mainImage = textTexture(uv);","}"].join("\n")}return{constructor:n.LiquidDistortMaterial,init:function(){this.mainImage=t();this.uniforms={uSpeed:{type:"1f",value:1},uVolatility:{type:"1f",value:.15},uSeed:{type:"1f",value:.1}}}}}())}(this.Blotter);